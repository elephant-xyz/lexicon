{
  "classes": [
    {
      "type": "fact_sheet",
      "container_name": "fact_sheets",
      "is_deprecated": false,
      "deprecated_properties": [],
      "description": "Represents a fact sheet document stored on IPFS that contains detailed information about a related entity.",
      "properties": {
        "ipfs_url": {
          "type": "string",
          "format": "ipfs_uri",
          "required": true,
          "comment": "The IPFS URI pointing to the fact sheet document."
        },
        "full_generation_command": {
          "type": "string",
          "required": true,
          "comment": "The full CLI command used to generate fact sheet document, including the exact commit hash of the tool used for generation."
        }
      }
    },
    {
      "type": "school",
      "container_name": "schools",
      "is_deprecated": false,
      "deprecated_properties": [],
      "description": "Represents an educational institution such as an elementary, middle, or high school. Contains information about the school's name, type, ranking, and additional details to help evaluate the educational quality of a property's location.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "school_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The name of the school.",
          "minLength": 1
        },
        "school_type": {
          "enum": [
            "Elementary",
            "Middle",
            "High",
            null
          ],
          "comment": "The type of school.",
          "type": [
            "string",
            "null"
          ]
        },
        "school_ranking": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Ranking of the school.",
          "minLength": 1
        },
        "rating_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 10,
          "comment": "Numerical rating score out of 10."
        },
        "grade_rating": {
          "enum": [
            "A+",
            "A",
            "A-",
            "B+",
            "B",
            "B-",
            "C+",
            "C",
            "C-",
            "D+",
            "D",
            "D-",
            "F",
            null
          ],
          "comment": "Letter grade rating for the school.",
          "type": [
            "string",
            "null"
          ]
        },
        "distance_miles": {
          "type": "number",
          "comment": "Distance from the property to the school in miles."
        },
        "description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Additional description about the school's programs, reputation, or special features.",
          "minLength": 1
        },
        "overall_district_rating": {
          "type": "number",
          "minimum": 0,
          "maximum": 10,
          "comment": "Overall school district rating out of 10."
        }
      }
    },
    {
      "type": "transportation_access",
      "container_name": "transportation_access",
      "is_deprecated": false,
      "deprecated_properties": [],
      "description": "Transportation and commute quality including walkability, highway access, and overall commute assessment.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "commute_quality": {
          "enum": [
            "Excellent",
            "Great",
            "Good",
            "Fair",
            "Poor",
            null
          ],
          "comment": "Overall commute quality assessment.",
          "type": [
            "string",
            "null"
          ]
        },
        "walkability_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "comment": "Walk Score rating for walkability to amenities."
        },
        "walkability_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Description of walkable amenities and access.",
          "minLength": 1
        },
        "highway_access": {
          "enum": [
            "Excellent",
            "Great",
            "Good",
            "Fair",
            "Poor",
            null
          ],
          "comment": "Quality of highway access.",
          "type": [
            "string",
            "null"
          ]
        },
        "major_highways": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "highway_name": {
                "type": [
                  "string",
                  "null"
                ],
                "minLength": 1
              },
              "access_type": {
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "Immediate",
                  "Close",
                  "Moderate",
                  "Distant",
                  null
                ],
                "minLength": 1
              },
              "distance_miles": {
                "type": "number"
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ],
                "minLength": 1
              }
            }
          },
          "comment": "List of major highways and their accessibility.",
          "minItems": 1
        }
      }
    },
    {
      "type": "safety_security",
      "container_name": "safety_security",
      "is_deprecated": false,
      "deprecated_properties": [],
      "description": "Safety and security metrics including crime rates, emergency services response times, and overall safety assessments.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "crime_rate": {
          "enum": [
            "VeryLow",
            "Low",
            "Moderate",
            "High",
            "VeryHigh",
            null
          ],
          "comment": "Overall crime rate assessment for the area.",
          "type": [
            "string",
            "null"
          ]
        },
        "crime_rate_comparison": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Comparison to national average (e.g., '70% below national avg').",
          "minLength": 1
        },
        "emergency_services_response": {
          "enum": [
            "FastResponse",
            "GoodResponse",
            "AverageResponse",
            "SlowResponse",
            null
          ],
          "comment": "Emergency services response time quality.",
          "type": [
            "string",
            "null"
          ]
        },
        "emergency_response_time": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Specific response time range (e.g., '5-7 min response time').",
          "minLength": 1
        },
        "overall_safety_grade": {
          "enum": [
            "A+",
            "A",
            "A-",
            "B+",
            "B",
            "B-",
            "C+",
            "C",
            "C-",
            "D+",
            "D",
            "D-",
            "F",
            null
          ],
          "comment": "Overall safety grade for the area.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    {
      "type": "environment_characteristics",
      "container_name": "environment_characteristics",
      "is_deprecated": false,
      "deprecated_properties": [],
      "description": "Environmental factors, natural disaster risks, and surroundings that affect property desirability and safety.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "fire_zone": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Wildfire risk zone or fire district designation indicating wildfire hazard level and emergency response district.",
          "minLength": 1
        },
        "wildfire_risk_level": {
          "enum": [
            "VeryLow",
            "Low",
            "Moderate",
            "High",
            "VeryHigh",
            "Extreme",
            null
          ],
          "comment": "Standardized wildfire risk assessment based on vegetation, weather patterns, topography, and fire history.",
          "type": [
            "string",
            "null"
          ]
        },
        "air_quality_index": {
          "enum": [
            "Good",
            "Moderate",
            "UnhealthyForSensitiveGroups",
            "Unhealthy",
            "VeryUnhealthy",
            "Hazardous",
            null
          ],
          "comment": "EPA Air Quality Index category indicating typical air pollution levels for the area.",
          "type": [
            "string",
            "null"
          ]
        },
        "air_quality_compliance": {
          "type": "boolean",
          "comment": "Whether area is in attainment for all EPA ambient air quality standards."
        },
        "noise_level": {
          "enum": [
            "Quiet",
            "Moderate",
            "Busy",
            "Loud",
            null
          ],
          "comment": "Ambient noise level in the area affecting quality of life and property desirability.",
          "type": [
            "string",
            "null"
          ]
        },
        "noise_sources": {
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "Highway",
              "Railroad",
              "Airport",
              "Industrial",
              "Traffic",
              "Suburban",
              "None",
              null
            ],
            "minLength": 1
          },
          "comment": "Specific sources of noise in the area.",
          "minItems": 1
        },
        "light_pollution_level": {
          "enum": [
            "Dark",
            "Rural",
            "Suburban",
            "Urban",
            null
          ],
          "comment": "Light pollution level affecting night sky visibility and natural darkness.",
          "type": [
            "string",
            "null"
          ]
        },
        "earthquake_zone": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Seismic zone designation or earthquake risk classification for the area.",
          "minLength": 1
        },
        "soil_stability": {
          "enum": [
            "Stable",
            "Moderate",
            "Unstable",
            "HighRisk",
            null
          ],
          "comment": "Soil stability assessment considering factors like erosion, subsidence, and landslide risk.",
          "type": [
            "string",
            "null"
          ]
        },
        "environmental_hazards": {
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1
          },
          "comment": "List of additional environmental hazards present in the area (e.g., 'Radon', 'Industrial Pollution', 'Mining Activity').",
          "minItems": 1
        },
        "flood_risk_level": {
          "enum": [
            "Minimal",
            "Low",
            "Moderate",
            "High",
            "Extreme",
            null
          ],
          "comment": "Flood risk assessment based on FEMA flood zone data.",
          "type": [
            "string",
            "null"
          ]
        },
        "flood_zone_designation": {
          "type": [
            "string",
            "null"
          ],
          "comment": "FEMA flood zone designation (e.g., 'Zone X', 'Zone AE').",
          "minLength": 1
        },
        "flood_insurance_required": {
          "type": "boolean",
          "comment": "Whether flood insurance is required for the property."
        },
        "wind_storm_risk": {
          "enum": [
            "Minimal",
            "Low",
            "Moderate",
            "High",
            "Extreme",
            null
          ],
          "comment": "Wind storm and hurricane risk assessment.",
          "type": [
            "string",
            "null"
          ]
        },
        "hurricane_engineering_compliance": {
          "type": "boolean",
          "comment": "Whether building is engineered for hurricane winds per current code."
        },
        "radon_risk_level": {
          "enum": [
            "Low",
            "Moderate",
            "High",
            "Concern",
            null
          ],
          "comment": "Radon gas exposure risk assessment.",
          "type": [
            "string",
            "null"
          ]
        },
        "radon_building_type_assessment": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Radon risk specific to building type (e.g., 'rarely an issue in low-rise wood frame condos').",
          "minLength": 1
        },
        "environmental_surroundings": {
          "enum": [
            "CoastalBeach",
            "Mountains",
            "Desert",
            "Forest",
            "Urban",
            "Suburban",
            "Rural",
            "Industrial",
            null
          ],
          "comment": "Primary environmental setting surrounding the property.",
          "type": [
            "string",
            "null"
          ]
        },
        "beach_proximity": {
          "type": "object",
          "properties": {
            "walking_distance": {
              "type": "boolean"
            },
            "beach_name": {
              "type": [
                "string",
                "null"
              ],
              "minLength": 1
            },
            "distance_description": {
              "type": [
                "string",
                "null"
              ],
              "minLength": 1
            }
          },
          "comment": "Details about nearby beach access if applicable."
        }
      }
    },
    {
      "type": "property_ranking_overall",
      "container_name": "property_ranking_overall",
      "is_deprecated": false,
      "deprecated_properties": [],
      "description": "Overall property ranking and assessment scores based on multiple factors including climate, safety, wellness, ambience, and location quality.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "Content-Type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "application/x-www-form-urlencoded",
                    "multipart/form-data",
                    "text/plain",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              }
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "CRLF-formatted and JSON-stringified HTTPS request from which this data can be retrieved.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "overall_ranking_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "comment": "Overall property ranking score out of 100."
        },
        "ranking_percentile": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Percentile ranking description (e.g., 'top 5% of similar listings').",
          "minLength": 1
        },
        "climate_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "comment": "Climate assessment score."
        },
        "safety_grade": {
          "enum": [
            "A+",
            "A",
            "A-",
            "B+",
            "B",
            "B-",
            "C+",
            "C",
            "C-",
            "D+",
            "D",
            "D-",
            "F",
            null
          ],
          "comment": "Safety grade assessment.",
          "type": [
            "string",
            "null"
          ]
        },
        "wellness_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "comment": "Wellness and health factors score."
        },
        "ambience_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "comment": "Ambience and livability score."
        }
      }
    },
    {
      "type": "home_buy_search",
      "container_name": "home_buy_searches",
      "is_deprecated": false,
      "deprecated_properties": [],
      "description": "Represents a saved search criteria for home buyers. Contains search parameters like price range, property features (pets allowed, waterfront, etc.), and notification preferences to help buyers find properties that match their requirements.",
      "properties": {
        "search_name": {
          "type": "string",
          "comment": "The name of the search"
        },
        "listings_ids": {
          "type": "string",
          "comment": "The IDs of the listings that match the search criteria"
        },
        "pets_allowed_indicator": {
          "type": "boolean",
          "comment": "Pets allowed indicates that the property owner or management permits residents to have pets, such as dogs, cats, or other domestic animals."
        },
        "water_front_indicator": {
          "type": "boolean",
          "comment": "Waterfront indicates that the property has direct access to or is located near a body of water, such as a lake, river, ocean, or canal."
        },
        "school_indicator": {
          "type": "boolean",
          "comment": "School indicates that the property is located near an elementary, middle, or high school."
        },
        "gated_community_indicator": {
          "type": "boolean",
          "comment": "Gated community indicates that the property is enclosed by gates or walls and restricts access to residents and their guests."
        },
        "private_pool_indicator": {
          "type": "boolean",
          "comment": "Private pool indicates that the property has a private pool."
        },
        "garage_spaces_indicator": {
          "type": "integer",
          "comment": "Refers to the number of parking spaces available within a garage on the property."
        },
        "price_drop_indicator": {
          "type": "boolean",
          "comment": "Show listed properties in descending order indicator."
        },
        "new_listings_indicator": {
          "type": "boolean",
          "comment": "Show newly listed properties indicator."
        },
        "featured_indicator": {
          "type": "boolean",
          "comment": "The status of the validation provider."
        },
        "email_frequency": {
          "enum": [
            "Instant",
            "Daily",
            "Weekly",
            null
          ],
          "comment": "The frequency of tracking the buy search the customer desired.",
          "type": [
            "string",
            "null"
          ]
        },
        "current_list_price_min": {
          "type": "decimal",
          "comment": "The minimum current list price of the property. This allows for filtering properties with a list price greater than or equal to the specified amount."
        },
        "current_list_price_max": {
          "type": "decimal",
          "comment": "The maximum current list price of the property. This allows for filtering properties with a list price less than or equal to the specified amount."
        }
      },
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "The person ID who performed the search"
        }
      }
    },
    {
      "type": "saved_property",
      "container_name": "saved_properties",
      "is_deprecated": false,
      "deprecated_properties": [],
      "description": "Represents a property that has been saved or liked by a user. Tracks user preferences and allows users to maintain a list of properties they are interested in for future reference.",
      "properties": {
        "listing_id": {
          "type": "string",
          "comment": "The ID of the listing that was saved"
        },
        "liked_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the property was liked by the user"
        }
      },
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "The person ID who performed the search"
        },
        "has_property": {
          "targets": [
            "property"
          ],
          "comment": "Indicates that a customer Like a specific property."
        }
      }
    },
    {
      "type": "liked_search",
      "container_name": "liked_searches",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "search_shorten_url": {
          "type": "string",
          "comment": "the shorten link of the liked properties"
        }
      },
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "The person ID who performed the search"
        }
      }
    },
    {
      "type": "home_sell_tracking",
      "container_name": "home_sales_tracking",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "email_frequency": {
          "enum": [
            "Instant",
            "Daily",
            "Weekly",
            null
          ],
          "comment": "The frequency of tracking the sell search the customer desired .",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "The person ID who performed the search"
        },
        "has_address": {
          "targets": [
            "address"
          ],
          "comment": "The address ID of the property the customer is selling."
        }
      }
    },
    {
      "type": "mortgage_rate_tracking",
      "container_name": "mortgage_rates_tracking",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "email_frequency": {
          "enum": [
            "Instant",
            "Daily",
            "Weekly",
            null
          ],
          "comment": "The frequency of tracking the sell search the customer desired .",
          "type": [
            "string",
            "null"
          ]
        },
        "credit_score": {
          "type": "integer",
          "comment": "The credit score of the customer."
        },
        "usage_type": {
          "enum": [
            "PrimaryResidence",
            "SecondHome",
            "Investment",
            null
          ],
          "comment": "Property usage type the customer is willing to buy",
          "type": [
            "string",
            "null"
          ]
        },
        "monthly_payment": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2
          },
          "comment": "Amount of payment customer is willing to pay monthly."
        }
      },
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "The person ID who performed the search"
        }
      }
    },
    {
      "type": "mailpiece",
      "container_name": "mailpieces",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "address_bar_code_image": {
          "required": true,
          "type": "string",
          "comment": "Contains a staircase blob identifier to an image of an address bar code."
        },
        "indicia_image": {
          "required": true,
          "type": "string",
          "comment": "Contains a staircase blob identifier to an indicia image."
        },
        "tray_label": {
          "required": true,
          "type": "string",
          "comment": "Label representing tray ID assigned by USPS."
        }
      },
      "relationships": {
        "has_customer_contact": {
          "targets": [
            "customer_contact"
          ],
          "comment": "Describes details about an interaction with a customer."
        }
      }
    },
    {
      "type": "unsubscribe",
      "container_name": "unsubscribes",
      "comment": "Provides deatils on people who have requested that Staircase no longer targets them for solicitation.",
      "is_deprecated": false,
      "deprecated_properties": [
        "has_unsubscribe"
      ],
      "properties": {
        "unsubscribe_reason": {
          "type": "string",
          "comment": "Indicates the reason why a person has requested to no longer receive communications from Staircase."
        },
        "unsubscribe_timestamp": {
          "type": "dateTime",
          "comment": "The date and time that a person requested to no longer receive communications from Staircase."
        },
        "unsubscribe_identifier": {
          "type": "string",
          "comment": "Indicates the source of the unsubscribe request."
        }
      },
      "relationships": {
        "has_input_name": {
          "targets": [
            "person"
          ]
        },
        "has_email_address": {
          "targets": [
            "communication"
          ]
        },
        "has_phone_number": {
          "targets": [
            "communication"
          ]
        },
        "has_residence": {
          "targets": [
            "residence"
          ]
        },
        "has_unsubscribe": {
          "targets": [
            "unsubscribe"
          ]
        },
        "has_lead": {
          "targets": [
            "lead"
          ]
        }
      }
    },
    {
      "type": "credit_summary",
      "container_name": "credit_summaries",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "credit_summary_name": {
          "type": "string",
          "comment": "Provides a descriptive identifier for a set of credit-related data aggregated within a credit summary."
        }
      },
      "relationships": {
        "has_credit_summary_data_set": {
          "targets": [
            "credit_summary_data_set"
          ],
          "comment": "Refers to a collection of related data elements that together provide specific information about a particular aspect of an individual's credit profile."
        }
      }
    },
    {
      "type": "terms_of_refinance",
      "container_name": "terms_of_refinances",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "estimated_cash_out_amount": {
          "type": "decimal",
          "comment": "The estimated amount of cash that the borrower may receive at closing based on a calculation agreed to by the parties to the transaction.",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          }
        },
        "refinance_program_type": {
          "enum": [
            "InterestRateReduction",
            "StreamlinedWithoutAppraisal",
            "FullDocumentation",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "refinance_program_type_other_description": {
          "type": "string",
          "comment": "A free-form text field to capture additional detail when 'other' is selected for the refinance program type."
        },
        "refinance_type": {
          "enum": [
            "LimitedCashOut",
            "CashOut",
            "NoCashOut",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "total_prior_lien_payoff_amount": {
          "type": "decimal",
          "comment": "The total dollar amount of the refinance proceeds that is applied to liens on the subject property. In most cases, this refers to the existing mortgage on the property being refinanced.",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          }
        },
        "current_first_mortgage_holder_type": {
          "enum": [
            "FannieMae",
            "FreddieMac",
            "Unknown",
            null
          ],
          "comment": "Specifies the investor holding the first mortgage that is being refinanced.",
          "type": [
            "string",
            "null"
          ]
        },
        "current_first_mortgage_holder_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to capture the enumeration when Other is selected for the current first mortgage holder."
        }
      },
      "relationships": {}
    },
    {
      "type": "credit_summary_data_set",
      "container_name": "credit_summary_data_sets",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "data_set_name": {
          "type": "string",
          "comment": "A specific identifier that describes the type of credit information contained within that data set."
        },
        "data_set_value": {
          "type": "string",
          "comment": "Refers to the actual data or measurement corresponding to a specific DataSetName."
        }
      }
    },
    {
      "type": "address_validation",
      "container_name": "address_validations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "google_validation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the address has been validated by Google."
        },
        "usps_validation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the address has been validated by the United States Postal Service (USPS)."
        },
        "validation_datetime": {
          "type": "dateTime",
          "comment": "The date and time that the address was validated."
        }
      },
      "relationships": {}
    },
    {
      "type": "unnormalized_address",
      "container_name": "unnormalized_address",
      "description": "An unnormalized address schema containing raw address data as typically found in source systems before standardization or parsing into individual components.",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "full_address": {
          "type": "string",
          "minLength": 1,
          "comment": "The street address of the property including street number, street name, city, and state and postal code. Format: '123 Main, Springfield, IL' or '456 Oak Ave, Chicago, IL 1003'."
        },
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "comment": "Query string parameters for the request, where each key can have multiple values.",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "comment": "the JSON data that is returned from the request.",
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "county_jurisdiction": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(?!.*\\b[Cc]ounty\\b)[A-Za-z\\s]+$",
          "comment": "The name of the county or local jurisdiction that has authority over the property for tax assessment and administrative purposes. Should not include the word 'County' in the value.",
          "minLength": 1
        }
      },
      "example": {
        "full_address": "2558 GARDENS PKWY",
        "source_http_request": {
          "method": "GET",
          "url": "https://pbcpao.gov/Property/Details",
          "multiValueQueryString": {
            "parcelId": [
              "52434205310037080"
            ]
          }
        },
        "request_identifier": "52434205310037080",
        "county_jurisdiction": "Palm Beach"
      }
    },
    {
      "type": "address",
      "container_name": "addresses",
      "is_deprecated": false,
      "deprecated_properties": [
        "has_address_validation",
        "address_line_1",
        "address_line_2",
        "cbsa_code",
        "census_block_group_identifier",
        "census_block_identifier",
        "census_tract_base_identifier",
        "census_tract_identifier",
        "census_tract_suffix_identifier",
        "congressional_district_identifier",
        "core_based_statistical_area_code",
        "core_based_statistical_area_division_code",
        "metropolitan_division_identifier",
        "msa_identifier",
        "fips_country_code",
        "fips_county_code",
        "fips_county_subdivision_code",
        "fips_county_subdivision_name",
        "fips_county_subdivision_type",
        "fips_place_code",
        "fips_place_name",
        "fips_state_alpha_code",
        "fips_state_numeric_code",
        "delivery_point_bar_code",
        "delivery_point_bar_code_check",
        "highway_contract_route_identifier",
        "carrier_route_code",
        "judicial_district_name",
        "judicial_division_name",
        "recording_jurisdiction_name",
        "recording_jurisdiction_type",
        "rural_route_identifier",
        "rural_route_box_identifier",
        "map_reference_identifier",
        "map_reference_second_identifier",
        "school_district_name",
        "address_type_other_description",
        "recording_jurisdiction_type_other_description",
        "address_identifier",
        "full_address",
        "full_address_slug",
        "address_format_type",
        "address_line_3",
        "address_type",
        "address_unit_designator_type",
        "attention_to_name",
        "created_datetime",
        "last_updated_datetime",
        "mail_stop_code",
        "municipality_name",
        "plus_four_postal_code_type",
        "created_datetime",
        "last_updated_datetime",
        "mail_stop_code",
        "municipality_name",
        "post_office_box_identifier",
        "post_office_box_identifier",
        "unincorporated_area_name",
        "country_name",
        "county_code",
        "sequence_number",
        "street_primary_number",
        "state_name",
        "street_suffix"
      ],
      "description": "Represents a physical or mailing address with comprehensive location details including street information, postal codes and geographic identifiers.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "full_address_slug": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A URL-friendly string derived from the full address by replacing non-alphanumeric characters (e.g., spaces, punctuation) with dashes.",
          "minLength": 1
        },
        "address_format_type": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Address format type refers to the different conventions or standards used to structure and format addresses in various countries or regions.",
          "minLength": 1
        },
        "address_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "An address identifier is a unique alphanumeric string used to identify a specific address.",
          "minLength": 1
        },
        "address_line_1": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Address line 1 is the first line of the address where the primary information for locating a specific location or recipient is provided.",
          "minLength": 1
        },
        "address_line_2": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Address line 2 is the second line of the address where the primary information for locating a specific location or recipient is provided.",
          "minLength": 1
        },
        "address_line_3": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Address line 3 is the third line of the address where the primary information for locating a specific location or recipient is provided.",
          "minLength": 1
        },
        "address_type": {
          "enum": [
            "Prior",
            "Primary",
            "AsShownOnTaxReturn",
            "CorporateHeadquarters",
            "Mailing",
            "Current",
            "Location",
            "LegalEntityFormation",
            null
          ],
          "comment": "Address type is a classification or categorization of an address based on its purpose or characteristics.",
          "type": [
            "string",
            "null"
          ]
        },
        "address_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "If an address type is 'other,' address type other description provides more details on the address type.",
          "minLength": 1
        },
        "address_unit_designator_type": {
          "enum": [
            "Penthouse",
            "Trailer",
            "Key",
            "Hangar",
            "Pier",
            "Lobby",
            "Side",
            "Department",
            "Floor",
            "Office",
            "Basement",
            "Rear",
            "Front",
            "Room",
            "Apartment",
            "Unit",
            "Space",
            "Stop",
            "Suite",
            "Condo",
            "Upper",
            "Lot",
            "Building",
            "Lower",
            null
          ],
          "comment": "Address unit designator type describes the category that a specific unit belongs to.",
          "type": [
            "string",
            "null"
          ]
        },
        "attention_to_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "An attention to name on an address is an optional line that can be included in an address to indicate the name of a specific person or department within an organization to whom the mail is intended.",
          "minLength": 1
        },
        "carrier_route_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A carrier route code is a unique identifier assigned by the United States Postal Service (USPS) to a specific mail delivery route or group of addresses serviced by a single mail carrier.",
          "minLength": 1
        },
        "cbsa_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A CBSA code is a Canada Border Services Agency (CBSA) code, which is a unique identifier assigned to specific ports, airports, or border crossing points in Canada. The CBSA code helps facilitate the import/export process and customs clearance activities at these designated locations.",
          "minLength": 1
        },
        "census_block_group_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A single digit number which is the first digit of all the blocks which comprise the block group. A statistical subdivision of a census tract, a block group is the smallest geographic unit for which the Census Bureau tabulates sample data. Example: block g",
          "minLength": 1
        },
        "census_block_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A four-digit number to identify a census block. A subdivision of a census tract, a block is the smallest geographic unit for which the Census Bureau tabulates 100-percent data. Many blocks correspond to individual city blocks bounded by streets, but block",
          "minLength": 1
        },
        "census_tract_base_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A four-digit number used to identify a census tract. A census tract is a small, relatively permanent statistical subdivision of a county delineated by a local committee of census data users for the purpose of presenting data. Census tract numbers are alwa",
          "minLength": 1
        },
        "census_tract_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifies census tract as defined by the U.S. Census Bureau where subject property is located.",
          "minLength": 1
        },
        "census_tract_suffix_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Census tract suffixes may range from 01 to 98. Many census tracts do not have a suffix; in such cases, the suffix field is either left blank or is zero-filled. The decimal point separating the four-digit basic tract number from the two-digit suffix is sho",
          "minLength": 1
        },
        "city_name": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "pattern": "^[A-Z\\s\\-']+$",
          "comment": "City name refers to the name of the city in which the address is located. Must be in all capital letters."
        },
        "congressional_district_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A two-digit numeric code to identify each Congressional District within a State. These codes are unique within each State. A congressional district identifies an electoral constituency that elects a single member of a congress.",
          "minLength": 1
        },
        "core_based_statistical_area_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A five digit code representing a functional region based around an urban center of at least 10,000 people, based on standards published by the Office of Management and Budget (OMB) in 2000. The CBSA code refers collectively to metropolitan and micropolita",
          "minLength": 1
        },
        "core_based_statistical_area_division_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Metropolitan Divisions are defined within Metropolitan Statistical Areas that have a single core with a population of at least 2.5 million. Not all Metropolitan Statistical Areas with urbanized areas of this size will contain Metropolitan Divisions. Metro",
          "minLength": 1
        },
        "country_code": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "Country code is a code that represents the country in which the address is located."
        },
        "country_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Country name refers to the name of the country in which the address is located.",
          "minLength": 1
        },
        "county_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "County code is a code that represents the county in which the address is located.",
          "minLength": 1
        },
        "county_name": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(?!.*\\b[Cc]ounty\\b).*$",
          "comment": "County name refers to the name of the county in which the address is located.",
          "minLength": 1
        },
        "created_datetime": {
          "type": "dateTime",
          "comment": "Created_datetime describes when an address was created in a system."
        },
        "delivery_point_bar_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A Delivery Point Barcode (DPBC) is a barcode used by the United States Postal Service (USPS) to facilitate the automated sorting and delivery of mail. It contains encoded information that helps identify the specific delivery point or address to which mail should be delivered.",
          "minLength": 1
        },
        "delivery_point_bar_code_check": {
          "enum": [
            "S",
            "Y",
            "N",
            "D",
            null
          ],
          "comment": "A Delivery Point Barcode (DPBC) check is a verification process used to ensure the accuracy and validity of a Delivery Point Barcode, which is a barcode used by the United States Postal Service (USPS) to automate the sorting and delivery of mail.",
          "type": [
            "string",
            "null"
          ]
        },
        "fips_country_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A unique two letter alpha code to identify each country. These Country codes are part of the Federal Information Processing Standards (FIPS), an official coding system developed by the National Institute of Standards and Technology (NIST, formerly the National Bureau of Standards), U.S. Department of Commerce, and maintained by the U.S. Geological Survey (USGS)Renamed. Used to be Country FIPS Code.",
          "minLength": 1
        },
        "fips_county_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Code identifying the county. (Designator Code based on Federal Information Processing Standard Publication 6-4)Renamed. Used to be County FIPS Code.",
          "minLength": 1
        },
        "fips_county_subdivision_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The Federal Information Processing Standards (FIPS) County Subdivision Code identifies all county subdivisions in the 50 states, District of Columbia and Puerto Rico. The Minor Civil Division (MCD) and Census County Division (CCD) are geocodes that are part of the FIPS 55 system, developed by the National Institute of Standards and Technology (NIST) and now maintained by the U.S. Geological Survey. The FIPS 55 system identifies named entities with a unique five-digit numeric locality code. The FIPS 55 locality codes identify governmentally functioning MCDs within a numeric range from 00001 to 89999. The codes in this range also represent incorporated places, Census Designated Places (CDP), and Alaska Native and American Indian areas, together with other entities not included in the tabulations of the decennial census, such as named localities, military installations, and National Parks. All these entity names are combined and listed in a single alphabetic sequence. The FIPS code range, 90000 to 98999, is reserved for CCDs and nonfunctioning MCDs where they cover whole States, whole counties, or their statistically equivalent entities.",
          "minLength": 1
        },
        "fips_county_subdivision_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The formal name or description for a county subdivision that is referenced by the FIPS County Subdivision Code. For example, Jones Township.",
          "minLength": 1
        },
        "fips_county_subdivision_type": {
          "enum": [
            "MinorCivilDivision",
            "CensusCountyDivision",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "fips_place_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A five-digit numeric code assigned by the National Institute of Standards and Technology (NIST), and maintained by the U.S. Geological Survey (USGS), to identify populated places, primary county divisions, and other locational entities within a State. The NIST assigns the codes based on the alphabetic sequence of the entity names; it documents the codes in FIPS PUB 55. This information is used by the US Census Bureau.",
          "minLength": 1
        },
        "fips_place_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The formal name of a statistical entity as defined by the by the National Institute of Standards and Technology (NIST), and maintained by the U.S. Geological Survey (USGS), that is referenced by the FIPS Place Code. Place includes Census Bureau designated places, consolidated cities, and incorporated places. This is also represented by the 5-digit FIPS Place Code. This information is used by the US Census Bureau.",
          "minLength": 1
        },
        "fips_state_alpha_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A unique two letter alpha code to identify each State and State equivalent entity. These State codes are part of the Federal Information Processing Standards (FIPS), an official coding system developed by the National Institute of Standards and Technology (NIST, formerly the National Bureau of Standards), U.S. Department of Commerce, and maintained by the U.S. Geological Survey (USGS). The FIPS state alpha code for each U.S. states and the District of Columbia is identical to the postal abbreviations by the United States Postal Service. Since September 3, 1987, the same has been true of the alpha code for each of the outlying areas, with the exception of U.S. Minor Outlying Islands (UM) as the USPS routes mail for these islands indirectly.Renamed. Used to be State FIPS Alpha Code.",
          "minLength": 1
        },
        "fips_state_numeric_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A unique two digit numeric code to identify each State and State equivalent entity. These State codes are part of the Federal Information Processing Standards (FIPS), an official coding system developed by the National Institute of Standards and Technology (NIST, formerly the National Bureau of Standards), U.S. Department of Commerce, and maintained by the U.S. Geological Survey (USGS).Renamed. Used to be State FIPS Numeric Code.",
          "minLength": 1
        },
        "full_address": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A full address includes all the necessary information to identify and locate a specific location or recipient. ",
          "minLength": 1
        },
        "highway_contract_route_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A highway contract route (HCR) identifier is a unique code assigned to a specific highway contract route used for mail transportation by the United States Postal Service (USPS).",
          "minLength": 1
        },
        "judicial_district_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The name of the Judicial District in which the subject property resides.",
          "minLength": 1
        },
        "judicial_division_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The name of the Judicial Division in which the subject property resides.",
          "minLength": 1
        },
        "last_updated_datetime": {
          "type": "dateTime",
          "comment": "Last_updated_datetime describes when an address was last updated in a system."
        },
        "latitude": {
          "type": [
            "number",
            "null"
          ],
          "comment": "Latitude is a coordinate that specifies the north-south position of a point on the Earth's surface. It is an angular measurement, usually expressed in degrees, with values ranging from -90° at the South Pole to +90° at the North Pole."
        },
        "longitude": {
          "type": [
            "number",
            "null"
          ],
          "comment": "Longitude is a coordinate that specifies the east-west position of a point on the Earth's surface. It is an angular measurement, usually expressed in degrees, with values ranging from -180° to +180°."
        },
        "mail_stop_code": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A mail stop code, also known as a mail code or department code, is a unique identifier used within an organization to facilitate the sorting and delivery of internal mail or correspondence. It is primarily used in large organizations where there may be multiple departments or units located in the same physical location.",
          "minLength": 1
        },
        "map_reference_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A reference to a regionally specific map document that assists in locating a property. May refer to locally available published map products (e.g. Thomas Map in CA) or a county tax map.",
          "minLength": 1
        },
        "map_reference_second_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A secondary reference to a regionally specific map document that assists in locating a property. May refer to locally available published map products (e.g. Thomas Map in CA) or a county tax map.",
          "minLength": 1
        },
        "metropolitan_division_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A unique alphanumeric string identifying the Metropolitan Division (MD) where the property is located. An MD is a sub part of an MSA (Metropolitan Statistical Area).",
          "minLength": 1
        },
        "msa_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifies Metropolitan Statistical Area (MSA) where subject property is located. A MSA is a contiguous geographic area consisting of an urban center city and its surrounding suburbs.",
          "minLength": 1
        },
        "municipality_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The name of the municipality in which property is located.",
          "minLength": 1
        },
        "plus_four_postal_code": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\d{4}$",
          "comment": "A postal code plus four, also known as a ZIP code plus four (in the United States) is a numerical extension to a postal code.",
          "minLength": 1
        },
        "plus_four_postal_code_type": {
          "enum": [
            "P",
            "S",
            "POBoxAddress",
            "GeneralDeliveryAddress",
            "RuralRouteAddress",
            "R",
            "StreetOrResidentialAddress",
            "HighRiseOrBusinessComplex",
            "H",
            "F",
            "FirmOrCompanyAddress",
            "G",
            null
          ],
          "comment": "The plus_four_postal_code_type field, assigned by USPS (United States Postal Service), is used to categorize and define the type of address by indicating whether it includes an extended four-digit code, facilitating mail sorting and delivery in the United States.",
          "type": [
            "string",
            "null"
          ]
        },
        "post_office_box_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A post office box identifier refers to the unique number or alphanumeric code assigned to an individual or organization's post office box (PO Box) for receiving mail at a post office facility.",
          "minLength": 1
        },
        "postal_code": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\d{5}$",
          "comment": "A postal code, also known as a ZIP code (in the United States) or postcode (in many other countries), is a numerical code used by postal services to identify specific geographic areas for efficient mail sorting and delivery.",
          "minLength": 1
        },
        "recording_jurisdiction_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The name of the Recording Jurisdiction in which the subject property resides.",
          "minLength": 1
        },
        "recording_jurisdiction_type": {
          "enum": [
            "County",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "recording_jurisdiction_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The description of the Recording Jurisdiction Type when Other is selected from the enumerated list.",
          "minLength": 1
        },
        "rural_route_box_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A rural route box identifier, also known as an RR box identifier, is a number or alphanumeric code assigned to a mailbox or mail receptacle on a rural route.",
          "minLength": 1
        },
        "rural_route_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A rural route identifier, also known as an RR identifier, is a number or alphanumeric code assigned to a specific rural route for mail delivery. In rural areas, where homes and businesses are often spread out over long distances, a rural route is a designated path followed by mail carriers to deliver mail to multiple addresses along that route.",
          "minLength": 1
        },
        "school_district_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The name of the school district in which the property is located.",
          "minLength": 1
        },
        "sequence_number": {
          "type": [
            "string",
            "null"
          ],
          "comment": "An address sequence number is a unique numerical identifier assigned to an address within a specific sequence or order. It is used to indicate the position or sequence of an address within a given range or list.",
          "minLength": 1
        },
        "state_code": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^[A-Z]{2}$",
          "comment": "State code is a code that represents the state in which the address is located.",
          "minLength": 1
        },
        "state_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "State name refers to the name of the state in which the address is located.",
          "minLength": 1
        },
        "street_name": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(?!.*(\\b(E|N|NE|NW|S|SE|SW|W)\\b)).*$",
          "minLength": 1,
          "comment": "A street name that doesn't contain directional abbreviations"
        },
        "street_post_directional_text": {
          "enum": [
            "N",
            "S",
            "E",
            "W",
            "NE",
            "NW",
            "SE",
            "SW",
            null
          ],
          "type": [
            "string",
            "null"
          ],
          "comment": "Street post directional text refers to the directional indicator or suffix added to a street name to provide additional information about the direction or orientation of the street segment. It helps to clarify the position of a particular street in relation to other streets or landmarks in a given area."
        },
        "street_pre_directional_text": {
          "enum": [
            "N",
            "S",
            "E",
            "W",
            "NE",
            "NW",
            "SE",
            "SW",
            null
          ],
          "type": [
            "string",
            "null"
          ],
          "comment": "Street pre directional text refers to the directional indicator or prefix added to a street name to provide additional information about the direction or orientation of the street segment. It helps to clarify the position of a particular street in relation to other streets or landmarks in a given area."
        },
        "street_primary_number": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Street primary number refers to the numerical part of a street address that indicates the specific location or position of a building or property along a street.",
          "minLength": 1
        },
        "street_number": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "Street  number refers to the numerical part of a street address that indicates the specific location or position of a building or property along a street."
        },
        "street_suffix": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A street suffix, also known as a street type or street name suffix, is a word or abbreviation that follows the street name in an address, indicating the type or category of the street (e.g., Drive, Circle, Boulevard).",
          "minLength": 1
        },
        "street_suffix_type": {
          "enum": [
            "Rds",
            "Blvd",
            "Lk",
            "Pike",
            "Ky",
            "Vw",
            "Curv",
            "Psge",
            "Ldg",
            "Mt",
            "Un",
            "Mdw",
            "Via",
            "Cor",
            "Kys",
            "Vl",
            "Pr",
            "Cv",
            "Isle",
            "Lgt",
            "Hbr",
            "Btm",
            "Hl",
            "Mews",
            "Hls",
            "Pnes",
            "Lgts",
            "Strm",
            "Hwy",
            "Trwy",
            "Skwy",
            "Is",
            "Est",
            "Vws",
            "Ave",
            "Exts",
            "Cvs",
            "Row",
            "Rte",
            "Fall",
            "Gtwy",
            "Wls",
            "Clb",
            "Frk",
            "Cpe",
            "Fwy",
            "Knls",
            "Rdg",
            "Jct",
            "Rst",
            "Spgs",
            "Cir",
            "Crst",
            "Expy",
            "Smt",
            "Trfy",
            "Cors",
            "Land",
            "Uns",
            "Jcts",
            "Ways",
            "Trl",
            "Way",
            "Trlr",
            "Aly",
            "Spg",
            "Pkwy",
            "Cmn",
            "Dr",
            "Grns",
            "Oval",
            "Cirs",
            "Pt",
            "Shls",
            "Vly",
            "Hts",
            "Clf",
            "Flt",
            "Mall",
            "Frds",
            "Cyn",
            "Lndg",
            "Mdws",
            "Rd",
            "Xrds",
            "Ter",
            "Prt",
            "Radl",
            "Grvs",
            "Rdgs",
            "Inlt",
            "Trak",
            "Byu",
            "Vlgs",
            "Ctr",
            "Ml",
            "Cts",
            "Arc",
            "Bnd",
            "Riv",
            "Flds",
            "Mtwy",
            "Msn",
            "Shrs",
            "Rue",
            "Crse",
            "Cres",
            "Anx",
            "Drs",
            "Sts",
            "Holw",
            "Vlg",
            "Prts",
            "Sta",
            "Fld",
            "Xrd",
            "Wall",
            "Tpke",
            "Ft",
            "Bg",
            "Knl",
            "Plz",
            "St",
            "Cswy",
            "Bgs",
            "Rnch",
            "Frks",
            "Ln",
            "Mtn",
            "Ctrs",
            "Orch",
            "Iss",
            "Brks",
            "Br",
            "Fls",
            "Trce",
            "Park",
            "Gdns",
            "Rpds",
            "Shl",
            "Lf",
            "Rpd",
            "Lcks",
            "Gln",
            "Pl",
            "Path",
            "Vis",
            "Lks",
            "Run",
            "Frg",
            "Brg",
            "Sqs",
            "Xing",
            "Pln",
            "Glns",
            "Blfs",
            "Plns",
            "Dl",
            "Clfs",
            "Ext",
            "Pass",
            "Gdn",
            "Brk",
            "Grn",
            "Mnr",
            "Cp",
            "Pne",
            "Spur",
            "Opas",
            "Upas",
            "Tunl",
            "Sq",
            "Lck",
            "Ests",
            "Shr",
            "Dm",
            "Mls",
            "Wl",
            "Mnrs",
            "Stra",
            "Frgs",
            "Frst",
            "Flts",
            "Ct",
            "Mtns",
            "Frd",
            "Nck",
            "Ramp",
            "Vlys",
            "Pts",
            "Bch",
            "Loop",
            "Byp",
            "Cmns",
            "Fry",
            "Walk",
            "Hbrs",
            "Dv",
            "Hvn",
            "Blf",
            "Grv",
            "Crk",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "unincorporated_area_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Area where the property resides if it is not incorporated into a city, town, village, etc.",
          "minLength": 1
        },
        "unit_identifier": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "A unit identifier is a reference to the specific unit, suite, apartment, or other secondary identifier associated with an address. It is used to differentiate individual units within a larger building or complex."
        },
        "route_number": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A route number is a unique identifier assigned to a specific transportation route, such as a road, highway, or public transit line. It is used to distinguish one route from another and is often displayed on signs or maps.",
          "minLength": 1
        },
        "township": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A township is a 6-mile by 6-mile square of land, covering 36 square miles. Townships are numbered north or south from a designated baseline. In this case, Township 45 refers to the 45th tier of townships from the baseline.",
          "minLength": 1
        },
        "range": {
          "type": [
            "string",
            "null"
          ],
          "comment": " A range describes the east-west position of a township relative to a principal meridian. Range 24E means the township is located 24 tiers east of the principal meridian",
          "minLength": 1
        },
        "section": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Each township is divided into 36 sections, with each section being 1 square mile (640 acres). Section 03 refers to the third section within its township",
          "minLength": 1
        },
        "block": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A block is a further subdivision within a plat (a recorded land division), often used in urban or planned developments. Block 0000G refers to a specific block within that recorded subdivision",
          "minLength": 1
        }
      },
      "example": {
        "source_http_request": "GET /Property/Details?parcelId={{request_identifier}} HTTP/1.1\r\nHost: pbcpao.gov\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nConnection: keep-alive\r\n\r\n",
        "request_identifier": "52434205310037080",
        "street_number": "2558",
        "street_name": "GARDENS",
        "street_suffix_type": "Pkwy",
        "street_pre_directional_text": null,
        "street_post_directional_text": null,
        "unit_identifier": null,
        "city_name": "PALM BEACH GARDENS",
        "state_code": "FL",
        "postal_code": "33410",
        "plus_four_postal_code": null,
        "county_name": "Palm Beach",
        "country_code": "US",
        "latitude": null,
        "longitude": null,
        "township": null,
        "range": null,
        "section": null,
        "block": null
      },
      "relationships": {
        "has_address_validation": {
          "targets": [
            "address_validation"
          ],
          "comment": "The 'has_address_validation' property links an address to a specific address validation record. This connection provides details about the validation process and the results of the validation."
        }
      },
      "required": [
        "city_name",
        "country_code",
        "county_name",
        "postal_code",
        "postal_code",
        "state_code",
        "street_name",
        "street_number",
        "street_suffix_type"
      ]
    },
    {
      "type": "advertiser",
      "container_name": "advertisers",
      "is_deprecated": false,
      "deprecated_properties": [
        "site_configuration_identifier"
      ],
      "properties": {
        "advertiser_language": {
          "type": "string",
          "comment": "Advertiser language refers to the language that the advertiser uses, where language refers to schemas, classes, properties, and requirements related to communicating with the advertiser via API."
        },
        "advertiser_name": {
          "type": "string",
          "comment": "An advertiser name is a unique label given to a advertiser to distinguish it from other advertisers in the Staircase platform. An advertiser name reflects the purpose of the advertiser, and is often designed to be easy to remember and to quickly identify the advertiser."
        },
        "redirect_url": {
          "type": "string",
          "comment": "A redirect URL is a web address that automatically forwards users to a different web page or website. When a user clicks on a redirect URL, the web server hosting the original web page will automatically send a request to the server hosting the target web page, and the user's browser will be redirected to the new page. "
        }
      },
      "relationships": {
        "has_product_configuration": {
          "targets": [
            "product_configuration"
          ],
          "comment": "Product configuration refers to the process of customizing a product to meet specific customer needs and requirements."
        }
      }
    },
    {
      "type": "api_scenario",
      "container_name": "api_scenarios",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "api_scenario_identifier": {
          "type": "string",
          "comment": "An API scenario identifier is a unique code or string of characters assigned to a specific API scenario that is used to uniquely identify and access that API scenario."
        },
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        },
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        },
        "profile_name": {
          "type": "string",
          "comment": "A profile name is a unique label used to group API scenarios."
        },
        "scenario_type": {
          "enum": [
            "Mocked",
            "Real",
            null
          ],
          "comment": "A scenario type is the type or category to which an API scenario belongs.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_product_api": {
          "targets": [
            "product_api"
          ],
          "comment": "The 'has_product_api' property links an invocation to a specific product API that is being accessed or utilized during the invocation. This connection provides details about the API and its role in the invocation process"
        },
        "has_request_collection": {
          "targets": [
            "collection"
          ],
          "comment": "A request collection provides an example request as required by an API. It helps developers by offering a practical demonstration on how to send a request to the API. API requests are the primary means by which developers interact with APIs to retrieve data, send data, or perform actions."
        },
        "has_response_collection": {
          "targets": [
            "collection"
          ],
          "comment": "A response collection provides an example response as returned by an API. It offers developers a clear understanding of the structure and format of the data that will be returned by the API."
        },
        "has_sample_transaction_identifier": {
          "targets": [
            "transaction"
          ],
          "comment": "An API scenario schema describes the schema and provides sample data for a specific product API scenario."
        }
      }
    },
    {
      "type": "api_schema_field",
      "container_name": "api_schema_fields",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        },
        "requirement_indicator": {
          "type": "boolean",
          "comment": "An API schema field requirement indicator refers to a symbol or notation used within the schema definition of an Application Programming Interface (API) to denote whether a field is mandatory or not."
        }
      },
      "relationships": {
        "has_api_schema_field": {
          "targets": [
            "api_schema_field",
            "graph_entity"
          ],
          "comment": "The API schema defines a composition or inclusion of one field within another field. "
        },
        "has_graph_entity": {
          "targets": [
            "graph_entity"
          ],
          "comment": "The 'has_graph_entity' property establishes a relationship between an invocation and a specific entity within a graph structure. This link can be used to represent the influence or impact of the invocation on various nodes or entities within a system's graph architecture"
        }
      }
    },
    {
      "type": "api_schema",
      "container_name": "api_schemas",
      "is_deprecated": false,
      "deprecated_properties": [
        "has_optional_properties",
        "has_required_properties",
        "has_graph_entity"
      ],
      "properties": {
        "console_app_url": {
          "type": "string",
          "comment": "The console app URL is a web link that points to a console application or interactive environment where the api schema can be displeyed"
        },
        "schema_type": {
          "type": "string",
          "comment": "An API schema type describes the structure and behavior of an API according to type: either request or response."
        }
      },
      "relationships": {
        "has_api_schema_field": {
          "targets": [
            "api_schema_field",
            "graph_entity"
          ],
          "comment": "The API schema defines a composition or inclusion of one field within another field. "
        },
        "has_product_api": {
          "targets": [
            "product_api"
          ],
          "comment": "The 'has_product_api' property links an invocation to a specific product API that is being accessed or utilized during the invocation. This connection provides details about the API and its role in the invocation process"
        }
      }
    },
    {
      "type": "api",
      "container_name": "apis",
      "is_deprecated": true,
      "deprecated_properties": [
        "api_identifier",
        "api_type",
        "has_api",
        "invocation_type"
      ],
      "properties": {
        "api_identifier": {
          "type": "string"
        },
        "api_type": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        },
        "invocation_type": {
          "enum": [
            "Analytics",
            "SinglePartner",
            "Operation",
            "AggregatedPartner",
            "Notification",
            "Proxy",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        }
      },
      "relationships": {}
    },
    {
      "type": "asset",
      "container_name": "assets",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "asset_account_identifier": {
          "type": "string",
          "comment": "A unique alphanumeric string identifying an asset."
        },
        "asset_account_in_name_of_description": {
          "type": "string",
          "comment": "The name of the persons or entity(ies) in whose name the account is held."
        },
        "asset_account_type": {
          "enum": [
            "RelatedPartyManagedAccount",
            "BorrowerManagedAccount",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "asset_account_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when other is selected for asset_account_type."
        },
        "asset_cash_or_market_value_amount": {
          "type": "decimal",
          "comment": "The cash or market value amount of the asset_type. The market value is the price at which an asset is transferred between a willing buyer and a willing seller. Market value and cash values tend to be equal."
        },
        "asset_description": {
          "type": "string",
          "comment": "A text description that further defines the Asset. This could be used to describe the shares associated with the stocks, bonds or mutual funds, retirement funds or business owned that the borrower has disclosed (named) as an asset."
        },
        "asset_liquidity_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the asset is classified as liquid. When false, indicates that the asset is classified as non liquid."
        },
        "asset_net_value_amount": {
          "type": "decimal",
          "comment": "The cash or market value of the asset less any outstanding liabilities or obligations."
        },
        "asset_statement_date": {
          "type": "string",
          "format": "date",
          "comment": "The date on which the asset statement was issued."
        },
        "asset_type": {
          "enum": [
            "GiftOfPropertyEquity",
            "CheckingAccount",
            "GiftOfCash",
            "ProceedsFromSecuredLoan",
            "RelocationMoney",
            "SavingsAccount",
            "GiftsTotal",
            "Annuity",
            "Automobile",
            "ProceedsFromSaleOfNonRealEstateAsset",
            "MoneyMarketFund",
            "BridgeLoanNotDeposited",
            "EarnestMoneyCashDepositTowardPurchase",
            "RealEstateOwned",
            "SavingsBond",
            "Stock",
            "RecreationalVehicle",
            "LifeInsurance",
            "SaleOtherAssets",
            "StockOptions",
            "MutualFund",
            "BorrowerEstimatedTotalAssets",
            "Boat",
            "IndividualDevelopmentAccount",
            "TrustAccount",
            "PendingNetSaleProceedsFromRealEstateAssets",
            "NetWorthOfBusinessOwned",
            "Bond",
            "EmployerAssistance",
            "ProceedsFromUnsecuredLoan",
            "RetirementFund",
            "BorrowerPrimaryHome",
            "SeverancePackage",
            "CertificateOfDepositTimeDeposit",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "asset_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected as the Asset Type."
        },
        "automobile_make_description": {
          "type": "string",
          "comment": "A free-form text field used to capture the make and model of borrower's vehicle disclosed as asset. Collected on the URLA in Section VI Assets (Automobiles Owned)."
        },
        "automobile_model_year": {
          "type": "integer",
          "comment": "A field used to capture the model year of borrower's vehicle disclosed as asset. Collected on the URLA in Section VI Assets (Automobiles Owned)."
        },
        "currency_code": {
          "type": "string",
          "comment": "currency code in mortgage banking expenses refers to a standardized code that identifies the type of currency being used. \nThe currency code is typically an alphabetic code consisting of 3 letters, and is used to represent the currency symbol for transactions in the international financial market. The currency code is used to ensure the accurate exchange and conversion of currency in mortgage banking transactions, and helps to eliminate confusion and avoid errors in financial transactions. Some examples of currency codes include USD for US dollars, EUR for euros, and GBP for British pounds."
        },
        "current_unpaid_principal_balance_amount": {
          "type": "decimal"
        },
        "freddie_mac_updated_indicator": {
          "type": "boolean",
          "comment": "Freddie Mac updated indicator refers to a binary (yes/no) field that indicates whether Freddie Mac, also known as the Federal Home Loan Mortgage Corporation (FHLMC), has updated its records related to a particular liability. \nFreddie Mac is rdf:type government-sponsored enterprise (GSE) that provides liquidity, stability, and affordability to the U.S. housing market by purchasing mortgages from banks and other lending institutions.\n\nThe Freddie Mac updated indicator is used to determine if the information about rdf:type particular liability, such as an outstanding mortgage loan, is up-to-date. This information can be used by mortgage banking institutions to make decisions about loan applications, approve or deny loans, and set interest rates. The Freddie Mac updated indicator is also used for reporting and performance evaluations.\n\nThe specific definitions and uses of the Freddie Mac updated indicator can vary by company and jurisdiction."
        },
        "funds_source_type": {
          "type": "string"
        },
        "funds_source_type_other_description": {
          "type": "string",
          "comment": "A free-form text field that specifies the enumeration when the value of other is used for funds_source_type."
        },
        "gift_market_value_included_in_asset_market_value_indicator": {
          "type": "boolean"
        },
        "included_in_asset_account_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the dollar value of that item is included in the value of an asset account being reported by a borrower."
        },
        "life_insurance_face_value_amount": {
          "type": "decimal",
          "comment": "The dollar amount of the face value of the borrower's Life Insurance. The face value is the par value or actual selling price of the asset or the amount the issuer contracts to repay. (Collected on the URLA in Section VI (Assets - Face Amount Life Insurance)."
        },
        "market_value_amount": {
          "type": "decimal",
          "comment": "market value amount refers to the estimated value of a mortgage loan or a portfolio of mortgage loans based on current market conditions. \n\nThis value is determined by taking into consideration rdf:type variety of factors, including the creditworthiness of the borrower, the terms of the loan, and current market conditions, such as interest rates and economic trends. \nThe market value amount is an important metric in mortgage banking, as it helps lenders and investors assess the value of their mortgage assets and make informed decisions about their portfolios. \nThe market value amount is also used to determine the amount of collateral that rdf:type lender can expect to recover in the event of rdf:type default, which helps to determine the risk associated with rdf:type loan."
        },
        "owners_of_record_description": {
          "type": "string",
          "comment": "owner of record description refers to the individual or entity that is listed as the owner of a mortgage loan in the official records of the lender or servicer. \n\nThis information is used to identify the rightful owner of the mortgage loan and to ensure that payments and other transactions related to the loan are properly credited and tracked. \nThe owner of record is typically the lender that originated the loan, but it can also be an investor that has purchased the loan or rdf:type servicer that is managing the loan on behalf of the owner. \nThe description of the owner of record is important for maintaining accurate records and for ensuring that all parties involved in the mortgage loan process have rdf:type clear understanding of who is responsible for the loan."
        },
        "reo_intended_disposition_type": {
          "enum": [
            "Retained",
            "Sold",
            "PendingSale",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "stock_bond_mutual_fund_share_count": {
          "type": "integer",
          "comment": "The number of shares associated with the stocks or bonds that the borrower has disclosed (named) as an asset. Collected on the URLA in Section VI Assets (Stocks and Bonds)."
        },
        "subject_property_of_refinance_indicator": {
          "type": "boolean"
        },
        "verified_indicator": {
          "type": "boolean",
          "comment": "Flag to indicate if asset value has been verified based on trading partner rules and definitions."
        }
      },
      "relationships": {
        "gifted_or_granted_from": {
          "targets": [
            "person"
          ],
          "comment": "A relationship that indicates an asset was provided by a person in the form of a gift or grant. It connects the asset to the person who was the giver or grantor."
        },
        "held_by_financial_institution": {
          "targets": [
            "company"
          ]
        },
        "possessed_by": {
          "targets": [
            "person"
          ],
          "comment": "The individual who legally owns or has control over this asset."
        }
      }
    },
    {
      "type": "athlete_delivery",
      "container_name": "athlete_deliveries",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "company_identifier": {
          "type": "string",
          "comment": "A company identifier is a unique code or string of characters assigned to a Staircase company.  The identifier is generated remotely and used to uniquely identify that company."
        },
        "has_company_identifier": {
          "type": "string",
          "comment": "A company identifier is a unique code or string of characters assigned to a Staircase company.  The identifier is generated remotely and used to uniquely identify that company."
        },
        "has_person_identifier": {
          "type": "string",
          "comment": "A person identifier is a unique code or string of characters assigned to a Staircase employee or other person who works in a Staircase work week. The identifier is used to uniquely identify that person."
        },
        "has_work_week_identifier": {
          "type": "string",
          "comment": "A work week identifier refers to a work week transaction identifier. The identifier is used to uniquely identify that work week."
        },
        "person_identifier": {
          "type": "string",
          "comment": "A person identifier is a unique code or string of characters assigned to a Staircase employee or other person who works in a Staircase work week. The identifier is generated remotely and used to uniquely identify that person."
        },
        "total_points_delivered": {
          "type": "integer",
          "comment": "Total points delivered indicates the number of points delivered by a person for the associated work week."
        },
        "total_tasks_completed": {
          "type": "integer",
          "comment": "Total tasks completed indicates the number of tasks completed by a person in the associated work week."
        },
        "work_week_identifier": {
          "type": "string",
          "comment": "A work week identifier refers to a work week transaction identifier. The identifier is used to uniquely identify that work week."
        }
      },
      "relationships": {}
    },
    {
      "type": "authorization",
      "container_name": "authorizations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "authorization_timestamp": {
          "type": "dateTime",
          "comment": "Authorization_timestamp refers to the date and time that the person granted the authorization."
        },
        "authorization_type": {
          "enum": [
            "SoftCreditPull",
            "HardCreditPull",
            null
          ],
          "comment": "Authorization_type_enumerations refers to the type of authorization that the user granted, such as a soft credit pull or hard credit pull.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "authorized_by": {
          "targets": [
            "person"
          ],
          "comment": "Authorized_by refers to the person who granted an authorization."
        },
        "captured_by_bot": {
          "targets": [
            "bot"
          ],
          "comment": "Captured_by_bot refers to the bot that captured the authorization that the person granted."
        },
        "captured_by_person": {
          "targets": [
            "person"
          ],
          "comment": "Captured_by_person refers to the person who captured the authorization that the person granted."
        }
      }
    },
    {
      "type": "automated_underwriting_system_response_message",
      "container_name": "automated_underwriting_system_response_messages",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "message_description": {
          "type": "string",
          "comment": "Text sent as part of a message from an automated underwriting system."
        },
        "message_group_type": {
          "type": "string",
          "comment": "A category of messages sent by an automated underwriting system."
        },
        "message_section_identifier": {
          "type": "string",
          "comment": "Refers to a section in an automated underwriting system message."
        },
        "message_subcategory_name": {
          "type": "string",
          "comment": "Refers to the name of a subcategory in an automated underwriting system message."
        },
        "message_value": {
          "type": "string",
          "comment": "The message and the review rules derived during the loan validation process by the automated underwriting system."
        },
        "response_message_group_category_name": {
          "type": "string",
          "comment": "Category name for the automated underwriting system response message."
        }
      },
      "relationships": {
        "has_automated_underwriting_system": {
          "targets": [
            "automated_underwriting_system"
          ],
          "comment": "An automated underwriting system refers to the process by which computer algorithms and software systems evaluate the risks involved in insuring a particular client or granting a loan to a borrower."
        },
        "has_document": {
          "targets": [
            "document"
          ],
          "comment": "A document is a written or printed record that contains information, data, or instructions in a fixed form that can be stored, transmitted, or communicated."
        }
      }
    },
    {
      "type": "automated_underwriting_system",
      "container_name": "automated_underwriting_systems",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "a_minus_caution_fee_level_description": {
          "type": "string",
          "comment": "The A minus caution fee level description is used by the lender to provide additional information about the risk associated with a particular loan, and to help the lender make informed decisions about loan approvals and risk management."
        },
        "asset_representation_and_warranty_relief_eligibility_type": {
          "enum": [
            "NotEligible",
            "Unavailable",
            "Eligible",
            null
          ],
          "comment": "Asset representation and warranty relief eligibility type is the eligibility of a mortgage loan for relief from certain representations and warranties made by the borrower and the lender.",
          "type": [
            "string",
            "null"
          ]
        },
        "aus_case_identifier": {
          "type": "string",
          "comment": "A unique identifier assigned by the underwriting system to the underwriting case for a specific loan application."
        },
        "aus_decision_datetime": {
          "type": "dateTime",
          "comment": "The date and time of the underwriting decision."
        },
        "aus_document_waiver_indicator": {
          "type": "boolean",
          "comment": "Indicates that some or all of the loan information is not required to be formally documented in the loan submission package, e.g., no requirement to provide a wage statement, tax returns, etc."
        },
        "aus_eligibility_type": {
          "enum": [
            "Ineligible",
            "Eligible",
            null
          ],
          "comment": "Evaluation by an Automated Underwriting System (AUS) as either eligible for a loan or ineligible.",
          "type": [
            "string",
            "null"
          ]
        },
        "aus_evaluation_status_description": {
          "type": "string",
          "comment": "The status of the automated underwriting certificate request."
        },
        "aus_is_out_of_scope_indicator": {
          "type": "boolean",
          "comment": "The is_out_of_scope_indicator is used to alert the lender that the loan cannot be evaluated using the AUS and requires manual underwriting."
        },
        "aus_method_version_identifier": {
          "type": "string",
          "comment": "Specifies the version of the automated underwriting system used to underwrite the loan."
        },
        "aus_process_description": {
          "type": "string",
          "comment": "A free-form text description of the automated underwriting process used on the loan."
        },
        "aus_purchase_eligibility_type": {
          "enum": [
            "Eligible",
            null
          ],
          "comment": "Refers to a loan's eligibility for purchase.",
          "type": [
            "string",
            "null"
          ]
        },
        "aus_recommendation_description": {
          "type": "string",
          "comment": "The loan approval recommendation determined by the automated underwriting system."
        },
        "aus_recommendation_type": {
          "enum": [
            "Caution",
            "OutOfScope",
            "Approve",
            "Refer",
            null
          ],
          "comment": "Refers to the outcome of a loan application's evaluation by an Automated Underwriting System (AUS).",
          "type": [
            "string",
            "null"
          ]
        },
        "aus_result_value": {
          "type": "string",
          "comment": "The result of the automated underwriting evaluation system."
        },
        "aus_service_engine_transaction_identifier": {
          "type": "string",
          "comment": "Automated Underwriting System (AUS) service engine transaction identifier is a unique identifier assigned to a mortgage loan transaction by the lender's AUS system."
        },
        "aus_submission_count": {
          "type": "integer",
          "comment": "Submission count is the number of times a loan application has been submitted to an Automated Underwriting System (AUS) for evaluation."
        },
        "aus_transaction_identifier": {
          "type": "string",
          "comment": "AUS (Automated Underwriting System) transaction identifier is a unique identifier assigned to each transaction that is processed through an Automated Underwriting System (AUS)."
        },
        "aus_type": {
          "enum": [
            "Assetwise",
            "LoanProductAdvisor",
            "Strategyware",
            "FirstMortgageCreditScore",
            "LoanProspector",
            "FhaScorecard",
            "Zippy",
            "Capstone",
            "Clues",
            "Ecs",
            "GuaranteedUnderwritingSystem",
            "DesktopUnderwriter",
            "DesktopOriginator",
            "DecisionEngine",
            null
          ],
          "comment": "A value from a MISMO prescribed list that represents the automated underwriting system used to evaluate a loan.",
          "type": [
            "string",
            "null"
          ]
        },
        "aus_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for aus_type."
        },
        "collateral_representation_and_warranty_relief_description": {
          "type": "string",
          "comment": "Refers to the specific representations and warranties related to the collateral that are eligible for relief based on the loan characteristics and lender underwriting guidelines."
        },
        "collateral_representation_and_warranty_relief_eligibility_type": {
          "enum": [
            "NotEligible",
            "Unavailable",
            "Eligible",
            null
          ],
          "comment": "Refers to the eligibility of a lender to receive relief from the representations and warranties made abou tthe collateral (property) used to secure a mortgage loan.",
          "type": [
            "string",
            "null"
          ]
        },
        "fha_pre_review_results_value": {
          "type": "string",
          "comment": "The credit risk decision issued by the FHA TOTAL Mortgage Scorecard based solely on the algorithm score. (Does not take into account review rules or credit overrides.)"
        },
        "fha_total_mortgage_scorecard_indicator": {
          "type": "boolean",
          "comment": "The FHA total mortgage scorecard indicator is rdf:type numeric score that ranges from 0 to 100, with higher scores indicating lower risk to the FHA."
        },
        "income_representation_and_warranty_relief_eligibility_type": {
          "enum": [
            "NotEligible",
            "Unavailable",
            "Eligible",
            null
          ],
          "comment": "Refers to the eligibility of a lender to receive relief from the representations and warranties made about borrower income.",
          "type": [
            "string",
            "null"
          ]
        },
        "loan_prospector_credit_risk_classification_description": {
          "type": "string",
          "comment": "The Loan Prospector credit risk classification for a loan."
        },
        "loan_prospector_documentation_classification_description": {
          "type": "string",
          "comment": "The Loan Prospector documentation classification for a loan."
        }
      },
      "relationships": {
        "has_aus_request": {
          "targets": [
            "invocation"
          ],
          "comment": "A link back to the request data used to generate this response."
        },
        "has_document": {
          "targets": [
            "document"
          ],
          "comment": "A document is a written or printed record that contains information, data, or instructions in a fixed form that can be stored, transmitted, or communicated."
        },
        "has_loan": {
          "targets": [
            "loan"
          ],
          "comment": "A loan timeline is a chronological record capturing the progression and changes of loan attributes over time."
        }
      }
    },
    {
      "type": "template",
      "container_name": "templates",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "staircase_blob_identifier": {
          "required": true,
          "type": "string",
          "comment": "A blob identifier with content for the template."
        },
        "template_engine": {
          "required": true,
          "comment": "The template engine used to render the template.",
          "enum": [
            "Jinja2",
            "Jinja",
            "Nunjucks",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {}
    },
    {
      "type": "campaign",
      "container_name": "campaigns",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "campaign_identifier": {
          "type": "string",
          "comment": "An campaign identifier is a unique identifier for the campaign."
        },
        "campaign_type": {
          "enum": [
            "Buyer",
            "Seller",
            "Reel",
            "Story",
            null
          ],
          "comment": "A classification that designates the primary focus of a marketing or advertising effort within the real estate sector.",
          "type": [
            "string",
            "null"
          ]
        },
        "campaign_name": {
          "type": "string",
          "comment": "Name for the campaign."
        },
        "campaign_purpose": {
          "type": "string",
          "comment": "The purpose of the campaign."
        }
      },
      "relationships": {
        "has_front_pdf_template": {
          "targets": [
            "template"
          ],
          "comment": "A front PDF template is a pre-designed document that can be used as a starting point for creating a new document."
        },
        "has_back_pdf_template": {
          "targets": [
            "template"
          ],
          "comment": "A back PDF template is a pre-designed document that can be used as a starting point for creating a new document."
        },
        "has_back_text_template": {
          "targets": [
            "template"
          ],
          "comment": "A back text template is a pre-designed document that can be used as a starting point for creating a new document."
        },
        "has_front_text_template": {
          "targets": [
            "template"
          ],
          "comment": "A front text template is a pre-designed document that can be used as a starting point for creating a new document."
        },
        "has_front_image": {
          "targets": [
            "document_image"
          ],
          "comment": "A front image is a graphical representation or visual element that is displayed on the front of a document."
        },
        "has_campaign_prompt": {
          "targets": [
            "campaign_prompt"
          ],
          "comment": "A campaign prompt is an instruction provided to a bot or automated system to gather specific information or perform particular actions related to a marketing or advertising campaign."
        },
        "has_campaign_knowledge_base": {
          "targets": [
            "campaign_knowledge_base"
          ],
          "comment": "A campaign knowledge base provides access to information, data, and resources used to support and enhance the execution of marketing and advertising campaigns."
        },
        "has_customer_contact": {
          "targets": [
            "customer_contact"
          ],
          "comment": "Describes details about an interaction with a customer."
        }
      }
    },
    {
      "type": "insight",
      "container_name": "insights",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "reaches": {
          "type": "integer",
          "comment": "The number of times the insight has been viewed."
        },
        "likes": {
          "type": "integer",
          "comment": "The number of likes the insight has received."
        },
        "shares": {
          "type": "integer",
          "comment": "The number of times the insight has been shared."
        },
        "follows": {
          "type": "integer",
          "comment": "The number of times the insight has been followed."
        },
        "profile_visits": {
          "type": "integer",
          "comment": "The number of times the insight has been visited."
        },
        "replies": {
          "type": "integer",
          "comment": "The number of replies the insight has received."
        },
        "navigation": {
          "type": "integer",
          "comment": "The number of times the insight has been navigated."
        },
        "clicks": {
          "type": "integer",
          "comment": "The number of times the link has been clicked."
        },
        "views": {
          "type": "integer",
          "comment": "The number of times the insight has been viewed."
        },
        "average_play_time": {
          "type": "integer",
          "comment": "The average play time of the insight."
        }
      },
      "relationships": {
        "has_campaign": {
          "targets": [
            "campaign"
          ],
          "comment": "The campaign that the insight is associated with."
        }
      }
    },
    {
      "type": "campaign_prompt",
      "container_name": "campaign_prompts",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "text_prompt": {
          "type": "string",
          "comment": "A text-based instruction provided to a bot or automated system to gather specific information or perform particular actions related to a marketing or advertising campaign. "
        },
        "image_prompt": {
          "type": "string",
          "comment": "Contains a staircase blob identifier, which points to an image used as part of a prompt in a marketing or advertising campaign."
        }
      },
      "relationships": {}
    },
    {
      "type": "campaign_knowledge_base",
      "container_name": "campaign_knowledge_bases",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "codex_link": {
          "type": "string",
          "comment": "Contains a link to a codex article containing a knowledge base article used in the campaign"
        }
      },
      "relationships": {}
    },
    {
      "type": "automobile",
      "container_name": "automobiles",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "automobile_identifier": {
          "type": "string",
          "comment": "An automobile identifier is a unique identifier for the automobile (e.g., Vehicle Identification Number/VIN)."
        },
        "automobile_type": {
          "enum": [
            "Electric",
            "SportsCar",
            "Convertible",
            "SUV",
            "Coupe",
            "Hybrid",
            "Pickup",
            "Jeep",
            "MilitaryVehicle",
            "Sedan",
            "Cuv/crossover",
            "StationWagon",
            "Minivan",
            "Hatchback",
            null
          ],
          "comment": "An automobile type is the type or category to which an automobile belongs. (e.g., sedan, SUV, pickup).",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {}
    },
    {
      "type": "bot",
      "container_name": "bots",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "bot_name": {
          "type": "string"
        },
        "configuration_id": {
          "type": "string"
        }
      },
      "relationships": {}
    },
    {
      "type": "brand",
      "container_name": "brands",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "brand_history": {
          "type": "string",
          "comment": "A brief account of the origin, evolution, and significant milestones associated with the brand."
        },
        "brand_name": {
          "type": "string",
          "comment": "A unique name associated with the brand, often used to distinguish it from other brands in the market."
        },
        "logo_blob_identifier": {
          "type": "string",
          "comment": "A graphical symbol or emblem that represents the brand and helps in its visual recognition."
        },
        "tagline": {
          "type": "string",
          "comment": "A memorable phrase or sentence used in advertising and marketing to convey the essence or ethos of the brand."
        }
      },
      "relationships": {
        "has_communication_method": {
          "targets": [
            "communication"
          ],
          "comment": "The method of communication."
        }
      }
    },
    {
      "type": "bundle",
      "container_name": "bundles",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "base_path": {
          "type": "string",
          "comment": "Refers to a seed directory or a primary path under which all the files related to the bundle are stored and organized."
        },
        "bundle_type": {
          "enum": [
            "Chat",
            "Service",
            "FrontEnd",
            "Data",
            null
          ],
          "comment": "Indicates the type of files the bundle contains and the general purpose of the bundle.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_product": {
          "targets": [
            "product"
          ],
          "comment": "The 'has_product' property connects an invocation to a specific product or service that is being affected or manipulated through the invocation. This relationship can help in understanding the interaction between the invocation and the corresponding product"
        }
      }
    },
    {
      "type": "chat_message",
      "container_name": "chat_messages",
      "is_deprecated": true,
      "deprecated_properties": [
        "author_role",
        "message_content",
        "message_datetime",
        "chat_related_to",
        "has_document",
        "has_thread"
      ],
      "properties": {
        "author_role": {
          "enum": [
            "System",
            "Assistant",
            "User",
            null
          ],
          "comment": "The role of the author of this message.",
          "type": [
            "string",
            "null"
          ]
        },
        "message_content": {
          "type": "string",
          "comment": "The contents of the message."
        },
        "message_datetime": {
          "type": "dateTime",
          "comment": "The date and time at which the message was sent."
        }
      },
      "relationships": {
        "chat_related_to": {
          "targets": [
            "chat_message"
          ],
          "comment": "Another chat message to which this message is related."
        },
        "has_document": {
          "targets": [
            "document"
          ],
          "comment": "A document is a written or printed record that contains information, data, or instructions in a fixed form that can be stored, transmitted, or communicated."
        },
        "has_thread": {
          "targets": [
            "chat_thread"
          ],
          "comment": "The thread that contains messages."
        }
      }
    },
    {
      "type": "chat_note",
      "container_name": "chat_notes",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "note_content": {
          "type": "string",
          "comment": "The contents of the note."
        },
        "note_datetime": {
          "type": "dateTime",
          "comment": "The date and time at which the note was sent."
        }
      },
      "relationships": {
        "has_related_entities": {
          "targets": [
            "class"
          ],
          "comment": "Data classes related to the note."
        }
      }
    },
    {
      "type": "chat_thread",
      "container_name": "chat_threads",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "connection_id": {
          "type": "string",
          "comment": "Connection ID of the thread."
        },
        "google_thread_id": {
          "type": "string",
          "comment": "Thread ID representation in Google."
        },
        "open_ai_thread_id": {
          "type": "string",
          "comment": "Thread ID representation in OpenAI."
        },
        "thread_created_at": {
          "type": "dateTime",
          "comment": "The date and time at which the thread was created."
        }
      },
      "relationships": {}
    },
    {
      "type": "closing_adjustment_item",
      "container_name": "closing_adjustment_items",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "closing_adjustment_item_amount": {
          "type": "decimal",
          "comment": "Cost associated with a closing adjustment item."
        },
        "closing_adjustment_item_type": {
          "enum": [
            "Grant",
            "DebtAndIncome",
            "TenantSecurityDeposit",
            "SellerCredit",
            "OtherCredit",
            "BorrowerClosingCosts",
            "FuelCosts",
            "RebateCredit",
            "Services",
            "DebitsAndCredits",
            "SellersMortgageInsuranceAssumption",
            "TradeEquity",
            "OtherNewLoansOnProperty",
            "SweatEquity",
            "SubordinateFinancingProceeds",
            "Gift",
            "SellersReserveAccountAssumption",
            "TitlePremiumAdjustment",
            "UnpaidUtilityEscrowHoldback",
            "ProceedsOfSubordinateLiens",
            "RelocationFunds",
            "Repairs",
            "RentFromSubjectProperty",
            "RepairCompletionEscrowHoldback",
            "SimultaneousTitleDiscountCredit",
            "SellersEscrowAssumption",
            "LenderCredit",
            "CreditCardOtherDebtsPaid",
            "SatisfactionOfSubordinateLien",
            "LoanCosts",
            "OtherCosts",
            "PrincipalReduction",
            "BalanceOfMortgageLoans",
            null
          ],
          "comment": "Refers to a specific type of closing cost item that either adds a cost to, or subtracts a cost from, closing costs.",
          "type": [
            "string",
            "null"
          ]
        },
        "integrated_disclosure_cash_to_close_item_amount": {
          "type": "decimal",
          "comment": "Total cost related to a category of closing costs in a closing disclosure."
        },
        "integrated_disclosure_cash_to_close_item_type": {
          "enum": [
            "LenderCredits",
            "TotalMortgageLoans",
            "LoanCostsAndOtherCostsTotal",
            "TotalCredits",
            "Deposit",
            "CashToCloseTotal",
            "LoanAmount",
            "TotalPayoffsAndPayments",
            "AdjustmentsAndOtherCredits",
            "FundsFromBorrower",
            "DownPayment",
            "TotalClosingCosts",
            "SellerCredits",
            "ClosingCostsFinanced",
            "FundsForBorrower",
            "ClosingCostsPaidBeforeClosing",
            null
          ],
          "comment": "The category in which costs related to closing are grouped. This item type appears as a 'total' on a closing costs integrated disclosure.",
          "type": [
            "string",
            "null"
          ]
        },
        "integrated_disclosure_section_type": {
          "enum": [
            "ServicesYouCanShopFor",
            "DueFromSellerAtClosing",
            "PaidAlreadyByOrOnBehalfOfBorrowerAtClosing",
            "InitialEscrowPaymentAtClosing",
            "Prepaids",
            "ServicesYouCannotShopFor",
            "TaxesAndOtherGovernmentFees",
            "TotalOtherCosts",
            "DueFromBorrowerAtClosing",
            "OtherCosts",
            "PayoffsAndPayments",
            "TotalLoanCosts",
            "ServicesBorrowerDidNotShopFor",
            "ServicesBorrowerDidShopFor",
            "TotalClosingCosts",
            "OriginationCharges",
            "DueToSellerAtClosing",
            null
          ],
          "comment": "Refers to a specific category of closing costs such as prepaids and services you can shop for. This section type appears on a closing costs integrated disclosure.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_escrow_item": {
          "targets": [
            "escrow_item"
          ],
          "comment": "Refers to an escrow item that is part of the closing costs."
        },
        "has_fee": {
          "targets": [
            "fee"
          ],
          "comment": "Refers to a charge or cost associated with obtaining or servicing a mortgage loan."
        },
        "has_prepaid_item": {
          "targets": [
            "prepaid_item"
          ],
          "comment": "Refers to an item that the borrower prepaid as part of the closing costs."
        }
      }
    },
    {
      "type": "closing_information",
      "container_name": "closing_informations",
      "is_deprecated": true,
      "deprecated_properties": [],
      "properties": {
        "closing_cost_expiration_date": {
          "type": "string",
          "format": "date",
          "comment": "The date on which the closing costs agreement between a borrower and a lender expires."
        }
      },
      "relationships": {
        "has_closing_adjustment_item": {
          "targets": [
            "closing_adjustment_item"
          ],
          "comment": "Item provided in a closing disclosure that either adds a cost to, or subtracts a cost from, closing costs."
        }
      }
    },
    {
      "type": "collection",
      "container_name": "collections",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "collection_identifier": {
          "type": "string",
          "comment": "A collection identifier is a unique code used to identify a collection of data elements that are part of either a Staircase product request or response schema."
        },
        "created_at": {
          "type": "dateTime",
          "comment": "Created_at refers to the date and time when a transaction was created."
        },
        "fuzzy_searchable_indicator": {
          "type": "boolean",
          "comment": "A fuzzy_searchable_indicator identifies if a transaction can be associated with a fuzzy search. A fuzzy search is a type of search algorithm that allows for approximate matching of search terms or phrases. Unlike exact search, where the search terms must match the query exactly to return results, fuzzy search takes into account possible spelling mistakes, variations in word order, and other minor variations in the query."
        },
        "has_transaction": {
          "type": "string",
          "comment": "Indicates the transaction(s) related to a particular entity."
        },
        "serialise_to_graph_indicator": {
          "type": "boolean",
          "comment": "A serialize_to_graph_indicator identifies if a transaction can be converted from a standard data structure into a graph data structure. Data to graph serialization is a process where data structures are converted into graph-based nodes and edges, which represent the data and the relationships between the data, respectively. This allows the data to be represented in a graph database, which can be used to store, query, and analyze large amounts of connected data."
        },
        "updated_at": {
          "type": "dateTime",
          "comment": "Updated_at refers to the date and time when a collection was updated."
        },
        "validation_indicator": {
          "type": "boolean",
          "comment": "A validation indicator indicates whether a collection contains all of the data elements needed to successfully invoke a product API."
        },
        "version": {
          "type": "string",
          "comment": "Version refers to the Staircase language version with which the collection was created."
        },
        "lexicon_version": {
          "type": "string",
          "comment": "Lexicon_version refers to the version of the Staircase lexicon used to create the collection. Represents bundle ID of lexicon in Staircase Marketplace."
        },
        "lexicon_hash": {
          "type": "string",
          "comment": "Lexicon_hash refers to the hash value of the Staircase lexicon used to create the collection."
        }
      },
      "relationships": {
        "has_collections_link": {
          "targets": [
            "collection"
          ],
          "comment": "A collection can be linked to other Staircase collections. Typically request and response collections that are generated during a mortgage product flow are linked together."
        },
        "has_data": {
          "targets": [
            "class"
          ],
          "comment": "The 'has_data' property links a Staircase collection to an instance derived from any entity defined in the Staircase lexicon namespace. This relationship represents that the collection contains data elements associated with the specific entity instance, enabling the organization and structuring of data elements within the collection."
        },
        "has_link": {
          "targets": [
            "collection"
          ],
          "comment": "A collection can be linked to other Staircase collections. Typically request and response collections that are generated during a mortgage product flow are linked together."
        },
        "has_transaction": {
          "targets": [
            "transaction"
          ],
          "comment": "Indicates the transaction(s) related to a particular entity."
        }
      }
    },
    {
      "type": "collections_link",
      "container_name": "collections_links",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "has_collection_from": {
          "type": "string",
          "comment": "Has_collection_from refers to the source or 'parent' collection from which the relationship is initiated."
        },
        "has_collection_to": {
          "type": "string",
          "comment": "Has_collection_to refers to the target or 'child' collection which is the object being related to or affected by the source object."
        },
        "label": {
          "type": "string",
          "comment": "Label refers to a description or identifier assigned to a specific field in software called Desktop Underwriter. Labels in Desktop Underwriter provide clear indications of what information is expected to be entered in each field. They help guide users through the loan application process by providing context and specifying the type of data required. "
        }
      },
      "relationships": {}
    },
    {
      "type": "communication",
      "container_name": "communications",
      "is_deprecated": false,
      "deprecated_properties": [
        "has_address",
        "contact_person"
      ],
      "properties": {
        "api_key": {
          "type": "string",
          "comment": "An API key is a unique identifier used to authenticate and authorize access to an API. This key is stored in encrypted format for security purposes."
        },
        "api_name": {
          "type": "string",
          "comment": "API name refers to the name of a partner API."
        },
        "auth_url": {
          "type": "string",
          "comment": "An authorization URL is a specific URL that is used to initiate the process of authorizing access to a particular resource or service. When a user wants to access a resource or service that requires authorization, they are redirected to the authorization URL, where they are prompted to authenticate themselves and grant permissions to access the resource or service. "
        },
        "communication_identifier": {
          "type": "string",
          "comment": "A unique identifier associated with a specific communication channel or method."
        },
        "domain_name": {
          "type": "string",
          "comment": "A domain name is a unique and human-readable address that identifies a website on the internet. It serves as a memorable and recognizable name for accessing websites rather than using numerical IP addresses."
        },
        "email_address": {
          "type": "string",
          "comment": "An email address is a unique identifier used to send and receive electronic messages over the internet. It typically consists of two parts: a username and a domain name, separated by the '@' symbol."
        },
        "email_excluded": {
          "type": "boolean",
          "comment": "A boolean field that indicates whether the email address is excluded from receiving communications."
        },
        "email_subscribed": {
          "type": "boolean",
          "comment": "A boolean field that indicates whether the email address is subscribed to receive communications."
        },
        "environment_type": {
          "enum": [
            "Development",
            "Production",
            "Staging",
            "Testing",
            null
          ],
          "comment": "Environment type refers to the specific purpose of the computing environment. It's categorized into various types such as 'Development', 'Testing', 'Staging', and 'Production'. Each type corresponds to a different stage in the software development lifecycle and is configured to facilitate specific tasks associated with its stage.",
          "type": [
            "string",
            "null"
          ]
        },
        "home_phone_number": {
          "type": "string",
          "comment": "A home phone number is a telephone number that is associated with a residential address, typically used for personal or family communication purposes. It is a phone number that is linked to a landline or a Voice over Internet Protocol (VoIP) service that is connected to a physical address."
        },
        "virtual_phone_number": {
          "type": "string",
          "comment": "A virtual phone number is a telephone number that doesn't require a physical phone line. It's essentially a digital number that can be used to make and receive calls through the internet."
        },
        "last_updated": {
          "type": "string",
          "comment": "Indicating the last update to the communication property."
        },
        "password": {
          "type": "string",
          "comment": "A password for a computer system is a confidential piece of information that is used to authenticate and verify the identity of a user."
        },
        "phone_number": {
          "type": "string",
          "comment": "A phone number is a unique sequence of digits assigned to a specific telephone line or mobile device that allows it to be reached by a caller. It is typically comprised of a country code, area code, and a specific number assigned to the device."
        },
        "secret": {
          "type": "string",
          "comment": "A secret refers to confidential information for authentication. This value is encrypted when stored."
        },
        "status": {
          "enum": [
            "CREATED",
            "CREATING",
            "Archived",
            "Deprecated",
            "Inactive",
            "Active",
            null
          ],
          "comment": "Status of the communication channel indicating its current state, such as active, inactive, or deprecated.",
          "type": [
            "string",
            "null"
          ]
        },
        "username": {
          "type": "string",
          "comment": "A username is a unique identifier or name associated with an individual user. It is used to identify and authenticate users when accessing a computer system, network, or online service."
        },
        "website": {
          "type": "string",
          "comment": "A URL representing the official online presence or digital platform associated with a specific entity, service, or topic. Typically used to provide information, resources, or services over the internet."
        },
        "work_phone_number": {
          "type": "string",
          "comment": "A work phone number is a telephone number that is associated with an individual's place of employment. It is typically used for business purposes, such as to contact colleagues, clients, or customers."
        }
      },
      "relationships": {
        "has_communication_validation": {
          "targets": [
            "communication_validation"
          ],
          "comment": "A communication validation is a process that verifies the accuracy and validity of communication data, such as email addresses, phone numbers."
        },
        "contact_person": {
          "targets": [
            "person"
          ],
          "comment": "Uniquely identifies the individual associated with this communication. This the @id of the main person instance returned from save_personal_information."
        },
        "has_address": {
          "targets": [
            "address"
          ],
          "comment": "Indicates a specific location or postal information."
        },
        "has_mailing_address": {
          "targets": [
            "address"
          ],
          "comment": "An address describes a physical location described in terms of street address, city, state, region, province, country and other geo-location references."
        }
      }
    },
    {
      "type": "company",
      "container_name": "companies",
      "is_deprecated": false,
      "deprecated_properties": [
        "has_address",
        "has_brand",
        "has_communication_method",
        "has_company_relation",
        "has_contract",
        "has_finance_relation",
        "has_language",
        "has_license",
        "has_product",
        "has_product_configuration",
        "offered_contract",
        "subscribes_to",
        "company_abbreviation",
        "company_identifier",
        "company_size_value",
        "company_type",
        "description",
        "employer_identification_number",
        "industry",
        "mers_organization_identifier",
        "employer_state_identification_number",
        "founded_date",
        "asana_task_identifier",
        "company_investor_connector_type",
        "company_los_type",
        "company_pos_type",
        "company_relationship_contact_name",
        "company_servicing_type",
        "company_status_type",
        "credit_reporting_agency_indicator",
        "remote_application_identifier",
        "staircase_annual_loan_volume_value",
        "has_company_connection",
        "has_customer",
        "remote_object_deleted_indicator",
        "has_role",
        "phone_number",
        "website",
        "email"
      ],
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "company_abbreviation": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A company abbreviation is a shortened version of a company name.",
          "minLength": 1
        },
        "company_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A company identifier is a unique code or number assigned to a company for identification purposes. It is often used in various administrative and legal systems to ensure accuracy and consistency in record-keeping and data management.",
          "minLength": 1
        },
        "company_size_value": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A qualitative or quantitative value indicating the size of a company, such as 'small', 'medium', 'large', or specific numbers.",
          "minLength": 1
        },
        "company_type": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Company type refers to type of company based on its relationship with Staircase.",
          "minLength": 1
        },
        "description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax.",
          "minLength": 1
        },
        "employer_identification_number": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A unique identification number assigned to businesses for tax purposes in specific jurisdictions.",
          "minLength": 1
        },
        "employer_state_identification_number": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A unique identification number assigned to a business by the state in which a business resides, for tax purposes in specific jurisdictions.",
          "minLength": 1
        },
        "founded_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date on which the company was officially established or incorporated.",
          "minLength": 1
        },
        "industry": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The primary sector or category of business activity that a company operates in, such as 'technology', 'healthcare', or 'finance'.",
          "minLength": 1
        },
        "mers_organization_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A unique identifier associated with the Mortgage Electronic Registration Systems.",
          "minLength": 1
        },
        "name": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "The official name of the company."
        }
      },
      "relationships": {
        "has_address": {
          "targets": [
            "address"
          ],
          "comment": "Indicates a specific location or postal information."
        },
        "has_brand": {
          "targets": [
            "brand"
          ],
          "comment": "Associates a company with its specific brand or brands, detailing its identity, logo, and other brand-specific attributes."
        },
        "has_communication_method": {
          "targets": [
            "communication"
          ],
          "comment": "The method of communication."
        },
        "has_company_relation": {
          "targets": [
            "company_relation"
          ],
          "comment": "A company relation describes the relationship of a company to another, in terms of the type of relationship, its status, and its nature."
        },
        "has_contract": {
          "targets": [
            "contract"
          ],
          "comment": "A relationship indicating that a person or entity is associated with, or bound by, a particular contract."
        },
        "has_finance_relation": {
          "targets": [
            "finance_relation"
          ],
          "comment": "Links to financial relationships or transactions."
        },
        "has_language": {
          "targets": [
            "language"
          ],
          "comment": "Represented association of graph entity with certain language."
        },
        "has_license": {
          "targets": [
            "license"
          ],
          "comment": "Indicates the licenses possessed or required."
        },
        "has_product": {
          "targets": [
            "product"
          ],
          "comment": "The 'has_product' property connects an invocation to a specific product or service that is being affected or manipulated through the invocation. This relationship can help in understanding the interaction between the invocation and the corresponding product"
        },
        "has_product_configuration": {
          "targets": [
            "product_configuration"
          ],
          "comment": "Product configuration refers to the process of customizing a product to meet specific customer needs and requirements."
        },
        "offered_contract": {
          "targets": [
            "contract"
          ],
          "comment": "A relationship indicating that a company has offered a particular contract."
        },
        "subscribes_to": {
          "targets": [
            "subscription"
          ],
          "comment": "Denotes the subscription that customer is currently signed up for or associated with."
        }
      }
    },
    {
      "type": "company_connection",
      "container_name": "company_connections",
      "is_deprecated": true,
      "deprecated_properties": [],
      "properties": {
        "api_key": {
          "type": "string",
          "comment": "An API key is a unique identifier used to authenticate and authorize access to an API. This key is stored in encrypted format for security purposes."
        },
        "api_name": {
          "type": "string",
          "comment": "API name refers to the name of a partner API."
        },
        "auth_url": {
          "type": "string",
          "comment": "An authorization URL is a specific URL that is used to initiate the process of authorizing access to a particular resource or service. When a user wants to access a resource or service that requires authorization, they are redirected to the authorization URL, where they are prompted to authenticate themselves and grant permissions to access the resource or service. "
        },
        "company_connection_identifier": {
          "type": "string",
          "comment": "A company connection identifier is a unique code or number assigned to a company connection for identification purposes."
        },
        "domain_name": {
          "type": "string",
          "comment": "A domain name is a unique and human-readable address that identifies a website on the internet. It serves as a memorable and recognizable name for accessing websites rather than using numerical IP addresses."
        },
        "environment_type": {
          "enum": [
            "Development",
            "Production",
            "Staging",
            "Testing",
            null
          ],
          "comment": "Environment type refers to the specific purpose of the computing environment. It's categorized into various types such as 'Development', 'Testing', 'Staging', and 'Production'. Each type corresponds to a different stage in the software development lifecycle and is configured to facilitate specific tasks associated with its stage.",
          "type": [
            "string",
            "null"
          ]
        },
        "has_custom_field": {
          "type": "string",
          "comment": "A custom field refers to a user-defined or customized data field that is added to a system, software, or database to store specific information that is unique to a particular organization or user's needs."
        },
        "password": {
          "type": "string",
          "comment": "A password for a computer system is a confidential piece of information that is used to authenticate and verify the identity of a user."
        },
        "secret": {
          "type": "string",
          "comment": "A secret refers to confidential information for authentication. This value is encrypted when stored."
        },
        "username": {
          "type": "string",
          "comment": "A username is a unique identifier or name associated with an individual user. It is used to identify and authenticate users when accessing a computer system, network, or online service."
        }
      },
      "relationships": {
        "has_company_relation": {
          "targets": [
            "company_relation"
          ],
          "comment": "A company relation describes the relationship of a company to another, in terms of the type of relationship, its status, and its nature."
        },
        "has_product_api": {
          "targets": [
            "product_api"
          ],
          "comment": "The 'has_product_api' property links an invocation to a specific product API that is being accessed or utilized during the invocation. This connection provides details about the API and its role in the invocation process"
        },
        "has_product_configuration": {
          "targets": [
            "product_configuration"
          ],
          "comment": "Product configuration refers to the process of customizing a product to meet specific customer needs and requirements."
        }
      }
    },
    {
      "type": "company_relation",
      "container_name": "company_relations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "company_relation_identifier": {
          "type": "string"
        },
        "company_relation_state_type": {
          "enum": [
            "Lead",
            "New",
            "Archived",
            null
          ],
          "comment": "Company relation state indicates the current state of the target company in its relationship with Staircase. Some examples of relation states include new, lead and archived.",
          "type": [
            "string",
            "null"
          ]
        },
        "company_relation_status_type": {
          "enum": [
            "Contract",
            "Sales",
            "Sow",
            null
          ],
          "comment": "Company relation status type indicates the status type for the company.",
          "type": [
            "string",
            "null"
          ]
        },
        "company_relation_type": {
          "enum": [
            "Partner",
            "Customer",
            null
          ],
          "comment": "Company relation type indicates whether the company is a Staircase customer or a Staircase partner.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_company_connectivity": {
          "targets": [
            "communication"
          ],
          "comment": "Company connectivity defines how to connect to a company's API."
        },
        "has_from_company": {
          "targets": [
            "company"
          ],
          "comment": "Has_from_company indicates that the company instance is a child instance that has a parent company instance."
        },
        "has_to_company": {
          "targets": [
            "company"
          ],
          "comment": "Has_to_company indicates that the company instance is a parent instance that has a child company instance."
        }
      }
    },
    {
      "type": "configuration",
      "container_name": "configurations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "configuration_identifier": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        }
      },
      "relationships": {}
    },
    {
      "type": "consent",
      "container_name": "consents",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "consent_action_type": {
          "enum": [
            "Transaction",
            "MailReceipt",
            "DataCollection",
            "Communication",
            "DataSharing",
            null
          ],
          "comment": "Enumerates the type of action(s) permitted by the consent.",
          "type": [
            "string",
            "null"
          ]
        },
        "consent_identifier": {
          "type": "string",
          "comment": "An consent identifier is a unique string used to identify a specific consent."
        },
        "consent_message": {
          "type": "string",
          "comment": "Provides the context or scope of the consent, usually in a human-readable format."
        },
        "consent_status": {
          "enum": [
            "Expired",
            "Revoked",
            "Pending",
            "Suspended",
            "Active",
            null
          ],
          "comment": "Signifies the current status of the consent, such as active, revoked, or expired.",
          "type": [
            "string",
            "null"
          ]
        },
        "consent_timestamp": {
          "type": "dateTime",
          "comment": "Records the time and date when the consent was originally given."
        }
      },
      "relationships": {
        "given_by": {
          "targets": [
            "person"
          ],
          "comment": "Identifies the individual who has given this specific instance of consent."
        },
        "given_to": {
          "targets": [
            "company"
          ],
          "comment": "Identifies the company that is authorized to perform actions based on this specific consent."
        },
        "pertains_to": {
          "targets": [
            "graph_entity"
          ],
          "comment": "Indicates the specific graph entity (like email or data) to which the consent applies."
        }
      }
    },
    {
      "type": "console",
      "container_name": "consoles",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "console_configuration_identifier": {
          "type": "string",
          "comment": "A console configuration identifier is a unique code or string of characters assigned to a console configuration.  The identifier is used to uniquely identify and access that configuration."
        },
        "console_configuration_type": {
          "enum": [
            "Listview",
            null
          ],
          "comment": "Console configuration type describes the type of configuration that has been applied to the console. Configuration refers to the process of customizing a console to meet specific customer needs and requirements. This process involves changing settings and parameters in configuration files to customize the console's behavior, and does not involve any changes to the console's underlying software.",
          "type": [
            "string",
            "null"
          ]
        },
        "datocms_class_name": {
          "type": "string",
          "comment": "A Datocms class name is a unique label give to a class that has been defined in the external content management system Datocms."
        },
        "datocms_identifier": {
          "type": "string",
          "comment": "A datocms identifier is a unique code or string of characters assigned by a remote content management system (DatoCMS) to a data structure or content.  The identifier is used to uniquely identify and access that data structure or content."
        },
        "datocms_url": {
          "type": "string",
          "comment": "A DatoCMS URL is a string of characters that provides a unique internet address for DatoCMS content. The URL enables a console to locate and interact with specific content in DatoCMS."
        },
        "title": {
          "type": "string",
          "comment": "A title is a unique label given to a ticket that is used to distinguish it from other tickets in the Staircase ticket management system. A title typically reflects the purpose of the ticket, and is often designed to be easy to remember and to quickly communicate support needs."
        },
        "url_suffix": {
          "type": "string",
          "comment": "A URL suffix is a string of characters that provides a unique internet address suffix for the console. The URL suffix, when combined with the console name and the environment it is deployed into, enables customers to locate and interact with the console."
        }
      },
      "relationships": {
        "has_permission": {
          "targets": [
            "permission"
          ],
          "comment": "Permission (in the context of software) refers to the access or authorization granted to a customer, organization or application to perform certain actions or access certain resources within the software."
        },
        "has_site": {
          "targets": [
            "site"
          ],
          "comment": "Site refers to the parameters and behaviors of a website created using the Console product. The website typically offers functionality related to various Staircase products."
        }
      }
    },
    {
      "type": "consumer_profile",
      "container_name": "consumer_profiles",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "active_credit_card_user_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer is an active user of credit cards."
        },
        "active_investing_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer is actively involved in investing."
        },
        "active_sports_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in active sports activities."
        },
        "aerobic_exercise_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in aerobic exercises."
        },
        "amex_regular_credit_card_use_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer uses a regular American Express credit card."
        },
        "animal_welfare_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to animal welfare causes."
        },
        "antiques_collecting_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in collecting antiques."
        },
        "antiques_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to antiques."
        },
        "art_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to art pieces."
        },
        "arts_broadway_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in arts and Broadway shows."
        },
        "arts_collecting_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in collecting arts."
        },
        "arts_cultural_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to arts and cultural causes."
        },
        "audio_books_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in audiobooks."
        },
        "audio_books_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior for audio books."
        },
        "auto_motorcycle_racing_spectator_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in spectating auto and motorcycle racing events."
        },
        "auto_parts_accessories_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior for auto parts and accessories."
        },
        "auto_work_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in auto work and car repairs."
        },
        "aviation_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in aviation and related topics."
        },
        "avid_collector_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's keen interest in collecting items."
        },
        "avid_music_listener_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer is an avid listener of music."
        },
        "avid_reading_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's keen interest in reading."
        },
        "baby_care_product_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to baby care products."
        },
        "back_to_school_product_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior during back-to-school seasons."
        },
        "bank_card_holder_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the consumer is a holder of a bank card."
        },
        "bank_card_presence_in_hh_indicator": {
          "type": "boolean",
          "comment": "Indicates the presence of a bank card in the consumer's household."
        },
        "baseball_spectator_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in watching baseball games."
        },
        "basketball_spectator_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in watching basketball games."
        },
        "beauty_cosmetics_purchase_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest and purchasing behavior in beauty and cosmetic products."
        },
        "board_games_puzzles_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in board games and puzzles."
        },
        "boating_sailing_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in boating and sailing."
        },
        "books_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior for books."
        },
        "camping_hiking_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in camping and hiking activities."
        },
        "career_focus_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in career development and progression."
        },
        "career_improvement_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in opportunities and resources for career improvement."
        },
        "casino_gaming_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in casino gaming."
        },
        "cat_owner_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer owns or is interested in cats."
        },
        "childrens_apparel_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to children's apparel."
        },
        "childrens_cause_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to children's causes."
        },
        "childrens_items_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in items designed for children."
        },
        "childrens_learning_activity_toy_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to learning and activity toys for children."
        },
        "childrens_product_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to products designed for children."
        },
        "christian_family_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer identifies with Christian family values."
        },
        "coins_collecting_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in collecting coins."
        },
        "collectibles_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior for collectible items."
        },
        "community_charities_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in community charities."
        },
        "computer_games_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in computer games."
        },
        "computers_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in computers."
        },
        "conservative_political_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to conservative political causes."
        },
        "consumer_electronics_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in consumer electronics."
        },
        "cosmopolitan_lifestyle_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in a cosmopolitan lifestyle."
        },
        "crafts_hobbies_product_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior for crafts and hobby-related products."
        },
        "crafts_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in crafting activities."
        },
        "cruise_vacation_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in cruise vacations."
        },
        "current_affairs_reading_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in reading about current affairs."
        },
        "dieting_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in dieting and dietary practices."
        },
        "discover_gold_premium_credit_card_use_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer uses a gold or premium Discover credit card."
        },
        "discover_regular_credit_card_use_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer uses a regular Discover credit card."
        },
        "diy_home_improvement_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in do-it-yourself home improvement projects."
        },
        "dog_owner_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer owns or is interested in dogs."
        },
        "domestic_travel_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in traveling within their own country."
        },
        "donation_contribution_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has made any form of donation contribution."
        },
        "dvd_videos_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has purchased DVDs or videos."
        },
        "environmental_issues_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to environmental issues."
        },
        "environmental_wildlife_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to environmental and wildlife causes."
        },
        "equestrian_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in equestrian activities and horses."
        },
        "estimated_property_ownership_indicator": {
          "type": "boolean",
          "comment": "Indicates an estimation of property ownership by the consumer."
        },
        "fast_trackers_lifestyle_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in a fast-paced and ambitious lifestyle."
        },
        "financial_newsletter_subscription_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has a subscription to financial newsletters."
        },
        "fine_arts_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's appreciation and interest in fine arts."
        },
        "fishing_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in fishing activities."
        },
        "football_spectator_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in watching football games."
        },
        "foreign_investing_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in foreign investments."
        },
        "gardening_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in gardening activities."
        },
        "gardening_product_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior for gardening products."
        },
        "gas_retail_card_holder_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer holds a gas or retail-specific credit card."
        },
        "gas_retail_gold_premium_credit_card_use_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer uses a gold or premium gas or retail-specific credit card."
        },
        "gas_retail_regular_credit_card_use_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer uses a regular gas or retail-specific credit card."
        },
        "general_collecting_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's general interest in collecting items."
        },
        "general_cooking_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's general interest in cooking."
        },
        "general_travel_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's overall interest in travel."
        },
        "golf_playing_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in playing golf."
        },
        "gourmet_cooking_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in gourmet cooking."
        },
        "grandchildren_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest or engagement in activities or products related to their grandchildren."
        },
        "handymen_activities_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in handymen activities and DIY tasks."
        },
        "health_beauty_product_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior for health and beauty products."
        },
        "health_cause_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to health-related causes."
        },
        "health_medical_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in health and medical topics."
        },
        "high_end_appliances_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has purchased high-end appliances."
        },
        "history_military_reading_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in reading about history and military topics."
        },
        "hockey_spectator_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in watching hockey matches."
        },
        "home_decorating_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in home decorating and interior design."
        },
        "home_garden_activities_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in home and garden activities."
        },
        "home_garden_product_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior for home and garden products."
        },
        "home_improvement_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in home improvement activities and topics."
        },
        "home_stereo_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in home stereo systems."
        },
        "homebodies_lifestyle_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's preference for a lifestyle centered around home activities."
        },
        "house_plants_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in house plants and indoor gardening."
        },
        "hunting_shooting_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in hunting and shooting activities."
        },
        "hunting_sport_leisure_product_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior for hunting, sport, and leisure products."
        },
        "infant_toddler_apparel_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to infant and toddler apparel."
        },
        "international_aid_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to international aid causes."
        },
        "international_travel_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in traveling internationally."
        },
        "jewelry_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to jewelry."
        },
        "liberal_political_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to liberal political causes."
        },
        "luggage_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to luggage and travel accessories."
        },
        "magazines_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to magazines."
        },
        "magazines_reading_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in reading magazines."
        },
        "mail_order_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has made a donation through mail order."
        },
        "mail_order_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior via mail orders."
        },
        "mail_order_response_indicator": {
          "type": "boolean",
          "comment": "Reflects the consumer's response rate to mail order advertisements or promotions."
        },
        "mastercard_gold_premium_credit_card_use_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer uses a gold or premium Mastercard credit card."
        },
        "mastercard_regular_credit_card_use_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer uses a regular Mastercard credit card."
        },
        "membership_clubs_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior in membership or subscription-based clubs."
        },
        "mens_apparel_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to men's apparel."
        },
        "mens_big_tall_apparel_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to men's big and tall apparel."
        },
        "military_memorabilia_collecting_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in collecting military memorabilia."
        },
        "money_seekers_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in seeking opportunities to increase their wealth."
        },
        "motorcycling_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in motorcycling."
        },
        "movie_collecting_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in collecting movies."
        },
        "music_collecting_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in collecting music."
        },
        "music_player_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in music players."
        },
        "musical_instruments_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has purchased musical instruments."
        },
        "nascar_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in NASCAR and related events."
        },
        "natural_foods_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in natural and organic foods."
        },
        "new_issue_credit_card_use_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer uses a newly issued credit card."
        },
        "online_education_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in online education."
        },
        "online_product_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's online purchasing behavior."
        },
        "other_cause_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to other unspecified causes."
        },
        "other_pet_owner_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer owns or is interested in pets other than dogs and cats."
        },
        "parenting_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in parenting techniques, advice, and resources."
        },
        "personal_investments_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in personal investments."
        },
        "pets_product_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior for pet products."
        },
        "photography_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in photography and related activities."
        },
        "photography_video_equipment_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to photography and video equipment."
        },
        "political_cause_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to political causes."
        },
        "premium_card_holder_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer holds any premium credit card."
        },
        "real_estate_investments_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in real estate investments."
        },
        "religious_cause_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to religious causes."
        },
        "religious_inspirational_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in religious and inspirational content."
        },
        "religious_inspirational_reading_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in religious and inspirational reading materials."
        },
        "running_jogging_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in running and jogging activities."
        },
        "satellite_dish_ownership_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer owns a satellite dish."
        },
        "science_fiction_reading_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in science fiction reading materials."
        },
        "science_space_reading_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in reading materials related to science and space."
        },
        "scuba_diving_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in scuba diving."
        },
        "self_improvement_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in self-improvement activities and topics."
        },
        "sewing_knitting_needlework_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in sewing, knitting, and needlework activities."
        },
        "smoking_tobacco_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has an interest in smoking and tobacco products."
        },
        "snow_skiing_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in snow skiing."
        },
        "soccer_spectator_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in watching soccer matches."
        },
        "sporting_events_wager_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in wagering on sporting events."
        },
        "sports_leisure_product_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior for sports and leisure products."
        },
        "sports_memorabilia_collecting_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in collecting sports memorabilia."
        },
        "stamps_collecting_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in collecting stamps."
        },
        "stocks_bonds_investments_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in investments in stocks and bonds."
        },
        "sweepstakes_contests_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in participating in sweepstakes and contests."
        },
        "tech_guru_activities_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in technological activities and being updated with the latest tech trends."
        },
        "tennis_playing_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in playing tennis."
        },
        "the_good_life_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in a luxurious and comfortable lifestyle."
        },
        "theater_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in theater."
        },
        "travel_entertainment_card_holder_use_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer uses a travel or entertainment-specific credit card."
        },
        "tv_sports_spectator_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in watching various sports on TV."
        },
        "tv_video_movie_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has purchased a TV, video, or movie."
        },
        "unknown_type_credit_card_holder_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer holds a credit card of an unspecified type."
        },
        "upscale_retail_card_holder_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer holds an upscale retail-specific credit card."
        },
        "value_priced_general_merch_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior focused on value-priced general merchandise."
        },
        "veterans_cause_donation_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer has donated to veterans' causes."
        },
        "video_games_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in video games."
        },
        "visa_gold_premium_credit_card_use_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer uses a gold or premium Visa credit card."
        },
        "visa_regular_credit_card_use_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a consumer uses a regular Visa credit card."
        },
        "walking_exercise_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in walking as an exercise activity."
        },
        "wealth_increase_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in increasing their wealth."
        },
        "wine_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in wine and wine-related activities."
        },
        "womens_apparel_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to women's apparel."
        },
        "womens_petite_apparel_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to women's petite apparel."
        },
        "womens_plus_size_apparel_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to women's plus size apparel."
        },
        "woodworking_interest_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's interest in woodworking and related activities."
        },
        "young_mens_apparel_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to young men's apparel."
        },
        "young_womens_apparel_purchase_indicator": {
          "type": "boolean",
          "comment": "Indicates a consumer's purchasing behavior related to young women's apparel."
        }
      },
      "relationships": {}
    },
    {
      "type": "contact_relation",
      "container_name": "contact_relationships",
      "is_deprecated": true,
      "deprecated_properties": [
        "contact",
        "my_id"
      ],
      "properties": {},
      "relationships": {
        "contact": {
          "targets": [
            "person"
          ],
          "comment": "Specifies the target individual of the relationship or interaction. This property identifies the person towards whom the relationship is directed, indicating the recipient of communication or the focus of the relational dynamic."
        },
        "my_id": {
          "targets": [
            "person"
          ],
          "comment": "Identifies the person initiating or defining the relationship. This property serves as a unique identifier for the individual within the context of the relationship, establishing them as the source or originator of the contact."
        }
      }
    },
    {
      "type": "contract",
      "container_name": "contracts",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "effective_date": {
          "type": "dateTime",
          "comment": "A contract effective date is the date on which a contract becomes legally binding and enforceable. It is the date on which the rights and obligations outlined in the contract go into effect."
        },
        "expiration_date": {
          "type": "dateTime",
          "comment": "A contract expiration date is the date on which a contract comes to an end, either by mutual agreement between the parties or by the completion of the terms of the contract. The expiration date of a contract is typically specified in the contract itself and represents the point at which the rights and obligations of the parties under the contract come to an end."
        }
      },
      "relationships": {
        "has_price": {
          "targets": [
            "product_price"
          ],
          "comment": "A product price amount is the numerical value of the price that a customer must pay to purchase a Staircase unit, such as a transaction or subscription."
        },
        "has_service": {
          "targets": [
            "product_api"
          ],
          "comment": "Service refers to a software application or functionality that is provided to customers over the internet."
        },
        "has_supporting_company": {
          "targets": [
            "company"
          ],
          "comment": "A supporting company refers to a company that provides products, services, or resources to another company, organization, or individual to help them achieve their goals or objective."
        },
        "offered_by": {
          "targets": [
            "company"
          ],
          "comment": "A relationship signifying which company offered the contract."
        },
        "offered_to_company": {
          "targets": [
            "company"
          ],
          "comment": "A relationship indicating to which company the contract was offered."
        },
        "offered_to_person": {
          "targets": [
            "person"
          ],
          "comment": "A relationship indicating to which person the contract was offered."
        }
      }
    },
    {
      "type": "correspondence",
      "container_name": "correspondences",
      "is_deprecated": true,
      "deprecated_properties": [
        "contact_attempt_status",
        "correspondence_date",
        "feedback_status",
        "mail_subject",
        "mail_template_name",
        "from_person",
        "has_communication_method",
        "to_person"
      ],
      "properties": {
        "contact_attempt_status": {
          "enum": [
            "Successful",
            "Attempted",
            null
          ],
          "comment": "Contact Attempt status provided by the Loan Officer. It can be 'Succesful', 'Attempted'.",
          "type": [
            "string",
            "null"
          ]
        },
        "correspondance_date": {
          "type": "string",
          "format": "date",
          "comment": "The date when the correspondence took place."
        },
        "feedback_status": {
          "enum": [
            "NoFeedback",
            "Disliked",
            "Liked",
            null
          ],
          "comment": "Feedback status provided by the Loan Officer. It can be 'Liked', 'Disliked', or 'NoFeedback' when no feedback is provided.",
          "type": [
            "string",
            "null"
          ]
        },
        "mail_subject": {
          "type": "string",
          "comment": "The subject of the email sent."
        },
        "mail_template_name": {
          "type": "string",
          "comment": "The name of the email template used."
        }
      },
      "relationships": {
        "from_person": {
          "targets": [
            "person"
          ],
          "comment": "The person initiating the correspondence."
        },
        "has_communication_method": {
          "targets": [
            "communication"
          ],
          "comment": "The method of communication."
        },
        "to_person": {
          "targets": [
            "person"
          ],
          "comment": "The recipient of the correspondence."
        }
      }
    },
    {
      "type": "credit_comment",
      "container_name": "credit_comments",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "credit_comment_code": {
          "type": "string",
          "comment": "A code value that may be associated with credit comment text data."
        },
        "credit_comment_code_source_type_other_description": {
          "type": "string",
          "comment": "Additional detail regarding the credit comment code source type."
        },
        "credit_comment_reported_date": {
          "type": "string",
          "format": "date",
          "comment": "Date that the credit comment was reported."
        },
        "credit_comment_text": {
          "type": "string",
          "comment": "Comment text data that can appear on various locations on a credit report."
        },
        "credit_comment_type_other_description": {
          "type": "string",
          "comment": "Provides additional detail when credit_comment_type is set to Other."
        }
      },
      "relationships": {}
    },
    {
      "type": "credit_error_message",
      "container_name": "credit_error_messages",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "credit_error_message_code": {
          "type": "string",
          "comment": "This is a code value associated with a Credit Error Message Text element. The Credit Error Message Source Type describes the provider of the code, which could be the credit bureau, lender or the repository bureau."
        },
        "credit_error_message_source_type": {
          "type": "string",
          "comment": "Specifies the source of an error message. Messages can come either from the credit data repository, lender or the credit bureau."
        },
        "credit_error_message_text": {
          "type": "string",
          "comment": "This is error message text that appears in a credit response transaction. It may be accompanied by a Credit Error Message Source Type that describes the source of the error message text."
        }
      },
      "relationships": {}
    },
    {
      "type": "credit_file_variation",
      "container_name": "credit_file_variations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "credit_file_variation_type": {
          "type": "string",
          "comment": "The type of variation found for borrower identity."
        }
      },
      "relationships": {}
    },
    {
      "type": "credit_file",
      "container_name": "credit_files",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "credit_file_infile_date": {
          "type": "string",
          "format": "date",
          "comment": "The Infile Date is the date that the credit data repository first established this credit data file on this borrower."
        },
        "credit_file_result_status_type": {
          "type": "string",
          "comment": "Describes the resulting status of the request for a credit file from a credit repository bureau. The full reason for a Credit File not being returned will be reported in the Credit Error Message data element."
        },
        "credit_file_result_status_type_other_description": {
          "type": "string",
          "comment": "When Credit File Result Status Type is set to Other, enter its value in this data element."
        },
        "credit_repository_source_type": {
          "type": "string",
          "comment": "This element describes the source of the credit file: equifax, experian, trans_union or unspecified if the specific sources are not specified."
        },
        "credit_repository_source_type_other_description": {
          "type": "string",
          "comment": "When credit_repository_source_type is set to other, enter its value in this data element."
        }
      },
      "relationships": {
        "has_borrower": {
          "targets": [
            "person"
          ],
          "comment": "Borrower to whom credit has been extended."
        },
        "has_credit_comment": {
          "targets": [
            "credit_comment"
          ],
          "comment": "A comment about a credit liability provided by a credit bureau (Equifax, Experian, TransUnion), a lender or other source."
        },
        "has_credit_error_message": {
          "targets": [
            "credit_error_message"
          ],
          "comment": "A credit report error message provied by a credit bureau, lender or repository bureau."
        },
        "has_credit_file_owning_bureau": {
          "targets": [
            "company"
          ],
          "comment": "The name of the bureau that produced the credit report."
        },
        "has_credit_file_variation": {
          "targets": [
            "credit_file_variation"
          ],
          "comment": "A variation in some aspect of borrower information identified while producing the credit report."
        },
        "has_credit_response_alert_message": {
          "targets": [
            "credit_response_alert_message"
          ],
          "comment": "A response alert message, related to a credit report and provided by a credit bureau, lender or repository bureau."
        },
        "has_credit_score": {
          "targets": [
            "credit_score"
          ],
          "comment": "A credit score is a numerical expression based on a level analysis of a person's credit files, representing the creditworthiness of an individual."
        }
      }
    },
    {
      "type": "credit_inquiry",
      "container_name": "credit_inquiries",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "credit_business_detail_type": {
          "enum": [
            "AdvertisingAgencies",
            "AdvertisingMiscellaneous",
            "AdvertisingNewsMedia",
            "AutomotiveAuctionsWholesale",
            "AutomotiveDealersNew",
            "AutomotiveDealersUsed",
            "AutomotiveFarmImplementDealers",
            "AutomotiveLeasing",
            "AutomotiveMiscellaneous",
            "AutomotiveParts",
            "AutomotiveRental",
            "AutomotiveRepairBodyShops",
            "AutomotiveServiceStations",
            "AutomotiveTbastoresTireDealers",
            "AutomotiveTruckDealers",
            "BankingAllBanks",
            "BankingBankcard",
            "BankingCommercialIndustrial",
            "BankingInstallmentLoansCreditLine",
            "BankingMiscellaneous",
            "BankingMortgageDepartment",
            "BankingSavingsBanks",
            "ClothingGeneral",
            "ClothingMiscellaneous",
            "ClothingSpecialtyShoeHatEtc",
            "CollectionServicesAcbofA",
            "CollectionServicesOther",
            "ContractorsGeneral",
            "ContractorsHomeImprovement",
            "ContractorsMiscellaneous",
            "ContractorsSubcontractors",
            "DepartmentAndMailOrderCompleteDepartmentStores",
            "DepartmentAndMailOrderMailOrderFirms",
            "DepartmentAndMailOrderMiscellaneous",
            "DepartmentAndMailOrderVarietyStores",
            "EmploymentServices",
            "FarmAndGardenSuppliesChemicalAndFertilizer",
            "FarmAndGardenSuppliesFeedAndSeed",
            "FarmAndGardenSuppliesMiscellaneous",
            "FarmAndGardenSuppliesNurseryAndLandscaping",
            "FinanceAutomobile",
            "FinanceBailBonds",
            "FinanceBrokerageAndInvestmentFirms",
            "FinanceBulkPurchase",
            "FinanceCreditUnions",
            "FinanceEducation",
            "FinanceFactoringCompanies",
            "FinanceMiscellaneous",
            "FinanceMortgageBrokers",
            "FinanceMortgageCompanies",
            "FinanceMortgageReporters",
            "FinancePersonalLoanCompanies",
            "FinanceSales",
            "FinanceSavingsAndLoanAssociations",
            "GovernmentCityAndCounty",
            "GovernmentFederal",
            "GovernmentMiscellaneous",
            "GovernmentState",
            "GroceryDairies",
            "GroceryMiscellaneous",
            "GroceryNeighborhood",
            "GrocerySupermarkets",
            "HomeFurnishingApplianceSalesAndService",
            "HomeFurnishingCarpetAndFloorCoverings",
            "HomeFurnishingElectronicsTelevisionAndRadio",
            "HomeFurnishingFurniture",
            "HomeFurnishingFurnitureRental",
            "HomeFurnishingInteriorDecoratorsDesign",
            "HomeFurnishingMiscellaneous",
            "HomeFurnishingMusicAndRecords",
            "InsuranceGeneral",
            "InsuranceLife",
            "InsuranceMiscellaneous",
            "JewelryAndCameraCameras",
            "JewelryAndCameraComputerSalesAndServices",
            "JewelryAndCameraJewelry",
            "JewelryAndCameraMiscellaneous",
            "JewelryAndCameraVideoTapeRentalAndSales",
            "LumberAndHardwareAirConditioningPlumbingElectrical",
            "LumberAndHardwareFixtureAndCabinet",
            "LumberAndHardwareLumberYards",
            "LumberAndHardwareMiscellaneous",
            "LumberAndHardwarePaintGlassAndPaper",
            "LumberAndHardwareStores",
            "MedicalAndHealthAnimalHospitals",
            "MedicalAndHealthChiropractors",
            "MedicalAndHealthDentists",
            "MedicalAndHealthDoctorsAndClinics",
            "MedicalAndHealthFuneralHomesAndCemeteries",
            "MedicalAndHealthHospitals",
            "MedicalAndHealthMedicalEquipment",
            "MedicalAndHealthMiscellaneous",
            "MedicalAndHealthOptometristsAndOpticalStores",
            "MedicalAndHealthOsteopaths",
            "MedicalAndHealthPharmaciesAndDrugs",
            "MedicalAndHealthVeterinarians",
            "MiscellaneousAuthenticationProducts",
            "MiscellaneousCreditBureaus",
            "MiscellaneousCreditReportBrokers",
            "MiscellaneousOther",
            "MiscellaneousRetail",
            "MiscellaneousServices",
            "MiscellaneousWholesale",
            "OilAndNationalCreditCardsAirlineTravelCards",
            "OilAndNationalCreditCardsCreditCardCompanies",
            "OilAndNationalCreditCardsMiscellaneous",
            "OilAndNationalCreditCardsOilCompanies",
            "PersonalServicesNotMedicalAccountants",
            "PersonalServicesNotMedicalBarbersBeautyShops",
            "PersonalServicesNotMedicalCountryClubsRestaurants",
            "PersonalServicesNotMedicalDetectiveInvestigativeServices",
            "PersonalServicesNotMedicalDryCleaningLaundry",
            "PersonalServicesNotMedicalEngineering",
            "PersonalServicesNotMedicalEquipmentLeasing",
            "PersonalServicesNotMedicalFlorists",
            "PersonalServicesNotMedicalHealthAndFitnessClubs",
            "PersonalServicesNotMedicalLegal",
            "PersonalServicesNotMedicalMiscellaneous",
            "PersonalServicesNotMedicalPestControl",
            "PersonalServicesNotMedicalPhotographers",
            "RealEstateAndPublicAccommodationApartments",
            "RealEstateAndPublicAccommodationHotels",
            "RealEstateAndPublicAccommodationMiscellaneous",
            "RealEstateAndPublicAccommodationMobileHomes",
            "RealEstateAndPublicAccommodationMotels",
            "RealEstateAndPublicAccommodationOfficeLeasing",
            "RealEstateAndPublicAccommodationPropertyManagement",
            "RealEstateAndPublicAccommodationRealEstateSales",
            "SportingGoodsAircraftSalesAndService",
            "SportingGoodsBoatAndMarinas",
            "SportingGoodsMiscellaneous",
            "SportingGoodsMotorcycleAndBicycle",
            "SportingGoodsStores",
            "UtilitiesAndFuelCableSatelliteCompanies",
            "UtilitiesAndFuelCoalAndWoodDealers",
            "UtilitiesAndFuelElectricalLightAndPower",
            "UtilitiesAndFuelFuelOilDealers",
            "UtilitiesAndFuelGarbageAndRubbishDisposals",
            "UtilitiesAndFuelGasNaturalAndBottled",
            "UtilitiesAndFuelMiscellaneous",
            "UtilitiesAndFuelTelephoneCompanies",
            "UtilitiesAndFuelWaterCompanies",
            "WholesaleAutomotiveSupplies",
            "WholesaleBuildingAndHardwareSupply",
            "WholesaleClothingAndDryGoods",
            "WholesaleCreditCardProcessing",
            "WholesaleDrugsAndChemicals",
            "WholesaleGroceries",
            "WholesaleHomeFurnishings",
            "WholesaleMachineryAndEquipment",
            "WholesaleMiscellaneous",
            null
          ],
          "comment": "Details about the type of business that has extended a line of credit or loan to a borrower.",
          "type": [
            "string",
            "null"
          ]
        },
        "credit_inquiry_date": {
          "type": "string",
          "format": "date",
          "comment": "The date of the credit inquiry."
        },
        "credit_inquiry_result_type": {
          "type": "string",
          "comment": "The result from a credit inquiry - did the lender offer credit, refuse credit, etc."
        },
        "credit_business_type": {
          "enum": [
            "Advertising",
            "Automotive",
            "Banking",
            "Clothing",
            "CollectionServices",
            "Contractors",
            "DepartmentAndMailOrder",
            "Employment",
            "FarmAndGardenSupplies",
            "Finance",
            "Government",
            "Grocery",
            "HomeFurnishing",
            "Insurance",
            "JewelryAndCamera",
            "LumberAndHardware",
            "MedicalAndHealth",
            "Miscellaneous",
            "MiscellaneousAndPublicRecord",
            "OilAndNationalCreditCards",
            "PersonalServicesNotMedical",
            "RealEstateAndPublicAccommodation",
            "SportingGoods",
            "UtilitiesAndFuel",
            "Wholesale",
            null
          ],
          "comment": "The type of business that has extended a line of credit or loan to a borrower.",
          "type": [
            "string",
            "null"
          ]
        },
        "credit_loan_type": {
          "type": "string",
          "comment": "This element contains an enumerated list of common loan types. If the loan type is Other, then the description is entered into the Credit Loan Type Other Description element."
        },
        "credit_loan_type_other_description": {
          "type": "string",
          "comment": "If Credit Loan Type was set to Other, then this element will contain a description of the loan type."
        },
        "duplicate_group_identifier": {
          "type": "string",
          "comment": "Data records with the same Duplicate Group Identifier value have been identified as being duplicate records from different sources. Within a set of records that have the same Duplicate Group Identifier, one record is marked with a Primary Record Indicator."
        },
        "primary_record_indicator": {
          "type": "string",
          "comment": "If this indicator is missing or if this indicator is set to True, the data element is the primary record to be used for output and evaluation. Most mortgage credit report data is collected from multiple sources (i.e. Equifax, Experian and Trans Union)."
        }
      },
      "relationships": {
        "has_borrower": {
          "targets": [
            "person"
          ],
          "comment": "Borrower to whom credit has been extended."
        },
        "has_credit_comment": {
          "targets": [
            "credit_comment"
          ],
          "comment": "A comment about a credit liability provided by a credit bureau (Equifax, Experian, TransUnion), a lender or other source."
        },
        "has_credit_file": {
          "targets": [
            "credit_file"
          ],
          "comment": "Refers to the compilation of data that details a borrower’s credit history and current credit status as collected by a credit reporting agency."
        },
        "has_credit_liability": {
          "targets": [
            "liability"
          ],
          "comment": "Descriptive information about an non real estate liability related to an extension of credit."
        },
        "has_credit_repository": {
          "targets": [
            "credit_repository"
          ],
          "comment": "Credit repository refers to an entity that collects and stores credit-related information about individuals."
        },
        "has_credit_trade_reference": {
          "targets": [
            "credit_trade_reference"
          ],
          "comment": "Credit trade reference refers to detailed information about an individual credit account that appears on a consumer's credit report."
        }
      }
    },
    {
      "type": "credit_public_record",
      "container_name": "credit_public_records",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "credit_public_record_account_ownership_type": {
          "type": "string",
          "comment": "Describes the ownership relation of the borrower(s) to the public record (i.e. are they individually responsible, jointly responsible, terminated)."
        },
        "credit_public_record_consumer_dispute_indicator": {
          "type": "boolean",
          "comment": "This element indicates whether or not the consumer (borrower) disputes information reported for this public record and has filed a FCRA (Fair Credit Reporting Act) dispute document."
        },
        "credit_public_record_court_name": {
          "type": "string",
          "comment": "The name of the court reporting the public record."
        },
        "credit_public_record_derogatory_data_indicator": {
          "type": "boolean",
          "comment": "This element indicates whether or not the public record contains adverse or derogatory data."
        },
        "credit_public_record_disposition_date": {
          "type": "string",
          "format": "date",
          "comment": "This element provides the date that the Public Record Disposition Type first became effective."
        },
        "credit_public_record_disposition_type": {
          "type": "string",
          "comment": "This is the enumerated disposition or the public record as of the Disposition Date."
        },
        "credit_public_record_disposition_type_other_description": {
          "type": "string",
          "comment": "If the Credit Public Record Disposition Type is set to Other, enter the disposition in this element."
        },
        "credit_public_record_docket_identifier": {
          "type": "string",
          "comment": "The Docket Identifier can be a Case Number, Docket Number, Public Record Book, Page or Sequence Number."
        },
        "credit_public_record_filed_date": {
          "type": "string",
          "format": "date",
          "comment": "The date that the public record was filed by the court."
        },
        "credit_public_record_legal_obligation_amount": {
          "type": "decimal",
          "comment": "This is the amount listed in the public record that the defendant is obligated to pay."
        },
        "credit_public_record_manual_update_indicator": {
          "type": "boolean",
          "comment": "This element indicates whether or not the data in the public record has been manually updated by the credit bureau based on an investigation.."
        },
        "credit_public_record_paid_date": {
          "type": "string",
          "format": "date",
          "comment": "The date that the Legal Obligation Amount was paid to zero."
        },
        "credit_public_record_payment_frequency_type": {
          "type": "string",
          "comment": "This element indicates the frequency of payments allowed for the Legal Obligation Amount."
        },
        "credit_public_record_payment_frequency_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for Credit Public Record Payment Frequency Type."
        },
        "credit_public_record_reported_date": {
          "type": "string",
          "format": "date",
          "comment": "The date that the public record data was last reported by the court to the credit repository bureau."
        },
        "credit_public_record_settled_date": {
          "type": "string",
          "format": "date",
          "comment": "The date that the public record case was settled."
        },
        "credit_public_record_type": {
          "type": "string",
          "comment": "This is the enumerated type of public record reported by the credit bureau."
        },
        "credit_public_record_type_other_description": {
          "type": "string",
          "comment": "If the Public Record Type is set to Other, enter the type in this element."
        },
        "duplicate_group_identifier": {
          "type": "string",
          "comment": "Data records with the same Duplicate Group Identifier value have been identified as being duplicate records from different sources. Within a set of records that have the same Duplicate Group Identifier, one record is marked with a Primary Record Indicator."
        },
        "primary_record_indicator": {
          "type": "string",
          "comment": "If this indicator is missing or if this indicator is set to True, the data element is the primary record to be used for output and evaluation. Most mortgage credit report data is collected from multiple sources (i.e. Equifax, Experian and Trans Union)."
        }
      },
      "relationships": {
        "has_borrower": {
          "targets": [
            "person"
          ],
          "comment": "Borrower to whom credit has been extended."
        },
        "has_credit_comment": {
          "targets": [
            "credit_comment"
          ],
          "comment": "A comment about a credit liability provided by a credit bureau (Equifax, Experian, TransUnion), a lender or other source."
        },
        "has_credit_file": {
          "targets": [
            "credit_file"
          ],
          "comment": "Refers to the compilation of data that details a borrower’s credit history and current credit status as collected by a credit reporting agency."
        },
        "has_credit_public_record_attorney": {
          "targets": [
            "person"
          ],
          "comment": "The name of the attorney (normally the plaintiff) reported in the public record."
        },
        "has_credit_public_record_defendant": {
          "targets": [
            "person"
          ],
          "comment": "The name of the defendant reported in the public record."
        },
        "has_credit_public_record_plaintiff": {
          "targets": [
            "person"
          ],
          "comment": "The name of the plaintiff reported in the public record."
        },
        "has_credit_repository": {
          "targets": [
            "credit_repository"
          ],
          "comment": "Credit repository refers to an entity that collects and stores credit-related information about individuals."
        },
        "has_credit_trade_reference": {
          "targets": [
            "credit_trade_reference"
          ],
          "comment": "Credit trade reference refers to detailed information about an individual credit account that appears on a consumer's credit report."
        }
      }
    },
    {
      "type": "credit_repository",
      "container_name": "credit_repositories",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "credit_repository_source_type": {
          "type": "string",
          "comment": "This element describes the source of the credit file: equifax, experian, trans_union or unspecified if the specific sources are not specified."
        },
        "credit_repository_source_type_other_description": {
          "type": "string",
          "comment": "When credit_repository_source_type is set to other, enter its value in this data element."
        },
        "credit_repository_subscriber_code": {
          "type": "string",
          "comment": "This is the subscriber code (sometimes called member code) of the liability holder or provider of data to the credit repository bureau."
        }
      },
      "relationships": {}
    },
    {
      "type": "credit_response_alert_message",
      "container_name": "credit_response_alert_messages",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "credit_repository_source_type": {
          "type": "string"
        },
        "credit_repository_source_type_other_description": {
          "type": "string"
        },
        "credit_response_alert_message_adverse_indicator": {
          "type": "boolean"
        },
        "credit_response_alert_message_category_type": {
          "type": "string"
        },
        "credit_response_alert_message_category_type_other_description": {
          "type": "string"
        },
        "credit_response_alert_message_code": {
          "type": "string"
        },
        "credit_response_alert_message_code_source_type": {
          "type": "string"
        },
        "credit_response_alert_message_code_source_type_other_description": {
          "type": "string"
        },
        "credit_response_alert_message_text": {
          "type": "string"
        },
        "credit_response_alert_message_type": {
          "type": "string"
        },
        "credit_response_alert_message_type_other_description": {
          "type": "string"
        }
      },
      "relationships": {}
    },
    {
      "type": "credit_score_factor",
      "container_name": "credit_score_factors",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "credit_score_factor_code": {
          "type": "string",
          "comment": "Numeric code representing a factor of the borrower's credit which give context to the credit score."
        },
        "credit_score_factor_text": {
          "type": "string",
          "comment": "Text description of a factor of the borrower's credit which give context to the credit score."
        }
      },
      "relationships": {}
    },
    {
      "type": "credit_score_model",
      "container_name": "credit_score_models",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "credit_score_category_type": {
          "type": "string",
          "comment": "An enumerated list that describes the general type or purpose of a credit score model. This allows LOS systems to extract scores by a more general category, without having to know the specific score model names."
        },
        "credit_score_category_type_other_description": {
          "type": "string",
          "comment": "When Credit Score Category Type is set to Other, enter its value in this data element."
        },
        "credit_score_maximum_value": {
          "type": "integer",
          "comment": "This is the upper range of possible score values for this Credit Score Model Name Type. The range of credit score values is required to be part of the FACTA disclosure."
        },
        "credit_score_minimum_value": {
          "type": "integer",
          "comment": "This is the lower range of possible score values for this Credit Score Model Name Type. The range of credit score values is required to be part of the FACTA disclosure."
        },
        "credit_score_model_name_type": {
          "type": "string",
          "comment": "A value from a MISMO prescribed list that specifies the score algorithm model name used to produce the referenced credit risk score."
        },
        "credit_score_model_name_type_other_description": {
          "type": "string",
          "comment": "When the Credit Score Model Name Type is set to Other, this element holds the description."
        },
        "credit_score_model_range_of_scores_description": {
          "type": "string",
          "comment": "The range of scores possible under the credit score model."
        }
      },
      "relationships": {}
    },
    {
      "type": "credit_score",
      "container_name": "credit_scores",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "credit_agency_type": {
          "type": "string",
          "comment": "Credit agency type refers to the type of organization that provides credit information used to calculate a borrower's credit score."
        },
        "credit_report_type": {
          "type": "string",
          "comment": "The type of credit report that was requested or produced. Most common types are Merged report (data from credit data repositories is merged), and RMCR (Residential Mortgage Credit Report - contains verified liabilities, employment, etc.)"
        },
        "credit_report_type_other_description": {
          "type": "string",
          "comment": "When Credit Report Type is set to Other, enter its description in this element."
        },
        "credit_repository_single_source_indicator": {
          "type": "boolean",
          "comment": "If true, indicates the credit report was based on the input from a single credit repository. Also known as a single in-file credit report."
        },
        "credit_repository_source_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a Credit Repository Source is available. If a Credit Repository Source is available then the source can be provided in Credit Repository Source Type."
        },
        "credit_repository_source_type": {
          "type": "string",
          "comment": "This element describes the source of the credit file: equifax, experian, trans_union or unspecified if the specific sources are not specified."
        },
        "credit_repository_source_type_other_description": {
          "type": "string",
          "comment": "When credit_repository_source_type is set to other, enter its value in this data element."
        },
        "credit_score_category_type": {
          "type": "string",
          "comment": "An enumerated list that describes the general type or purpose of a credit score model. This allows LOS systems to extract scores by a more general category, without having to know the specific score model names."
        },
        "credit_score_category_type_other_description": {
          "type": "string",
          "comment": "When Credit Score Category Type is set to Other, enter its value in this data element."
        },
        "credit_score_category_version_type": {
          "type": "string",
          "comment": "A value from a MISMO prescribed list that represents a specific version, release of a Credit Score Category Type."
        },
        "credit_score_category_version_type_other_description": {
          "type": "string",
          "comment": "A free-form text field that specifies the enumeration when the value of Other is used for Credit Score Category Version Type."
        },
        "credit_score_date": {
          "type": "string",
          "format": "date",
          "comment": "Date that the referenced credit score was produced."
        },
        "credit_score_exclusion_reason_type": {
          "type": "string",
          "comment": "An enumerated list of reasons why a credit score could not be generated."
        },
        "credit_score_facta_inquiries_indicator": {
          "type": "boolean",
          "comment": "This indicator is set to True when the Credit Risk Score Value of the borrower was negatively affected by the presence of credit inquiry records on their credit report. There may be FACT Act compliance requirements related to this alert message."
        },
        "credit_score_impairment_type": {
          "type": "string",
          "comment": "Identifies a characteristic of the Credit Score that impairs its effectiveness as an indicator of credit risk."
        },
        "credit_score_impairment_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for Credit Score Impairment Type."
        },
        "credit_score_rank_percentile_description": {
          "type": "string",
          "comment": "A detailed description of how the credit score compares to the scores of other consumers."
        },
        "credit_score_rank_percentile_value": {
          "type": "decimal",
          "comment": "The percentile that the parties credit score is in comparison to all consumers."
        },
        "credit_score_value": {
          "type": "decimal",
          "comment": "Numeric credit score resulting from credit evaluation model."
        },
        "credit_vendor_type": {
          "type": "string",
          "comment": "Refers to the type of company or organization that provides the credit information used to calculate a borrower's credit score."
        },
        "selected_credit_score_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the Credit Score Value is the recommended value chosen from a collection of credit scores for a single borrower, based on criteria as defined by trading partners. For example, this may be used to identify the middle Credit Score."
        }
      },
      "relationships": {
        "has_credit_score_factor": {
          "targets": [
            "credit_score_factor"
          ],
          "comment": "Factors of the borrower's credit which give context to the referenced credit score. The factor is normally rdf:type numeric code. The Credit Score Factor Text contains the text for the factor code."
        },
        "has_credit_score_model": {
          "targets": [
            "credit_score_model"
          ],
          "comment": "A credit score model is a statistical tool used by lenders and financial institutions to evaluate an individual's creditworthiness."
        },
        "has_credit_score_provider": {
          "targets": [
            "company"
          ],
          "comment": "Provider of the credit score."
        },
        "has_credit_score_service": {
          "targets": [
            "product"
          ],
          "comment": "Service that requested or produced the credit score."
        }
      }
    },
    {
      "type": "credit_trade_reference",
      "container_name": "credit_trade_references",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {},
      "relationships": {
        "has_company": {
          "targets": [
            "company"
          ],
          "comment": "A company is a legal entity formed by a group of people or individuals for the purpose of carrying out a business or commercial activity."
        },
        "has_credit_repository": {
          "targets": [
            "credit_repository"
          ],
          "comment": "Credit repository refers to an entity that collects and stores credit-related information about individuals."
        }
      }
    },
    {
      "type": "credit",
      "container_name": "credits",
      "is_deprecated": false,
      "deprecated_properties": [
        "number_active_credit_lines",
        "credit_score",
        "has_person"
      ],
      "properties": {
        "credit_agency_type": {
          "type": "string",
          "comment": "Credit agency type refers to the type of organization that provides credit information used to calculate a borrower's credit score."
        },
        "credit_frozen_status_equifax_indicator": {
          "type": "boolean",
          "comment": "Credit frozen status equifax indicator is a specific flag or marker on a consumer's credit report that indicates whether or not their credit report is frozen with Equifax."
        },
        "credit_frozen_status_experian_indicator": {
          "type": "boolean",
          "comment": "Credit frozen status equifax indicator is a specific flag or marker on a consumer's credit report that indicates whether or not their credit report is frozen with Experian."
        },
        "credit_frozen_status_transunion_indicator": {
          "type": "boolean",
          "comment": "Credit frozen status equifax indicator is a specific flag or marker on a consumer's credit report that indicates whether or not their credit report is frozen with TransUnion."
        },
        "credit_identifier": {
          "type": "string",
          "comment": "A credit identifier is a unique identifier for the credit record of an individual or organization."
        },
        "credit_limit_amount": {
          "type": "decimal",
          "comment": "Credit limit amount is the maximum amount of money that a financial institution, such as a credit card issuer or a bank, is willing to extend to a borrower or cardholder on a credit account. It represents the highest amount of credit that the borrower or cardholder can use within that account without exceeding it."
        },
        "credit_rating_code_type": {
          "type": "string",
          "comment": "Identifies which system of Manner Of Payment (MOP) rating codes is in the credit report. If Other is selected, then the name of the coding system will appear in the Credit Rating Code Type Other Description."
        },
        "credit_rating_code_type_other_description": {
          "type": "string",
          "comment": "If the Credit Rating Code Type is set to Other, enter its description in this data attribute."
        },
        "credit_report_action_type": {
          "type": "string",
          "comment": "Credit report action type (force_new, other, reissue, retrieve, secondary_use_notification, status_query, submit, update, and upgrade) refer to specific types of credit report action types."
        },
        "credit_report_first_issued_date": {
          "type": "string",
          "format": "date",
          "comment": "Date and time the referenced credit report was first issued."
        },
        "credit_report_last_updated_date": {
          "type": "string",
          "format": "date",
          "comment": "The date and time that the referenced credit report was last updated or revised."
        },
        "credit_report_merge_type": {
          "type": "string",
          "comment": "This element indicates how duplicate data from multiple sources is handled on a credit report."
        },
        "credit_report_request_action_type": {
          "type": "string",
          "comment": "The type of action requested for the credit report."
        },
        "credit_report_transaction_identifier": {
          "type": "string",
          "comment": "Uniquely identifies a specific instance of a credit report transaction."
        },
        "credit_report_type": {
          "type": "string",
          "comment": "The type of credit report that was requested or produced. Most common types are Merged report (data from credit data repositories is merged), and RMCR (Residential Mortgage Credit Report - contains verified liabilities, employment, etc.)"
        },
        "credit_report_type_other_description": {
          "type": "string",
          "comment": "When Credit Report Type is set to Other, enter its description in this element."
        },
        "credit_repository_included_equifax_indicator": {
          "type": "boolean",
          "comment": "This element indicates whether Equifax is included in either the request or response."
        },
        "credit_repository_included_experian_indicator": {
          "type": "boolean",
          "comment": "This element indicates whether Experian is included in either the request or response."
        },
        "credit_repository_included_transunion_indicator": {
          "type": "boolean",
          "comment": "This element indicates whether TransUnion is included in either the request or response."
        },
        "credit_request_data_credit_repository_included_equifax_indicator": {
          "type": "boolean",
          "comment": "Credit request data credit repository included equifax indicator is a specific flag or marker that indicates whether Equifax is one of the credit reporting agencies included in a consumer credit request."
        },
        "credit_request_data_credit_repository_included_experian_indicator": {
          "type": "boolean",
          "comment": "Credit request data credit repository included equifax indicator is a specific flag or marker that indicates whether Experian is one of the credit reporting agencies included in a consumer credit request."
        },
        "credit_request_data_credit_repository_included_transunion_indicator": {
          "type": "boolean",
          "comment": "Credit request data credit repository included equifax indicator is a specific flag or marker that indicates whether TransUnion is one of the credit reporting agencies included in a consumer credit request."
        },
        "credit_request_type": {
          "enum": [
            "Joint",
            "Individual",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "credit_score": {
          "type": "integer",
          "comment": "A credit score is a numerical representation of a person's creditworthiness based on their credit history. It's a three-digit number that ranges from 300 to 850, with higher scores indicating better creditworthiness."
        },
        "number_active_credit_lines": {
          "type": "integer",
          "comment": "Active credit lines refers to the number of lines of credit that an individual has, where a credit line is a flexible and pre-approved borrowing arrangement offered by a bank or credit union."
        },
        "payment_pattern_rating_code_type": {
          "type": "string",
          "comment": "Identifies which system of rating codes is used within the Credit Liability Payment Pattern Data text string."
        },
        "payment_pattern_rating_code_type_other_description": {
          "type": "string",
          "comment": "When Payment Pattern Rating Code Type has a value of Other, this element identifies the rating code system applied to the Credit Liability Payment Pattern Data text string."
        }
      },
      "relationships": {
        "has_credit_bureau": {
          "targets": [
            "company"
          ],
          "comment": "An organization that collects and maintains individual credit information and provides it to lenders, creditors, and consumers in the form of a credit report."
        },
        "has_credit_consumer_referral": {
          "targets": [
            "person"
          ],
          "comment": "A person who refers a consumer to a credit reporting agency or a credit bureau."
        },
        "has_credit_file": {
          "targets": [
            "credit_file"
          ],
          "comment": "Refers to the compilation of data that details a borrower’s credit history and current credit status as collected by a credit reporting agency."
        },
        "has_credit_inquiry": {
          "targets": [
            "credit_inquiry"
          ],
          "comment": "A credit inquiry, also known as a credit check, occurs when a lender or another authorized entity requests to review a borrower's credit report from a credit reporting agency."
        },
        "has_credit_liability": {
          "targets": [
            "liability"
          ],
          "comment": "Descriptive information about an non real estate liability related to an extension of credit."
        },
        "has_credit_public_record": {
          "targets": [
            "credit_public_record"
          ],
          "comment": "A credit public record refers to any publicly available legal document that can impact an individual's credit report."
        },
        "has_credit_repository": {
          "targets": [
            "credit_repository"
          ],
          "comment": "Credit repository refers to an entity that collects and stores credit-related information about individuals."
        },
        "has_credit_request": {
          "targets": [
            "invocation"
          ],
          "comment": "A link back to the request data used to generate this response."
        },
        "has_credit_response_alert_message": {
          "targets": [
            "credit_response_alert_message"
          ],
          "comment": "A response alert message, related to a credit report and provided by a credit bureau, lender or repository bureau."
        },
        "has_credit_score": {
          "targets": [
            "credit_score"
          ],
          "comment": "A credit score is a numerical expression based on a level analysis of a person's credit files, representing the creditworthiness of an individual."
        },
        "has_credit_score_model": {
          "targets": [
            "credit_score_model"
          ],
          "comment": "A credit score model is a statistical tool used by lenders and financial institutions to evaluate an individual's creditworthiness."
        },
        "has_credit_summary": {
          "targets": [
            "credit_summary"
          ],
          "comment": "Credit summary refers to a concise aggregation or overview of a borrower's credit history that is part of a credit report used in the mortgage lending process."
        },
        "has_credit_trade_reference": {
          "targets": [
            "credit_trade_reference"
          ],
          "comment": "Credit trade reference refers to detailed information about an individual credit account that appears on a consumer's credit report."
        },
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        },
        "has_regulatory_product": {
          "targets": [
            "regulatory_product"
          ],
          "comment": "Regulatory product refers to a specific type of credit report that is structured and formatted to meet certain regulatory requirements."
        },
        "owed_by": {
          "targets": [
            "person"
          ],
          "comment": "The person who owes the creditor."
        },
        "owed_to": {
          "targets": [
            "company"
          ],
          "comment": "The company that extended credit to the borrower."
        }
      }
    },
    {
      "type": "custom_field",
      "container_name": "custom_fields",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "key": {
          "type": "string",
          "comment": "Custom field key refers to a unique identifier or attribute associated with a node or relationship. It serves as a primary means of accessing and retrieving specific elements within the graph."
        },
        "key_label": {
          "type": "string",
          "comment": "Custom field key label refers to the name or identifier assigned to a specific property key in an RDF database schema."
        },
        "value": {
          "type": "string",
          "comment": "Custom field value refers to data that is stored as a a value within a key-value pair."
        }
      },
      "relationships": {}
    },
    {
      "type": "smart_contract",
      "container_name": "smart_contracts",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "name": {
          "type": "string",
          "comment": "The name of the smart contract."
        },
        "wallet_address": {
          "type": "string",
          "comment": "The hash of the smart contract."
        },
        "address": {
          "type": "string",
          "comment": "The address of the smart contract."
        }
      }
    },
    {
      "type": "customer_contact",
      "container_name": "customer_contacts",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "provider_name": {
          "type": "string",
          "comment": "Provider name is the name of the company or organization that provides the customer contact service."
        },
        "email_provider_identifier": {
          "type": "string",
          "comment": "Email provider identifier is a unique identifier for an email service provider."
        },
        "mls_identifier": {
          "type": "string",
          "comment": "MLS ID the customer is interested in."
        },
        "email_subject": {
          "type": "string",
          "comment": "Email subject is the title or brief description of an email message that appears in the recipient's inbox."
        },
        "customer_contact_identifier": {
          "type": "string",
          "comment": "A unique identifier for a customer contact."
        },
        "voicemail_url": {
          "type": "string",
          "comment": "A voicemail URL is a link that provides access to a recorded voicemail message."
        },
        "voicemail_duration": {
          "type": "integer",
          "comment": "Voicemail duration is the length of time a caller is allowed to record a message when leaving a voicemail, measured in seconds."
        },
        "voicemail_start_time": {
          "type": "dateTime",
          "comment": "Voicemail start time refers to the exact moment when the caller begins recording their message after the voicemail greeting."
        },
        "voicemail_end_time": {
          "type": "dateTime",
          "comment": "Voicemail end time is the moment when the caller finishes recording their message and hangs up."
        },
        "voicemail_audio_file": {
          "type": "string",
          "comment": "Voicemail audio file is a unique identifier referencing the binary large object (BLOB) that stores the audio data of a voicemail message."
        },
        "voicemail_audio_text": {
          "type": "string",
          "comment": "Voicemail audio text is a text version of a voicemail message."
        },
        "phone_call_audio_file": {
          "type": "string",
          "comment": "Phone call audio file is a unique identifier referencing the binary large object (BLOB) that stores the audio data of a phone call."
        },
        "phone_call_transcript_url": {
          "type": "string",
          "comment": "Voicemail audio file is a unique identifier referencing the binary large object (BLOB) that stores the audio data of a voicemail message."
        },
        "phone_call_transcript_file": {
          "type": "string",
          "comment": "Phone call transcript file is a unique identifier referencing the binary large object (BLOB) that stores the transcript from a phone call."
        },
        "phone_call_transcript_text": {
          "type": "string",
          "comment": "Phone call transcript text is a text version of a spoken phone conversation."
        },
        "phone_call_duration": {
          "type": "integer",
          "comment": "Phone call duration is the length of time of a spoken phone conversation, measured in seconds."
        },
        "phone_call_status": {
          "enum": [
            "Queued",
            "Ringing",
            "InProgress",
            "Completed",
            "Failed",
            "Busy",
            "NoAnswer",
            "Canceled",
            null
          ],
          "comment": "Phone call status provides information about the call's progress, from initiation to completion or failure.",
          "type": [
            "string",
            "null"
          ]
        },
        "phone_call_status_other_description": {
          "type": "string",
          "comment": "Optional additional details about the contact method when 'Other' is selected in `phone_call_status`."
        },
        "phone_call_direction": {
          "enum": [
            "Outgoing",
            "Incoming",
            null
          ],
          "comment": "Phone call direction indicates whether a phone call was initiated by the system or received by the system.",
          "type": [
            "string",
            "null"
          ]
        },
        "phone_call_direction_other_description": {
          "type": "string",
          "comment": "Optional additional details about the contact method when 'Other' is selected in `phone_call_direction`."
        },
        "phone_call_caller_id": {
          "type": "string",
          "comment": "Phone call caller ID is the information displayed on a recipient's phone when an incoming call is received. It typically includes the phone number of the caller and, sometimes, the caller's name."
        },
        "phone_call_price": {
          "type": "decimal",
          "comment": "Phone call price is the monetary amount charged for a phone call, typically calculated based on factors such as call duration, call destination, and service plan."
        },
        "phone_call_transcript_confidence": {
          "type": "decimal",
          "comment": "Transcript confidence is represented as a floating-point number between 0 and 1. This value indicates the level of certainty the model has in the accuracy of the transcribed text. Higher values indicate higher confidence in the transcript."
        },
        "phone_call_customer_sentiment": {
          "type": "decimal",
          "comment": "Phone call customer sentiment provides a sentiment score within a range of -1 to 1. -1: Indicates a highly negative sentiment. 0: Represents a neutral sentiment. 1: Signifies a highly positive sentiment."
        },
        "phone_call_callback_number": {
          "type": "string",
          "comment": "Phone call callback number that contact provided to call back."
        },
        "click_geo_location": {
          "type": "string",
          "comment": "A string-based reference to the geographical location of the device from which a click originated. It pinpoints the physical location of the customer at the moment of the click."
        },
        "click_location_of_interest": {
          "type": "string",
          "comment": "A string-based reference to the geographical location associated with a click. This data point can be used to infer user intent, such as proximity to a business or interest in a specific geographical area."
        },
        "click_source_type": {
          "enum": [
            "GoogleSearch",
            "SearchPartner",
            "DisplayNetwork",
            "SmartShoppingCampaign",
            "Youtube",
            "GoogleVideoPartner",
            null
          ],
          "comment": "Specifies the platform or network where a click originated. It specifies the advertising channel responsible for driving traffic to a particular destination.",
          "type": [
            "string",
            "null"
          ]
        },
        "click_source_type_other_description": {
          "type": "string",
          "comment": "Optional additional details about the contact method when 'Other' is selected in `click_source_type`."
        },
        "keyword_match_type": {
          "enum": [
            "Exact",
            "Phrase",
            "Broad",
            null
          ],
          "comment": "Specifies the level of match between a user's search query and a keyword for an ad to be triggered. This attribute indicates the potential reach and relevance of an ad based on user search intent.",
          "type": [
            "string",
            "null"
          ]
        },
        "keyword_match_type_other_description": {
          "type": "string",
          "comment": "Optional additional details about the contact method when 'Other' is selected in `keyword_match_type`."
        },
        "google_click_identifier": {
          "type": "string",
          "comment": "A unique identifier assigned by Google Ads to track the performance of an ad click. It is used to attribute conversions and gather data about user behavior after clicking on an ad."
        },
        "matched_query_keyword": {
          "type": "string",
          "comment": "The keyword entered by the customer that triggered the ad."
        },
        "ad_placement": {
          "type": "string",
          "comment": "The specific website or app where the ad was clicked."
        },
        "feedback_status": {
          "enum": [
            "NoFeedback",
            "Disliked",
            "Liked",
            null
          ],
          "comment": "Indicates the feedback provided by the contactee. Can be 'Liked', 'Disliked', or 'NoFeedback' if no feedback was given.",
          "type": [
            "string",
            "null"
          ]
        },
        "contact_datetime": {
          "type": "dateTime",
          "comment": "The exact date and time the contact occurred."
        },
        "contact_method_type": {
          "enum": [
            "Mail",
            "InPersonVisit",
            "MessagingApp",
            "SMS",
            "DirectMail",
            "SocialMedia",
            "Fax",
            "VideoCall",
            "eMail",
            "Phone",
            "LiveChat",
            "Staircase.co",
            "GoogleAd",
            "VirtualPhoneNumber",
            null
          ],
          "comment": "The method used by Staircase or a customer to initiate contact.",
          "type": [
            "string",
            "null"
          ]
        },
        "contact_method_type_other_description": {
          "type": "string",
          "comment": "Optional additional details about the contact method when 'Other' is selected in `contact_method_type`."
        },
        "contact_purpose_type": {
          "enum": [
            "ListingInquiry",
            "PropertyShowing",
            "MortgageInquiry",
            "OnlineListingView",
            "PropertyListingClick",
            "FavoriteListingSave",
            "PropetyInquiry",
            "VisitScheduling",
            "OpenHouseAttendance",
            "AgentContact",
            "VirtualTourRequest",
            "ListingShare",
            "PropertyRating",
            "ListingComment",
            null
          ],
          "comment": "Represents the various purposes for which a customer interacts with a real estate agent. Each value specifies a distinct type of interaction that a customer might have, ranging from initial inquiries to more engaged actions like scheduling visits or making offers.",
          "type": [
            "string",
            "null"
          ]
        },
        "contact_purpose_type_other_description": {
          "type": "string",
          "comment": "Optional additional details about the contact purpose when 'Other' is selected in `contact_purpose_type`."
        },
        "contact_result_type": {
          "enum": [
            "Moved",
            "LeftMessage",
            "Unreachable",
            "Refused",
            "Engaged",
            "WrongNumberAddress",
            "RequestedCallback",
            "NotHome",
            "MailedPostcard",
            null
          ],
          "comment": "The outcome of the contact with the individual.",
          "type": [
            "string",
            "null"
          ]
        },
        "contact_result_type_other_description": {
          "type": "string",
          "comment": "Optional additional details about the contact result when 'Other' is selected in `contact_result_type`."
        },
        "contact_action_type": {
          "enum": [
            "SiteVisit",
            "ScheduleACallClick",
            "CallAgentClick",
            "GetPreApprovedClick",
            null
          ],
          "comment": "Indicates the specific action taken by the customer during the contact, such as scheduling a call or requesting a pre-approval.",
          "type": [
            "string",
            "null"
          ]
        },
        "contact_action_type_other_description": {
          "type": "string",
          "comment": "Optional additional details about user-defined contact statuses when 'Other' is selected in `contact_action_type`."
        },
        "contact_status_type_datetime": {
          "type": "dateTime",
          "comment": "Creation date and time of assigned contact status type."
        },
        "contact_status_type": {
          "enum": [
            "Archived",
            "Read",
            "Snoozed",
            "Starred",
            "Unread",
            "Processed",
            "Dropped",
            "Delivered",
            "Deferred",
            "Bounce",
            "Open",
            "Click",
            "Spamreport",
            "Unsubscribe",
            "Blocked",
            null
          ],
          "comment": "The current state or user-defined status of the contact. Used for prioritization, filtering, and visibility.",
          "type": [
            "string",
            "null"
          ]
        },
        "contact_status_type_other_description": {
          "type": "string",
          "comment": "Optional additional details about user-defined contact statuses when 'Other' is selected in `contact_disposition_type`."
        },
        "snoozed_until": {
          "type": "dateTime",
          "comment": "The specific date and time when the contact with 'Snoozed' disposition should reappear. This field is null for contacts with other disposition types."
        },
        "contact_description": {
          "type": "string",
          "comment": "A free-form text field for general contact details or additional information."
        },
        "contact_message": {
          "type": "string",
          "comment": "The contact message or content."
        },
        "contact_initiator_role": {
          "comment": "Indicates the role of the individual who initiated the contact.",
          "enum": [
            "Assistant",
            "System",
            "Customer",
            "Agent",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of customer contact."
        },
        "has_campaign": {
          "targets": [
            "campaign"
          ],
          "comment": "A campaign is a series of coordinated activities designed to achieve a specific goal, such as generating leads or increasing brand awareness."
        },
        "has_front_pdf_template": {
          "targets": [
            "template"
          ],
          "comment": "A front PDF template is a pre-designed document that can be used as a starting point for creating a new document."
        },
        "has_back_pdf_template": {
          "targets": [
            "template"
          ],
          "comment": "A back PDF template is a pre-designed document that can be used as a starting point for creating a new document."
        },
        "has_back_text_template": {
          "targets": [
            "template"
          ],
          "comment": "A back text template is a pre-designed document that can be used as a starting point for creating a new document."
        },
        "has_front_text_template": {
          "targets": [
            "template"
          ],
          "comment": "A front text template is a pre-designed document that can be used as a starting point for creating a new document."
        },
        "has_front_image": {
          "targets": [
            "document_image"
          ],
          "comment": "A front image is a graphical representation or visual element that is displayed on the front of a document."
        },
        "has_communication_method": {
          "targets": [
            "communication"
          ],
          "comment": "The method of communication."
        },
        "has_contact_initiator": {
          "targets": [
            "person"
          ],
          "comment": "Identifies the person who initiated the contact."
        },
        "has_contactee": {
          "targets": [
            "person"
          ],
          "comment": "Identifies the person who was the recipient of the contact."
        },
        "has_lead": {
          "targets": [
            "lead"
          ],
          "comment": "Links the contact to a related lead."
        },
        "has_document": {
          "targets": [
            "document"
          ],
          "comment": "Links the contact to associated documents."
        },
        "has_thread": {
          "targets": [
            "chat_thread"
          ],
          "comment": "Links the contact to a related chat thread."
        },
        "contact_related_to": {
          "targets": [
            "customer_contact"
          ],
          "comment": "Establishes a link between the current contact and a previous related contact to capture a sequence of interactions."
        },
        "interacted_with_bot": {
          "targets": [
            "bot"
          ],
          "comment": "Indicates the bot involved in the customer contact if it was initiated by or occurred within a conversation with an assistant."
        },
        "has_property": {
          "targets": [
            "property"
          ],
          "comment": "Indicates that a customer contact is associated with a specific property."
        },
        "has_device": {
          "targets": [
            "device"
          ],
          "comment": "Indicates that a customer contact occurred via a specific device."
        }
      }
    },
    {
      "type": "declaration",
      "container_name": "declarations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "age_of_bankruptcy_years_count": {
          "type": "integer",
          "comment": "age of bankruptcy years count in mortgage banking declarations refers to the number of years that have passed since the borrower filed for bankruptcy."
        },
        "age_of_prior_property_foreclosure_years_count": {
          "type": "integer",
          "comment": "age of prior property foreclosure years count in mortgage banking declarations refers to the number of years that have passed since the borrower's prior property foreclosure event. It measures the elapsed time since the borrower's last property was foreclosed on."
        },
        "alimony_child_support_obligation_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that a borrower has obligations for alimony, child support, etc."
        },
        "bankruptcy_chapter_11_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the borrower declared a Chapter 11 bankruptcy."
        },
        "bankruptcy_chapter_12_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the borrower declared a Chapter 12 bankruptcy."
        },
        "bankruptcy_chapter_13_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the borrower declared a Chapter 13 bankruptcy."
        },
        "bankruptcy_chapter_7_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the borrower declared a Chapter 7 bankruptcy."
        },
        "bankruptcy_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the borrower declared bankruptcy within the past seven years."
        },
        "borrower_first_time_homebuyer_indicator": {
          "type": "boolean",
          "comment": "Indicates that the borrower qualifies as a first time homebuyer as determined by the lender and/or the investor. (Note: The 3 year rule used in the Declarations alone is not sufficient.)"
        },
        "borrower_housing_counselor_consent_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower has agreed to allow servicer to release borrower contact information to a housing counselor."
        },
        "citizenship_residency_type": {
          "enum": [
            "NonPermanentResidentAlien",
            "Unknown",
            "NonResidentAlien",
            "PermanentResidentAlien",
            "UsCitizen",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "co_maker_endorser_of_note_indicator": {
          "type": "boolean",
          "comment": "Borrower's answer to the question: Are you a co-maker or endorser on a note? Collected on the URLA in Section VIII line i."
        },
        "current_owner_is_senior_citizen_blind_or_disabled_person_indicator": {
          "type": "boolean",
          "comment": "current owner is senior citizen blind or disabled person indicator in mortgage banking declarations refers to whether the current owner of the property is a senior citizen, blind or disabled person. \nThis information is typically used to determine if the individual is eligible for special programs or benefits that are available to these groups."
        },
        "fha_secondary_residence_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the property usage falls under the FHA Secondary Residence policy and guidelines."
        },
        "homeowner_past_three_years_indicator": {
          "type": "boolean",
          "comment": "homeowner past three years indicator in mortgage banking declarations refers to a binary (yes/no) value that indicates whether the borrower has been a homeowner for the past three years. \nThis information is usually used to determine the borrower's eligibility for certain mortgage programs and to assess the likelihood of default or other risks associated with the loan."
        },
        "intent_to_occupy_indicator": {
          "type": "boolean",
          "comment": "intent to occupy indicator in mortgage banking declarations refers to whether the borrower intends to live in the property as their primary residence. \nThis information helps to determine the loan type and whether the property is eligible for certain loan programs."
        },
        "loan_foreclosure_or_judgment_indicator": {
          "type": "boolean",
          "comment": "Borrower's answer to the question: Have you directly or indirectly been obligated on any loan that resulted in foreclosure, transfer of title in lieu of foreclosure, or judgment? Collected on the URLA in Section VIII line e"
        },
        "outstanding_judgments_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower has outstanding judgments against him or her."
        },
        "party_to_lawsuit_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower is a party to a lawsuit."
        },
        "presently_delinquent_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower is presently delinquent or in default on Federal debt or other loan mortgage, financial obligation, bond or loan guarantee."
        },
        "prior_property_deed_in_lieu_conveyed_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the Borrower has conveyed property as deed in lieu of foreclosure within the past seven years."
        },
        "prior_property_foreclosure_completed_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower has had property foreclosed upon within the past seven years."
        },
        "prior_property_short_sale_completed_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the Borrower has completed a short sale or pre-foreclosure sale where the Lender accepted less than full value for the outstanding mortgage balance within the past seven years."
        },
        "prior_property_title_type": {
          "enum": [
            "JointWithSpouse",
            "Sole",
            "JointWithOtherThanSpouse",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "prior_property_usage_type": {
          "enum": [
            "SecondHome",
            "PrimaryResidence",
            "Investment",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "property_proposed_clean_energy_lien_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the property will be subject to a property clean energy lien that could take precedence over the first mortgage lien including PACE loan or other similar liens."
        },
        "seller_or_developer_affiliated_with_builder_indicator": {
          "type": "boolean",
          "comment": "seller or developer affiliated with builder indicator in mortgage banking declarations refers to a situation where the seller of the property or the developer of the property has a relationship with the builder of the property. \nThis relationship could take the form of ownership, partnership, or control over the builder. The purpose of this indicator is to inform the mortgage company and potential borrowers of any potential conflicts of interest that may exist in the transaction."
        },
        "special_borrower_seller_relationship_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the borrower has a family relationship or business affiliation with the seller of the property."
        },
        "undisclosed_borrowed_funds_amount": {
          "type": "decimal",
          "comment": "The amount of the closing funds or down payment that is borrowed or provided by another party, including the seller, and not disclosed on the mortgage loan application."
        },
        "undisclosed_borrowed_funds_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that some or all of the closing funds or down payment is borrowed or provided by another party, including the seller, and not disclosed on the mortgage loan application."
        },
        "undisclosed_comaker_of_note_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the Borrower is a co-signer or guarantor on other debts not disclosed on the loan application."
        },
        "undisclosed_credit_application_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower will apply for other credit (not mortgage loan) prior to closing the mortgage transaction."
        },
        "undisclosed_mortgage_application_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower will apply for a mortgage loan on a property that is not the subject property on or before closing of this transaction that is not disclosed on this application."
        }
      },
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        }
      }
    },
    {
      "type": "deployment",
      "container_name": "deployments",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "deployment_status_type": {
          "enum": [
            "Failed",
            "Succeeded",
            null
          ],
          "comment": "Indicates the result of the deployment.",
          "type": [
            "string",
            "null"
          ]
        },
        "end_time": {
          "type": "string",
          "comment": "Refers to the date and time that the deployment ended."
        },
        "start_time": {
          "type": "string",
          "comment": "Refers to the date and time that the deployment started."
        }
      },
      "relationships": {
        "has_bundle": {
          "targets": [
            "bundle"
          ],
          "comment": "Refers to a collection of files and data that are packaged together for the purpose of deploying software."
        },
        "has_invocation": {
          "targets": [
            "invocation"
          ],
          "comment": "An invocation refers to the act of calling or executing a function or method in a program. When a function or method is invoked, the program temporarily transfers control to that function or method, which performs a specific action or returns a value, before control is returned to the calling program."
        }
      }
    },
    {
      "type": "subdivision",
      "container_name": "subdivisions",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "subdivision_name": {
          "type": "string",
          "comment": "A subdivision name refers to a specific, delineated area within a larger community or city that has been divided into individual plots or lots for residential or commercial use. It is the name used to promote the subdivision, typically assigned by the developer rather than the township or municipality."
        }
      }
    },
    {
      "type": "development",
      "container_name": "developments",
      "is_deprecated": false,
      "deprecated_properties": [
        "subdivision"
      ],
      "properties": {
        "builder_model": {
          "type": "string",
          "comment": "Builder model refers to a specific design or floor plan offered by a home builder. This model represents a standardized layout and set of features that can be replicated in different homes within a development or community."
        },
        "community_type": {
          "enum": [
            "ActiveAdult55OrOlder",
            "EcoFriendly",
            "SeniorLiving",
            "Gated",
            "Historic",
            "Planned",
            "Sustainable",
            null
          ],
          "comment": "Refers to the type of community associated with a development.",
          "type": [
            "string",
            "null"
          ]
        },
        "community_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the community type."
        },
        "subdivision": {
          "type": "string",
          "optional": true,
          "comment": "Subdivision is the term used to describe a defined area within a city or community that has been divided into individual plots or lots, usually intended for residential or commercial development. It is often formally designated by the township or municipality."
        },
        "zoning": {
          "type": "string",
          "optional": true,
          "comment": "Zoning is a system of land-use regulation created by local governments to control how property and land within a community can be used."
        },

        "development_name": {
          "type": "string",
          "comment": "A development name, often a marketing-friendly term given by a developer, refers to a specific, delineated area within a larger community or city that has been divided into individual plots or lots for residential or commercial use. It is the name used to promote the subdivision, typically assigned by the developer rather than the township or municipality."
        }
      },
      "relationships": {
        "has_homeowners_association": {
          "targets": [
            "homeowners_association"
          ],
          "comment": "A homeowners association (HOA) is an organization in a residential community that creates and enforces rules and regulations for properties and residents within its jurisdiction."
        }
      }
    },
    {
      "type": "device",
      "container_name": "devices",
      "is_deprecated": false,
      "deprecated_properties": [
        "device_category"
      ],
      "properties": {
        "brand": {
          "type": "string",
          "comment": "Device brand refers to a specific company or manufacturer that produces and markets computer devices. It represents the name, reputation, and identity of the company associated with its products."
        },
        "browser": {
          "type": "string",
          "comment": "A browser is a software application that allows users to access and view websites on the internet. It acts as an interface between the user and the web, enabling the retrieval and display of web pages and other online content."
        },
        "device_category": {
          "type": "string",
          "comment": "Device category refers to the classification of devices based on the type of device used by a user to access content."
        },
        "device_type": {
          "enum": [
            "Mobile",
            "Tablet",
            "Computer",
            "TVScreen",
            null
          ],
          "comment": "A device type is a classification of a device based on its characteristics, capabilities, and intended use.",
          "type": [
            "string",
            "null"
          ]
        },
        "device_type_other_description": {
          "type": "string",
          "comment": "Optional additional details about the contact method when 'Other' is selected in `device_type`."
        },
        "ip_address": {
          "type": "string",
          "comment": "Device IP (Internet Protocl) address is a numerical label assigned to each device connected to a computer network that uses the Internet Protocol for communication. It serves as a unique identifier for devices, allowing them to send and receive data within a network."
        },
        "model": {
          "type": "string",
          "comment": "Device model refers to a specific variant or version of a computer device that is uniquely identified by its model name or number. It helps differentiate between different configurations or versions of the same device."
        },
        "operating_system": {
          "type": "string",
          "comment": "Operating system (OS) refers to the software that manages and controls the basic functions and operations of the device."
        },
        "operating_system_version": {
          "type": "string",
          "comment": "Device OS (Operating System) version refers to the version of the software that manages and controls the basic functions and operations of the device."
        },
        "platform": {
          "type": "string",
          "comment": "Platform is the combination of computer hardware and software that provides the foundation on which the site event occurred."
        }
      },
      "relationships": {}
    },
    {
      "type": "document_paragraph",
      "container_name": "document_paragraphs",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "document_text": {
          "type": "string",
          "comment": "A paragraph of text in a document"
        },
        "is_front": {
          "type": "boolean",
          "comment": "Indicates whether the paragraph appears on the front of the document (e.g. the first page)."
        },
        "sequence_number": {
          "type": "integer",
          "comment": "Sequence number is a numerical identifier assigned to a paragraph of text that indicates its position or order within a larger document. "
        }
      },
      "relationships": {}
    },
    {
      "type": "file",
      "container_name": "files",
      "is_deprecated": false,
      "description": "The file class is a comprehensive data structure that represents all media and documents associated with a specific property, including images, PDFs, and floor plans across multiple file formats (JPEG, PNG, PDF). It supports both traditional HTTP/HTTPS and decentralized IPFS storage options while providing extensive semantic classification for property-related documents such as deeds, assignments, affidavits, building permits, inspection reports, and property images. The class includes human-friendly naming conventions and metadata management capabilities, making it ideal for organizing and retrieving all media assets and legal documents tied to individual properties within real estate platforms and property management systems.",
      "deprecated_properties": [],
      "properties": {
        "source_http_request": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "file_format": {
          "enum": [
            "jpeg",
            "png",
            "txt",
            null
          ],
          "comment": "The format or MIME type of the file.",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A human-friendly name for the media asset.",
          "minLength": 1
        },
        "original_url": {
          "type": [
            "string",
            "null"
          ],
          "format": "uri",
          "comment": "HTTP/HTTPS source URL of the media asset.",
          "minLength": 1
        },
        "ipfs_url": {
          "type": [
            "string",
            "null"
          ],
          "format": "ipfs_uri",
          "comment": "IPFS URL if the asset is stored on IPFS.",
          "minLength": 1
        },
        "document_type": {
          "enum": [
            "ConveyanceDeedQuitClaimDeed",
            "ConveyanceDeedBargainAndSaleDeed",
            "ConveyanceDeedWarrantyDeed",
            "ConveyanceDeed",
            "AssignmentAssignmentOfDeedOfTrust",
            "AssignmentAssignmentOfMortgage",
            "AssignmentAssignmentOfRents",
            "Assignment",
            "AssignmentAssignmentOfTrade",
            "AssignmentBlanketAssignment",
            "AssignmentCooperativeAssignmentOfProprietaryLease",
            "AffidavitOfDeath",
            "AbstractOfJudgment",
            "AttorneyInFactAffidavit",
            "ArticlesOfIncorporation",
            "BuildingPermit",
            "ComplianceInspectionReport",
            "ConditionalCommitment",
            "CounselingCertification",
            "AirportNoisePollutionAgreement",
            "BreachNotice",
            "BrokerPriceOpinion",
            "AmendatoryClause",
            "AssuranceOfCompletion",
            "Bid",
            "BuildersCertificationBuilderCertificationOfPlansAndSpecifications",
            "BuildersCertificationBuildersCertificate",
            "BuildersCertificationPropertyInspection",
            "BuildersCertificationTermiteTreatment",
            "PropertyImage",
            null
          ],
          "comment": "Semantic role or classification of the document.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    {
      "type": "document_image",
      "container_name": "document_images",
      "is_deprecated": false,
      "deprecated_properties": [
        "is_front",
        "staircase_blob_identifier",
        "sequence_number"
      ],
      "properties": {
        "staircase_blob_identifier": {
          "type": "string",
          "comment": "A staircase blob identifier that points to an image used in a document."
        },
        "is_front": {
          "type": "boolean",
          "comment": "Indicates whether the image appears on the front of the document (e.g. the first page)."
        },
        "sequence_number": {
          "type": "integer",
          "comment": "Sequence number is a numerical identifier assigned to a document image that indicates its position or order within a larger document. "
        },
        "image_original_url": {
          "type": "string",
          "format": "uri",
          "comment": "The original URL of the image. Must be a valid HTTP or HTTPS URL."
        },
        "image_url": {
          "type": "string",
          "format": "ipfs_uri",
          "comment": "The IPFS URL of the image. Must be a valid IPFS URL starting with 'ipfs://' followed by a content identifier hash."
        }
      },
      "relationships": {}
    },
    {
      "type": "document",
      "container_name": "documents",
      "is_deprecated": false,
      "deprecated_properties": [
        "property_image_url",
        "document_date",
        "qr_code_image",
        "qr_code_text",
        "address_bar_code_image",
        "address_bar_code_text",
        "indicia_image",
        "indicia_text",
        "tray_image",
        "tray_label",
        "belongs_to",
        "has_signature",
        "received_by",
        "has_document_paragraph",
        "property_image_url",
        "delivery_method_type",
        "delivery_method_type_other_description",
        "document_mime_type",
        "qr_code_image",
        "qr_code_text",
        "address_bar_code_image",
        "address_bar_code_text",
        "indicia_image",
        "indicia_text",
        "tray_image",
        "tray_label",
        "mailed_date",
        "returned_date",
        "staircase_document_category_type",
        "staircase_blob_identifier",
        "has_document_image",
        "document_identifier"
      ],
      "properties": {
        "property_image_url": {
          "type": "string",
          "comment": "A URL pointing to an image of the property."
        },
        "delivery_method_type": {
          "enum": [
            "Mail",
            "Fax",
            "Email",
            "PersonalDelivery",
            null
          ],
          "comment": "The method with which a document is delivered to a recipient.",
          "type": [
            "string",
            "null"
          ]
        },
        "delivery_method_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the document delivery method type."
        },
        "document_original_url": {
          "type": "string",
          "format": "uri",
          "comment": "The data source url for document. Must be a valid HTTP or HTTPS URL."
        },
        "document_url": {
          "type": "string",
          "format": "ipfs-uri",
          "comment": "The IPFS URL for the document. Must be a valid IPFS URL starting with 'ipfs://' followed by a content identifier hash."
        },
        "document_date": {
          "type": "string",
          "format": "date",
          "comment": "A document date is a date found on the document that typically represents the document creation date."
        },
        "document_identifier": {
          "type": "string",
          "comment": "Document identifier refers to the unique code or number assigned to a document for identification purposes."
        },
        "document_mime_type": {
          "type": "string",
          "comment": "A document MIME type, or Multipurpose Internet Mail Extension type, is a standard way of identifying the format of a document based on its content. It is used by web servers to communicate the file format to a web browser, allowing the browser to properly display or handle the document."
        },
        "document_name": {
          "type": "string",
          "comment": "A document name is a title or label given to a document to identify it and distinguish it from other documents."
        },
        "qr_code_image": {
          "type": "string",
          "comment": "Contains a staircase blob identifier to an image of a QR code."
        },
        "qr_code_text": {
          "type": "string",
          "comment": "A text-based representation of a QR code."
        },
        "address_bar_code_image": {
          "type": "string",
          "comment": "Contains a staircase blob identifier to an image of an address bar code."
        },
        "address_bar_code_text": {
          "type": "string",
          "comment": "A text-based representation of an address bar code."
        },
        "indicia_image": {
          "type": "string",
          "comment": "Contains a staircase blob identifier to an indicia image."
        },
        "indicia_text": {
          "type": "string",
          "comment": "A text-based representation of an indicia."
        },
        "tray_image": {
          "type": "string",
          "comment": "Contains a staircase blob identifier to a tray image, which is a visual address component."
        },
        "document_type": {
          "enum": [
            "ConveyanceDeedQuitClaimDeed",
            "ConveyanceDeedBargainAndSaleDeed",
            "ConveyanceDeedWarrantyDeed",
            "ConveyanceDeed",
            "AssignmentAssignmentOfDeedOfTrust",
            "AssignmentAssignmentOfMortgage",
            "AssignmentAssignmentOfRents",
            "Assignment",
            "AssignmentAssignmentOfTrade",
            "AssignmentBlanketAssignment",
            "AssignmentCooperativeAssignmentOfProprietaryLease",
            "AffidavitOfDeath",
            "AbstractOfJudgment",
            "AttorneyInFactAffidavit",
            "ArticlesOfIncorporation",
            "BuildingPermit",
            "ComplianceInspectionReport",
            "ConditionalCommitment",
            "CounselingCertification",
            "AirportNoisePollutionAgreement",
            "BreachNotice",
            "BrokerPriceOpinion",
            "AmendatoryClause",
            "AssuranceOfCompletion",
            "Bid",
            "BuildersCertificationBuilderCertificationOfPlansAndSpecifications",
            "BuildersCertificationBuildersCertificate",
            "BuildersCertificationPropertyInspection",
            "BuildersCertificationTermiteTreatment",
            "PropertyImage",
            null
          ],
          "comment": "Document type refers to the classification or categorization of a document based on its purpose, content, or format.",
          "type": [
            "string",
            "null"
          ]
        },
        "mailed_date": {
          "type": "string",
          "format": "date",
          "comment": "Refers to the date that a document was mailed to a recipient."
        },
        "returned_date": {
          "type": "string",
          "format": "date",
          "comment": "Refers to the date that a document was returned to a recipient."
        },
        "staircase_blob_identifier": {
          "type": "string",
          "comment": "Blob identifier refers to a unique identifier assigned to a binary large object (BLOB), which is a large binary data structure that can be used to store documents and other types of data. BLOBs are often used in mortgage banking systems to store important loan documents such as loan applications, credit reports, income verification documents, and property appraisals."
        },
        "staircase_document_category_type": {
          "enum": [
            "Partner",
            "Staircase",
            null
          ],
          "comment": "A Staircase document category type indicates if the source of the document category is Staircase or a Staircase partner.",
          "type": [
            "string",
            "null"
          ]
        },
        "tray_label": {
          "type": "string",
          "comment": "Label representing tray ID assigned by USPS."
        }
      },
      "relationships": {
        "belongs_to": {
          "targets": [
            "person"
          ],
          "comment": "Refers to the person to whom the document belongs."
        },
        "has_signature": {
          "targets": [
            "signature"
          ],
          "comment": "Refers to signatures associated with the document."
        },
        "received_by": {
          "targets": [
            "person"
          ],
          "comment": "Refers to the person who received the document."
        },
        "has_document_paragraph": {
          "targets": [
            "document_paragraph"
          ],
          "comment": "Refers to a paragraph of content in a document."
        },
        "has_document_image": {
          "targets": [
            "document_image"
          ],
          "comment": "Refers to an image in a document."
        }
      }
    },
    {
      "type": "education",
      "container_name": "educations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "achievements": {
          "type": "string",
          "comment": "Any additional honors, accolades, or notable accomplishments achieved during the course of study."
        },
        "degree": {
          "type": "string",
          "comment": "The academic or professional title conferred upon the individual after completion of a course of study."
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "comment": "The end date is the date when the borrower is expected to have fully repaid the mortgage loan and the mortgage is considered to be fully paid off. This date is typically specified in the mortgage agreement and is calculated based on the term of the mortgage, which is the length of time the borrower has to repay the loan."
        },
        "field": {
          "type": "string",
          "comment": "The specific area of study or expertise the individual focused on during their educational tenure."
        },
        "institution": {
          "type": "string",
          "comment": "The name of the educational establishment where the study took place."
        },
        "start_date": {
          "type": "dateTime",
          "comment": "dateTime at which the subscription was started."
        }
      },
      "relationships": {}
    },
    {
      "type": "email_event",
      "container_name": "email_events",
      "is_deprecated": false,
      "properties": {
        "email_event_type": {
          "enum": [
            "Archived",
            "Read",
            "Snoozed",
            "Starred",
            "Unread",
            "Processed",
            "Dropped",
            "Delivered",
            "Deferred",
            "Bounce",
            "Open",
            "Click",
            "Spamreport",
            "Unsubscribe",
            "Blocked",
            null
          ],
          "description": "The type of email event.",
          "type": [
            "string",
            "null"
          ]
        },
        "email_event_datetime": {
          "type": "dateTime",
          "description": "Datetime in EST format when the event occurred."
        },
        "email_provider_event_identifier": {
          "type": "string",
          "description": "The unique identifier assigned by the email provider for the event."
        }
      },
      "relationships": {
        "has_customer_contact": {
          "targets": [
            "customer_contact"
          ],
          "description": "The customer contact associated with the email event."
        }
      }
    },
    {
      "type": "employment",
      "container_name": "employments",
      "is_deprecated": false,
      "deprecated_properties": [
        "employment_job_description",
        "has_role",
        "employment_monthly_income_amount",
        "start_date"
      ],
      "properties": {
        "current_employment_indicator": {
          "type": "boolean",
          "comment": "A current_employment indicator identifies if a person is currentlly employed. Current employment refers to an individual's present or ongoing employment status. It indicates that the individual is currently working for an employer and is receiving compensation for their work."
        },
        "employed_abroad_indicator": {
          "type": "boolean",
          "comment": "Indicates if the physical place of employment of the borrower is located outside of the United States. If the employer of the borrower is a foreign entity and the place of employment of the borrower is located inside the United States this value would be"
        },
        "employment_classification_type": {
          "enum": [
            "Primary",
            "Secondary",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "employment_end_date": {
          "type": "string",
          "format": "date",
          "comment": "The date the borrower left the position with the employer."
        },
        "employment_home_office_indicator": {
          "type": "boolean",
          "comment": "employment home office indicator is used to categorize employees based on where they primarily perform their work. \n\nIf an employee's home is designated as their primary place of work, then they are considered a \"home office\" employee. \nThis information is often used for tax and benefits purposes, as well as for determining which employees are eligible for telecommuting or remote work arrangements."
        },
        "employment_identifier": {
          "type": "string",
          "comment": "employment identifier is a unique identifier assigned to an individual employee. \n\nThis identifier is used to track and manage information related to the employee, such as their employment status, job title, compensation, benefits, and other relevant data. The employment identifier allows HR and payroll systems to accurately record and manage information about each individual employee, and helps ensure that the correct information is available for tax, benefits, and other purposes."
        },
        "employment_job_description": {
          "type": "string",
          "comment": "An employment job description outlines the duties, responsibilities, qualifications, and requirements of a specific job or role within an organization."
        },
        "employment_label": {
          "type": "string",
          "comment": "employment label is used to label or designate the type of employment an individual has within the organization. \n\nThis can include job titles, job functions, departments, or other designations that help to describe the nature of the employee's work. The employment label is used to manage and track employees and their roles within the organization, and may be used for reporting, payroll, benefits, and other purposes. It provides a consistent way of identifying and referring to different types of employees and their positions within the company."
        },
        "employment_monthly_income_amount": {
          "type": "decimal",
          "comment": "The amount per month of income associated with the borrower's employment."
        },
        "employment_months_on_job_count": {
          "type": "integer",
          "comment": "The number of complete months of service to an employer from the start of employment until the date on which the employment is reported."
        },
        "employment_position_description": {
          "type": "string",
          "comment": "A free-form text field describing the borrower's employment position or title."
        },
        "employment_reported_date": {
          "type": "string",
          "format": "date",
          "comment": "Indicates the date when the employment information was reported to the repository bureau."
        },
        "employment_self_owned_business_operations_end_date": {
          "type": "string",
          "format": "date",
          "comment": "The date the business owned by the borrower ended operations."
        },
        "employment_self_owned_business_operations_start_date": {
          "type": "string",
          "format": "date",
          "comment": "The date the business owned by the borrower began operating."
        },
        "employment_start_date": {
          "type": "string",
          "format": "date",
          "comment": "The date that the borrower started the employment position with the employer."
        },
        "employment_status_type": {
          "enum": [
            "Previous",
            "Current",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "employment_subtype": {
          "enum": [
            "Contractor",
            "Seasonal",
            "PartTime",
            "Temp",
            "Intern",
            "FullTime",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "employment_time_in_line_of_work_years_count": {
          "type": "integer",
          "comment": "The total number of years the borrower has been employed in that reported occupation. One source of this data is the URLA Section IV (Years Employed In This Line Of Work.)"
        },
        "employment_type": {
          "enum": [
            "SelfEmployed",
            "Employed",
            "Employee",
            "Unemployed",
            "Retired",
            "Contractor",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "employment_type_of_business_description": {
          "type": "string",
          "comment": "A free-form text field describing the line of work or type of business in which the borrower is employed."
        },
        "employment_years_on_job_count": {
          "type": "integer",
          "comment": "The number of complete years of service to an employer from the start of employment until the date on which the employment is reported."
        },
        "foreign_income_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the amount of income is earned through a foreign corporation/government and is paid in foreign currency."
        },
        "ownership_interest_type": {
          "enum": [
            "GreaterThanOrEqualTo25Percent",
            "LessThan25Percent",
            null
          ],
          "comment": "A value from a MISMO prescribed list that specifies the percentage of the total business of the borrower's self-owned business",
          "type": [
            "string",
            "null"
          ]
        },
        "ownership_interest_type_other_description": {
          "type": "string",
          "comment": "ownership interest type with option other description refers to a classification system used to describe the type of ownership interest an individual has in a property or asset. \n\nThe option \"other description\" is included to accommodate other types of ownership interests that may not be specifically listed.\n\nFor example, an individual may have rdf:type direct ownership interest in rdf:type property, such as owning the property outright or having rdf:type partial interest through rdf:type co-ownership arrangement. The ownership interest type would be used to describe the specifics of the individual's interest in the property. If the individual's interest does not fit into one of the specific categories listed, the \"other description\" option can be used to provide a more detailed explanation of their ownership interest.\n\nThis information is used in the mortgage banking industry to determine the individual's eligibility for certain loan or mortgage products, and to ensure that the proper documentation and disclosures are in place for the transaction. The specific options and definitions of ownership interest type can vary by company and jurisdiction."
        },
        "position_title": {
          "type": "string",
          "comment": "position title refers to a specific job title or role within an organization that describes the nature of the employee's work and responsibilities. \n\nThis title is typically assigned by the company and reflects the employee's rank, level of responsibility, and type of work performed.\n\nThe position title is used for HR and payroll purposes, such as determining the employee's eligibility for certain benefits, compensation, and other employment-related policies. It also helps to manage and track employees within the organization and can be used for reporting and performance evaluations. The specific titles and definitions of positions can vary by company and jurisdiction."
        },
        "retirement_plan_participant_indicator": {
          "type": "boolean",
          "comment": "retirement plan participant indicator refers to a binary (yes/no) field that indicates whether an employee is currently participating in a retirement plan offered by the organization.\n\nRetirement plans are typically offered by employers to help employees save for their future retirement years. These plans can include 401(k) plans, pension plans, and other similar arrangements.\n\nThe retirement plan participant indicator is used for HR and payroll purposes, such as determining the employee's eligibility for certain benefits, tracking participation in the retirement plan, and ensuring accurate record-keeping. This information can also be used for reporting and performance evaluations. The specific options and definitions of retirement plan participant indicator can vary by company and jurisdiction."
        },
        "seasonal_income_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the amount of income is only earned during portion of the calendar year."
        },
        "self_employment_indicator": {
          "type": "boolean",
          "comment": "self-employment indicator refers to a binary (yes/no) field that indicates whether an individual is self-employed. \nSelf-employed individuals typically own and operate their own business or provide freelance services.\n\nThis information is used in the mortgage banking industry to determine the individual's eligibility for certain loan or mortgage products, and to ensure that the proper documentation and disclosures are in place for the transaction. The specific definitions of self-employment indicator can vary by company and jurisdiction."
        },
        "special_borrower_employer_relationship_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the borrower is employed by a family member, property seller, real estate agent/broker, or other party to the transaction."
        },
        "special_borrower_employer_relationship_type": {
          "enum": [
            "EmployedByRelative",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "special_borrower_employer_relationship_type_other_description": {
          "type": "string",
          "comment": "special borrower employer relationship type with option other description refers to a classification system used to describe the nature of an individual's employment relationship with a special borrower. \nA special borrower is an entity that is eligible to participate in certain government-sponsored programs or initiatives, such as programs for veterans or rural residents.\n\nThe \"other description\" option is included to accommodate relationships that may not be specifically listed. For example, an individual may have a specific type of employment relationship with a special borrower that does not fit into one of the categories listed, such as working for a subsidiary of the special borrower.\n\nThis information is used in the mortgage banking industry to determine the individual's eligibility for certain loan or mortgage products, and to ensure that the proper documentation and disclosures are in place for the transaction. The specific options and definitions of special borrower employer relationship type can vary by company and jurisdiction."
        },
        "start_date": {
          "type": "dateTime",
          "comment": "dateTime at which the subscription was started."
        },
        "statutory_employee_indicator": {
          "type": "boolean",
          "comment": "statutory employee indicator refers to a binary (yes/no) field that indicates whether an individual is classified as a statutory employee. \nA statutory employee is rdf:type worker who is treated as an employee for certain tax purposes, even though they are considered an independent contractor or self-employed under common law.\n\nIn the United States, statutory employees are defined by the Internal Revenue Service (IRS) as individuals who perform services for someone else and are considered employees for Federal tax purposes, but not for all employment tax purposes. Statutory employees include commissioned salespeople, certain full-time life insurance salespeople, and workers who provide services to rdf:type business using their own substantial equipment.\n\nThis information is used in the mortgage banking industry to determine the individual's eligibility for certain loan or mortgage products, and to ensure that the proper documentation and disclosures are in place for the transaction. The specific definitions of statutory employee indicator can vary by company and jurisdiction."
        },
        "time_in_line_of_work_months_count": {
          "type": "integer",
          "comment": "time in line of work months count refers to the length of time that an individual has been working in a specific industry or job role. \nThis information is used to assess the individual's experience and stability in their employment.\n\nThe time in line of work months count is usually calculated as the number of months from the start of an individual's employment in a specific industry or job role, up to the present. This information can be used to determine the individual's eligibility for certain loan or mortgage products, and to assess the risk involved in lending to the individual.\n\nThis information is also used in the mortgage banking industry for reporting and performance evaluations, and can be used by lenders to make decisions about loan applications, approve or deny loans, and set interest rates. The specific definitions of time in line of work months count can vary by company and jurisdiction."
        }
      },
      "relationships": {
        "associated_income": {
          "targets": [
            "income"
          ],
          "comment": "The income associated with a particular employment role or position."
        },
        "has_employee": {
          "targets": [
            "person"
          ],
          "comment": "A person, company, organization or entity that hires and employs workers has employees. An employee is an individual who works for an employer in exchange for payment, usually in the form of wages or salary. Employees are hired to perform specific tasks or jobs and are under the supervision and direction of the employer."
        },
        "has_employer": {
          "targets": [
            "company"
          ],
          "comment": "A person who holds a job has an employer. An employer is a person, company, organization, or entity that hires and employs workers to perform specific tasks or jobs in exchange for payment."
        }
      }
    },
    {
      "type": "environment",
      "container_name": "environments",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "environment_identifier": {
          "type": "string",
          "comment": "An environment identifier is a unique identifier used to identify and distinguish one computing environment from another. It can be used to manage and track multiple computing environments and their associated resources, such as cloud computing resources, applications, and databases."
        },
        "environment_name": {
          "type": "string",
          "comment": "An environment name is a human-readable label or identifier given to an environment. It is usually a short and descriptive name that helps users identify and distinguish one computing environment from another."
        },
        "environment_status": {
          "enum": [
            "Deactive",
            "Active",
            "Deleted",
            null
          ],
          "comment": "Environment status refers to the current condition or state of a Staircase environment, which includes all software and cloud computing resources. The status of an environment can indicate various things, such as whether a productis up and running or if it is experiencing issues.",
          "type": [
            "string",
            "null"
          ]
        },
        "environment_type": {
          "enum": [
            "Development",
            "Production",
            "Staging",
            "Testing",
            null
          ],
          "comment": "Environment type refers to the specific purpose of the computing environment. It's categorized into various types such as 'Development', 'Testing', 'Staging', and 'Production'. Each type corresponds to a different stage in the software development lifecycle and is configured to facilitate specific tasks associated with its stage.",
          "type": [
            "string",
            "null"
          ]
        },
        "ever_to_date_cost_amount": {
          "type": "decimal",
          "comment": "Environment ever-to-date cost amount is the total amount of money that has been spent on an environment from the moment it was created up to the present time. This cost includes all the expenses associated with operating and maintaining the environment, such as hardware and software purchases, licensing fees, maintenance costs and support costs."
        },
        "last_month_cost_amount": {
          "type": "decimal",
          "comment": "Environment last month cost amount refers to the total cost incurred by using a particular computing environment during the last billing cycle or month. This amount is calculated based on the resources consumed by the environment, such as compute, storage, and network usage, and any associated fees or charges for using additional services or features."
        },
        "last_used_date": {
          "type": "string",
          "format": "date",
          "comment": "Environment last used date refers to the date and time when a specific environment was last accessed or used. It is used to monitor usage patterns and identify environments that are no longer needed or require maintenance."
        },
        "year_to_date_cost_amount": {
          "type": "decimal",
          "comment": "Environment year-to-date cost amount is the total amount of money that has been spent on an environment from the beginning of the current year up to the present time. This cost includes all the expenses associated with operating and maintaining the environment, such as hardware and software purchases, licensing fees, maintenance costs and support costs."
        }
      },
      "relationships": {
        "has_owner": {
          "targets": [
            "person"
          ],
          "comment": "An environment can have an owner, where the owner is a person. A person-owned environment refers to a computing environment that is fully controlled by a particular person. In an owned environment, the person has complete control over the configuration, management, and security of the computing resources. This allows them to customize the environment to their specific needs and requirements, and to ensure that it is optimized for the application or service they are running."
        }
      }
    },
    {
      "type": "error",
      "container_name": "errors",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "error_id": {
          "type": "string",
          "comment": "An error identifier is a code or message that is generated by a software program or system when an error or issue is encountered. The purpose of an error identifier is to provide a specific and identifiable reference to the error or issue, which can be used by developers or users to diagnose and troubleshoot the problem."
        },
        "error_message": {
          "type": "string",
          "comment": "An error message is a notification or alert that is generated by an application, computer program or operating system when it encounters a problem or error that prevents it from completing a task or function as intended. These messages are typically displayed on the screen or in a log file and provide information about the nature and cause of the error, as well as suggestions for how to resolve the issue."
        },
        "error_timestamp": {
          "type": "dateTime",
          "comment": "An error timestamp is a piece of information included in an error message or log entry that indicates the date and time when the error occurred. The timestamp helps to track and diagnose errors by providing a chronological record of when they occurred."
        },
        "error_type": {
          "enum": [
            "ResourceError",
            "RuntimeError",
            "DependencyError",
            "AuthorizationError",
            "AuthenticationError",
            "LogicError",
            "TimeoutError",
            "NetworkError",
            "ConfigurationError",
            "ValidationError",
            "SyntaxError",
            null
          ],
          "comment": "Error type refers to the category or classification of an error based on its characteristics and source.",
          "type": [
            "string",
            "null"
          ]
        },
        "severity_level": {
          "enum": [
            "Medium",
            "Warning",
            "High",
            "Critical",
            "Low",
            null
          ],
          "comment": "Severity level is a classification assigned to an error or issue based on its impact and the urgency of the response needed to resolve it. The severity level is often used to prioritize the handling of errors and determine the appropriate response.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {}
    },
    {
      "type": "escrow_item",
      "container_name": "escrow_items",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "escrow_item_estimated_total_amount": {
          "type": "decimal",
          "comment": "Estimate of the total cost amount of escrow item."
        },
        "escrow_item_number_of_days_count": {
          "type": "integer",
          "comment": "Number of days that the escrow cost covers."
        },
        "escrow_item_number_of_months_count": {
          "type": "integer",
          "comment": "Number of months that an escrow cost covers."
        },
        "escrow_item_per_diem_amount": {
          "type": "decimal",
          "comment": "Estimate of the cost per day for an escrow item."
        },
        "escrow_item_per_diem_percent": {
          "type": "decimal",
          "comment": "The percentage rate used to calculate the per diem amount of an escrow item cost."
        },
        "escrow_item_type": {
          "enum": [
            "HomeownersAssociationSpecialAssessment",
            "EnergyEfficientImprovementFunds",
            "BoroughPropertyTax",
            "CountyBondTax",
            "CooperativeAssociationSpecialAssessment",
            "CountyPropertyTax",
            "ConstructionCompletionFunds",
            "CityBondTax",
            "VillagePropertyTax",
            "CityPropertyTax",
            "DistrictPropertyTax",
            "MortgageInsurance",
            "HomeownersInsurance",
            "PropertyTax",
            "TownshipPropertyTax",
            "WindAndStormInsurance",
            "EarthquakeInsurance",
            "HailInsurance",
            "CondominiumAssociationSpecialAssessment",
            "TownPropertyTax",
            "SchoolPropertyTax",
            "ParishTax",
            "FloodInsurance",
            "HomeownersAssociationDues",
            "StatePropertyTax",
            "PestInsurance",
            "CooperativeAssociationDues",
            "RehabilitationFunds",
            "VolcanoInsurance",
            "AssessmentTax",
            "HazardInsurance",
            "CondominiumAssociationDues",
            null
          ],
          "comment": "The type of item that is part of an escrow payment.",
          "type": [
            "string",
            "null"
          ]
        },
        "escrow_item_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional detail when 'other' is selected as the escrow item type."
        }
      },
      "relationships": {}
    },
    {
      "type": "estimated_property_cost",
      "container_name": "estimated_property_costs",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "projected_payment_escrowed_type": {
          "enum": [
            "SomeEscrowed",
            "Escrowed",
            "NotEscrowed",
            null
          ],
          "comment": "Indicates what portion of the projected payment will be placed in escrow.",
          "type": [
            "string",
            "null"
          ]
        },
        "projected_payment_estimated_taxes_insurance_assessment_component_type": {
          "enum": [
            "HomeownersInsurance",
            "HomeownersAssociationDues",
            "HomeownersAssociationSpecialAssessment",
            "LeaseholdPayment",
            "PropertyTaxes",
            "GroundRent",
            "CooperativeAssociationDues",
            "CondominiumAssociationSpecialAssessment",
            "CooperativeAssociationSpecialAssessment",
            "CondominiumAssociationDues",
            null
          ],
          "comment": "Indicates the type of taxes, insurance or assessment that is part of the payment estimate.",
          "type": [
            "string",
            "null"
          ]
        },
        "projected_payment_estimated_taxes_insurance_assessment_component_type_other_description": {
          "type": "string",
          "comment": "A free-form text field to collect more details when the type of taxes, insurance or assessment that is part of the payment estimate is 'other'."
        }
      },
      "relationships": {}
    },
    {
      "type": "example",
      "container_name": "examples",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "example_category": {
          "type": "string",
          "comment": "The example category classifies the example into a specific group or type based on its content, subject, or application."
        },
        "example_console_app_url": {
          "type": "string",
          "comment": "The example console app URL is a web link that points to a console application or interactive environment where the example can be run or tested. It allows users to directly interact with the example in a live setting."
        },
        "example_description": {
          "type": "string",
          "comment": "The example description provides a detailed explanation or summary of what the example represents or demonstrates. It may include information about the context, purpose, or functionality illustrated by the example."
        },
        "example_identifier": {
          "type": "string",
          "comment": "The example identifier is a unique string that serves as a reference to a specific example. It allows for easy identification and retrieval of the example within a collection or system."
        },
        "has_transaction": {
          "type": "string",
          "comment": "The 'has_transaction' property links the example to a specific transaction that may be associated with it. This could represent a record of versions of the example using transaction's collections"
        }
      },
      "relationships": {
        "has_transaction": {
          "targets": [
            "transaction"
          ],
          "comment": "The 'has_transaction' property links the example to a specific transaction that may be associated with it. This could represent a record of versions of the example using transaction's collections"
        }
      }
    },
    {
      "type": "expense",
      "container_name": "expenses",
      "is_deprecated": false,
      "deprecated_properties": [
        "alimony_paid_amount",
        "alimony_owed_to_name",
        "alimony_recipient_social_security_number",
        "educator_expenses_amount",
        "educator_expenses_per_irs_amount",
        "expense_monthly_payment_amount",
        "reservist_and_other_business_expense_amount"
      ],
      "properties": {
        "alimony_owed_to_name": {
          "type": "string",
          "comment": "The unstructured name of the person to whom alimony payments are owed by the borrower. Collected on the URLA in Section VI (Liabilities Alimony Owed To)."
        },
        "alimony_paid_amount": {
          "type": "decimal"
        },
        "alimony_recipient_social_security_number": {
          "type": "string"
        },
        "currency_code": {
          "type": "string",
          "comment": "currency code in mortgage banking expenses refers to a standardized code that identifies the type of currency being used. \nThe currency code is typically an alphabetic code consisting of 3 letters, and is used to represent the currency symbol for transactions in the international financial market. The currency code is used to ensure the accurate exchange and conversion of currency in mortgage banking transactions, and helps to eliminate confusion and avoid errors in financial transactions. Some examples of currency codes include USD for US dollars, EUR for euros, and GBP for British pounds."
        },
        "educator_expenses_amount": {
          "type": "decimal"
        },
        "educator_expenses_per_irs_amount": {
          "type": "decimal"
        },
        "expense_amount": {
          "type": "decimal",
          "comment": "Amount of money paid to satisfy an expense."
        },
        "expense_baseline_amount": {
          "type": "decimal",
          "comment": "An amount of money that serves as a baseline for a tax calculation or other calculation."
        },
        "expense_description": {
          "type": "string",
          "comment": "A text description that further defines the expense. This could be used to describe the job related expenses."
        },
        "expense_exclusion_indicator": {
          "type": "boolean",
          "comment": "expense exclusion indicator in mortgage banking expenses refers to a flag or marker used to indicate that a particular expense should not be included in the calculation of the total expenses associated with a mortgage loan. \nThis indicator can be used to exclude expenses that are deemed non-essential, redundant, or not applicable to rdf:type specific mortgage loan. The use of an expense exclusion indicator helps to ensure that the total expenses associated with rdf:type mortgage loan are accurate and reflective of the actual costs incurred. The exclusion of expenses can also impact the overall affordability and repayment of the mortgage loan, and therefore, the use of an expense exclusion indicator should be carefully considered by mortgage companies."
        },
        "expense_monthly_payment_amount": {
          "type": "decimal",
          "comment": "The dollar amount of the monthly payment required on borrower's Expense Type."
        },
        "expense_remaining_term_months_count": {
          "type": "integer",
          "comment": "The number of months the borrower must make payments in order to satisfy the identified expense."
        },
        "frequency_type": {
          "enum": [
            "Quarterly",
            "Semimonthly",
            "Annual",
            "Monthly",
            "Biweekly",
            "AtMaturity",
            "Semiannual",
            "Weekly",
            null
          ],
          "comment": "Expense frequency type indicates how frequently the expense is paid.",
          "type": [
            "string",
            "null"
          ]
        },
        "expense_type": {
          "comment": "Represents general expenses.",
          "enum": [
            "GroceryToiletry",
            "Medical",
            "MedicareTax",
            "PayrollProfitSharingDeduction",
            "Clothing",
            "PayrollTaxDeduction",
            "Alimony",
            "MiscellaneousLivingExpenses",
            "CarMaintenance",
            "ChildSupport",
            "JobRelatedExpenses",
            "PayrollInsuranceDeduction",
            "SeparateMaintenanceExpense",
            "PayrollRetirementDeduction",
            "LocalTax",
            "Entertainment",
            "DryCleaning",
            "PayrollMiscellaneousDeductions",
            "HealthInsurance",
            "ChildCare",
            "UnionDues",
            "CharitableContributions",
            "SocialSecurityTax",
            "Supplies",
            "StateIncomeTax",
            "Educator",
            "EducatorPerIRS",
            "Reservist",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "fixed_property_expense_type": {
          "comment": "Represents expenses tied directly to a property and incurred regardless of occupancy.",
          "enum": [
            "FloodInsurance",
            "GroundRent",
            "HomeownersAssociationDuesAndCondominiumFees",
            "HomeownersInsurance",
            "LeaseholdPayments",
            "MaintenanceAndMiscellaneous",
            "RealEstateTax",
            "SupplementalPropertyInsurance",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "occupant_property_expense_type": {
          "comment": "Represents expenses tied to an individual occupying the property, and are incurred only when the property is occupied.",
          "enum": [
            "Cable",
            "Electricity",
            "Telephone",
            "Utilities",
            "Heating",
            "Rent",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "mortgage_property_expense_type": {
          "comment": "Represents expenses related to the financial circumstances of the individual occupying the property, often associated with mortgage conditions.",
          "enum": [
            "EscrowShortage",
            "FirstMortgagePITI",
            "FirstMortgagePrincipalAndInterest",
            "MIPremium",
            "OtherMortgagePrincipalAndInterest",
            "OtherMortgageLoanPrincipalInterestTaxesAndInsurance",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "expense_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for Expense Type."
        },
        "fixed_property_expense_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for fixed property expense type."
        },
        "occupant_property_expense_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for occupant property expense type."
        },
        "mortgage_property_expense_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for mortgage property expense type."
        },
        "period_end_date": {
          "type": "string",
          "format": "date",
          "comment": "period end date in mortgage banking expenses refers to the date that marks the end of a specific time period for which expenses are being reported. \nThis date is used to determine the duration of the time period for which expenses are being calculated and reported. The period end date can be used to calculate the total expenses for rdf:type specific time period, such as rdf:type month or rdf:type quarter, and can help mortgage companies to track and analyze their expenses over time. The period end date is an important factor in determining the accuracy and completeness of expense reporting in mortgage banking."
        },
        "period_start_date": {
          "type": "string",
          "format": "date",
          "comment": "period start date in mortgage banking expenses refers to the date that marks the beginning of a specific time period for which expenses are being reported. \nThis date is used in conjunction with the period end date to determine the duration of the time period for which expenses are being calculated and reported. The period start date can be used to calculate the total expenses for rdf:type specific time period, such as rdf:type month or rdf:type quarter, and can help mortgage companies to track and analyze their expenses over time. The period start date is an important factor in determining the accuracy and completeness of expense reporting in mortgage banking."
        },
        "reservist_and_other_business_expense_amount": {
          "type": "decimal"
        }
      },
      "relationships": {
        "paid_by": {
          "targets": [
            "company",
            "person"
          ],
          "comment": "The 'paid_by' property specifies the company responsible for disbursing the income to the individual or company. It identifies the payer or source of the income, helping to provide clarity on the origin of the funds."
        },
        "paid_to": {
          "targets": [
            "company",
            "person"
          ],
          "comment": "The 'paid_to' attribute specifies the recipient—whether a company or individual—who receives the disbursement of funds as an expense. It clearly identifies where the money is directed, ensuring transparency in financial transactions."
        }
      }
    },
    {
      "type": "exterior",
      "container_name": "exteriors",
      "is_deprecated": true,
      "deprecated_properties": [
        "lot_type_other_description"
      ],
      "properties": {
        "lot_type": {
          "enum": [
            "GreaterThanOneQuarterAcre",
            "PavedRoad",
            "LessThanOrEqualToOneQuarterAcre",
            null
          ],
          "comment": "Describes key physical attributes of the lot, including size and access. This classification helps differentiate between lots that are larger than a quarter acre, smaller or equal to a quarter acre, have direct access to a paved road, or possess other distinguishing features.",
          "type": [
            "string",
            "null"
          ]
        },
        "lot_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the lot type."
        },
        "outdoor_living_space_type": {
          "enum": [
            "Balcony",
            "Porch",
            "CoveredPatio",
            "CoveredPorch",
            "Open",
            "Patio",
            null
          ],
          "comment": "Refers to the type of outdoor living space associated with a structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "outdoor_living_space_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the outdoor living space type."
        },
        "parking_type": {
          "enum": [
            "Covered",
            "Attached",
            "GarageDoorOpener",
            "RVAccessParking",
            "GolfCartGarage",
            "Guest",
            "TwoCarGarage",
            "TwoOrMoreSpaces",
            "Garage",
            "ThreeCarGarage",
            "CircularDriveway",
            "Driveway",
            "Open",
            null
          ],
          "comment": "Refers to characteristics associated with parking in or near the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "parking_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the parking type."
        },
        "pool_type": {
          "enum": [
            "Association",
            "SaltWater",
            "AboveGround",
            "None",
            "Pool",
            "Concrete",
            "PoolEquipment",
            "CommunityPool",
            "CommunitySpa",
            "CleaningSystem",
            "Heated",
            "BuiltIn",
            "RoomForPool",
            null
          ],
          "comment": "Refers to the type of pool associated with a structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "pool_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the pool type."
        },
        "spa_type": {
          "enum": [
            "JapaneseSoakingTub",
            "InGround",
            "Rooftop",
            "NaturalHotSprings",
            "Saltwater",
            "Jacuzzi",
            "WoodFiredHotTub",
            "Heated",
            null
          ],
          "comment": "Refers to the type of spa.",
          "type": [
            "string",
            "null"
          ]
        },
        "spa_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the spa type."
        },
        "view_type": {
          "enum": [
            "Courtyard",
            "Ocean",
            "City",
            "Garden",
            "Bay",
            "Marina",
            null
          ],
          "comment": "Refers to characteristics associated with a view from the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "view_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the view type."
        }
      },
      "structure_add_on_type": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Dock",
            "Seawall",
            "Deck",
            "Shed",
            "Firepit",
            "Other",
            null
          ]
        },
        "comment": "Represents permanent or semi-permanent add-on structures on the exterior of the property."
      },
      "structure_add_on_description": {
        "type": "string",
        "comment": "A free-form field to describe structure add-ons when further detail is needed, or when 'Other' is selected."
      },
      "relationships": {}
    },
    {
      "type": "environmental_risk",
      "container_name": "environmental_risks",
      "description": "The EnvironmentalRisk class provides environmental quality and hazard assessment data for properties, focusing on ambient conditions and specific natural hazards that affect daily living and property desirability. It captures wildfire risk zones, ambient noise levels from quiet to loud environments, and light pollution levels that affect night sky visibility. This streamlined class focuses on environmental quality factors while working in conjunction with specialized FloodInsurance and StormInformation classes for comprehensive property risk assessment.",
      "is_deprecated": false,
      "deprecated_properties": [
        "flood_zone",
        "evacuation_zone",
        "storm_surge_risk"
      ],
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "fire_zone": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Wildfire risk zone or fire district designation indicating wildfire hazard level and emergency response district.",
          "minLength": 1
        },
        "wildfire_risk_level": {
          "enum": [
            "Very Low",
            "Low",
            "Moderate",
            "High",
            "Very High",
            "Extreme",
            null
          ],
          "comment": "Standardized wildfire risk assessment based on vegetation, weather patterns, topography, and fire history.",
          "type": [
            "string",
            "null"
          ]
        },
        "air_quality_index": {
          "enum": [
            "Good",
            "Moderate",
            "Unhealthy for Sensitive Groups",
            "Unhealthy",
            "Very Unhealthy",
            "Hazardous",
            null
          ],
          "comment": "EPA Air Quality Index category indicating typical air pollution levels for the area.",
          "type": [
            "string",
            "null"
          ]
        },
        "noise_level": {
          "enum": [
            "Quiet",
            "Moderate",
            "Busy",
            "Loud",
            null
          ],
          "comment": "Ambient noise level in the area affecting quality of life and property desirability.",
          "type": [
            "string",
            "null"
          ]
        },
        "light_pollution_level": {
          "enum": [
            "Dark",
            "Rural",
            "Suburban",
            "Urban",
            null
          ],
          "comment": "Light pollution level affecting night sky visibility and natural darkness.",
          "type": [
            "string",
            "null"
          ]
        },
        "earthquake_zone": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Seismic zone designation or earthquake risk classification for the area.",
          "minLength": 1
        },
        "soil_stability": {
          "enum": [
            "Stable",
            "Moderate",
            "Unstable",
            "High Risk",
            null
          ],
          "comment": "Soil stability assessment considering factors like erosion, subsidence, and landslide risk.",
          "type": [
            "string",
            "null"
          ]
        },
        "environmental_hazards": {
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1
          },
          "comment": "List of additional environmental hazards present in the area (e.g., 'Radon', 'Industrial Pollution', 'Mining Activity').",
          "minItems": 1
        }
      }
    },
    {
      "type": "fee",
      "container_name": "fees",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "actual_payment_amount": {
          "type": "decimal",
          "comment": "Fee actual payment amount refers to the monetary amount paid to satisfy a fee."
        },
        "assessed_amount": {
          "type": "decimal",
          "comment": "Fee assessed amount refers to the monetary amount assessed to satisfy a fee."
        },
        "assessed_date": {
          "type": "string",
          "format": "date",
          "comment": "Fee assessed date refers to the date a fee payment was assessed."
        },
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        },
        "fee_type": {
          "enum": [
            "MortgageInsuranceInitialPremium",
            "TitleServicesFeeTotal",
            "MunicipalLienCertificateFee",
            "RateLockFee",
            "TaxMonitoringFee",
            "CourierFee",
            "RecordingFeeForAssignment",
            "EscrowHoldbackFee",
            "ManualUnderwritingFee",
            "ManufacturedHousingInspectionFee",
            "TaxServiceFee",
            "LoanOriginationFee",
            "RoofInspectionFee",
            "MultipleLoansClosingFee",
            "HelocOverLimitFee",
            "SubordinationFee",
            "ProgramGuaranteeFee",
            "BrokersAdministrationFee",
            "TemporaryBuydownAdministrationFee",
            "CreditDisabilityInsurancePremium",
            "RecordingFeeForRelease",
            "CreditReportFee",
            "HomeWarrantyFee",
            "AdministrationFee",
            "RenovationConsultantFee",
            "TitleSettlmentAgentFee",
            "DebtSuspensionInsurancePremium",
            "MortgageInsuranceUpfrontPremium",
            "OriginationFee",
            "DocumentPreparationFee",
            "LenderAdministrationFee",
            "MortgageTaxCreditServiceFee",
            "UsdaRuralDevelopmentGuaranteeFee",
            "MoldInspectionFee",
            "TitleExaminationFee",
            "203KConsultantFee",
            "PowerOfAttorneyPreparationFee",
            "DocumentaryStampFee",
            "AppraisalDeskReviewFee",
            "RedrawFee",
            "ProcessingFee",
            "LeadInspectionFee",
            "BondReviewFee",
            "RecordingFeeForMortgage",
            "ReinspectionFee",
            "HelocAnnualFee",
            "ElectricalInspectionFee",
            "MortgageSurchargeCountyOrParish",
            "RepairsFee",
            "TitleInsuranceBinderFee",
            "TaxStatusResearchFee",
            "TitleAbstractFee",
            "MersRegistrationFee",
            "ReconveyanceFee",
            "TitleServicesSalesTax",
            "ManufacturedHousingProcessingFee",
            "HomeInspectionFee",
            "TitleOwnersCoveragePremium",
            "FoundationInspectionFee",
            "FloodCertification",
            "RecordingFeeTotal",
            "ChosenInterestRateCreditOrChargeTotal",
            "RecordingServiceFee",
            "HeatingCoolingInspectionFee",
            "TitleSettlementFee",
            "TitleDeedPreparationFee",
            "PayoffRequestFee",
            "PestInspectionFee",
            "RecordingFeeForMunicipalLienCertificate",
            "SigningAgentFee",
            "AttorneyFee",
            "ModificationFee",
            "MortgageBrokerFee",
            "MortgageSurchargeMunicipal",
            "CreditLifeInsurancePremium",
            "ConstructionInspectionFee",
            "TaxStampForStateMortgage",
            "SmokeDetectorInspectionFee",
            "PreclosingVerificationControlFee",
            "FHAUpfrontMI",
            "NotaryFee",
            "203KPermits",
            "WireTransferFee",
            "TaxStampForStateDeed",
            "TaxStampForCountyMortgage",
            "TitleCertificationFee",
            "SepticInspectionFee",
            "CooperativeAssociationSpecialAssessment",
            "AssumptionFee",
            "SettlementFee",
            "DiscountOnRepairsFee",
            "VerificationOfEmploymentFee",
            "LoanOriginatorCompensation",
            "VerificationOfResidencyStatusFee",
            "DeedPreparationFee",
            "203KTitleUpdate",
            "VaFundingFee",
            "DownPaymentProtectionFee",
            "FilingFee",
            "LoanLevelPriceAdjustment",
            "TitleClosingCoordinationFee",
            "203KDiscountOnRepairs",
            "VerificationOfTaxReturnFee",
            "PropertyInspectionWaiverFee",
            "RealEstateCommissionBuyersBroker",
            "AutomatedUnderwritingFee",
            "StateTitleInsuranceFee",
            "TaxStampForCityDeed",
            "DisasterInspectionFee",
            "TitleClosingProtectionLetterFee",
            "TitleClosingFee",
            "ConstructionHandlingFee",
            "ArmConversionFee",
            "CopyOrFaxFee",
            "ElectronicDocumentDeliveryFee",
            "MortgageSurchargeState",
            "CooperativeAssociationDues",
            "ReconveyanceTrackingFee",
            "VerificationOfTaxpayerIdentificationFee",
            "TitleBorrowerClosingProtectionLetterFee",
            "NonSufficientFundsFee",
            "DryWallInspectionFee",
            "RecordingFeeForSubordination",
            "LendersAttorneyFee",
            "TitleInsuranceFee",
            "RealEstateCommissionSellersBroker",
            "ApplicationFee",
            "AppraisalFee",
            "HomeownersAssociationSpecialAssessment",
            "TaxStampForCountyDeed",
            "203KInspectionFee",
            "TitleLendersTitleInsurance",
            "TitleLendersCoveragePremium",
            "TransferTaxTotal",
            "AvmFee",
            "UnderwritingFee",
            "WaterTestingFee",
            "WellInspectionFee",
            "AssignmentPreparationFee",
            "TitleNotaryFee",
            "PlumbingInspectionFee",
            "EnvironmentalInspectionFee",
            "FloodMonitoringFee",
            "RecordingFeeForDeed",
            "TaxStampForCityMortgage",
            "TemporaryBuydownPoints",
            "TitleDocumentPreparationFee",
            "BondFee",
            "EscrowServiceFee",
            "CreditPropertyInsurancePremium",
            "LateCharge",
            "CommitmentFee",
            "CreditUnemploymentInsurancePremium",
            "AppraisalFieldReviewFee",
            "203KSupplementalOriginationFee",
            "TitleSearchFee",
            "FloodDeterminationFee",
            "CertificationFee",
            "TitleFinalPolicyShortFormFee",
            "HighCostMortgageCounselingFee",
            "TitleCoOpApartmentLienSearchFee",
            "RadonInspectionFee",
            "TitleCommitmentFee",
            "TitleSubEscrowFee",
            "TitleUnderwritingIssueResolutionFee",
            "VerificationOfAssetsFee",
            "TitleSubordinationProcessingFee",
            "HomeownersAssociationServiceFee",
            "TitleEndorsementFee",
            "CondominiumAssociationSpecialAssessment",
            "EscrowWaiverFee",
            "SurveyFee",
            "BankruptcyMonitoringFee",
            "AppraisalManagementCompanyFee",
            "HomeownersAssociationDues",
            "PartialLienReleaseFee",
            "DebtCancellationInsurancePremium",
            "OurOriginationChargeTotal",
            "RecordingFeeForOtherDocument",
            "StructuralInspectionFee",
            "LoanDiscountPoints",
            "VerificationOfIncomeFee",
            "PowerOfAttorneyRecordingFee",
            "AsbestosInspectionFee",
            "CondominiumAssociationDues",
            null
          ],
          "comment": "The type of fee.",
          "type": [
            "string",
            "null"
          ]
        },
        "payment_paid_date": {
          "type": "string",
          "format": "date",
          "comment": "Fee payment paid date refers to the date a fee payment was made."
        }
      },
      "relationships": {
        "has_closing_adjustment_item": {
          "targets": [
            "closing_adjustment_item"
          ],
          "comment": "Item provided in a closing disclosure that either adds a cost to, or subtracts a cost from, closing costs."
        }
      }
    },
    {
      "type": "government_monitoring",
      "container_name": "government_monitoring",
      "is_deprecated": false,
      "deprecated_properties": [
        "hmda_race_designation_type",
        "hmda_ethnicity_origin_type",
        "hmda_ethnicity_type",
        "hmda_race_type"
      ],
      "properties": {
        "application_taken_method_type": {
          "enum": [
            "Mail",
            "Email",
            "Telephone",
            "Fax",
            "Internet",
            "FaceToFace",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "demographic_collection_date": {
          "type": "string",
          "format": "date",
          "comment": "The date demographic information was collected for a borrower or applicant."
        },
        "demographic_collection_version_type": {
          "enum": [
            "Pre2018Version",
            "2018Version",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "demographic_collection_version_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for HMDA Demographic Version Type."
        },
        "ethnicity_collected_based_on_visual_observation_or_surname_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the ethnicity was collected based on visual observation or surname."
        },
        "ethnicity_origin_type": {
          "enum": [
            "Cuban",
            "PuertoRican",
            "Mexican",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "ethnicity_origin_type_other_description": {
          "type": "string",
          "comment": "A free-form text field that specifies the enumeration when the value of Other is used for HMDA Ethnicity Origin Type."
        },
        "ethnicity_refusal_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower has stated that they do not wish to furnish the HMDA ethnicity information."
        },
        "ethnicity_type": {
          "enum": [
            "InformationNotProvidedByApplicantInMailInternetOrTelephoneApplication",
            "NotHispanicOrLatino",
            "NotApplicable",
            "HispanicOrLatino",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "ethnicity_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for HMDA Ethnicity Type."
        },
        "gender_collected_based_on_visual_observation_or_name_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the gender was collected based on visual observation or name."
        },
        "gender_refusal_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower has stated that they do not wish to furnish the HMDA gender information."
        },
        "gender_type": {
          "enum": [
            "InformationNotProvidedUnknown",
            "NotApplicable",
            "Female",
            "Male",
            "ApplicantSelectedBothMaleAndFemale",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "gender_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for HMDA Gender Type."
        },
        "race_collected_based_on_visual_observation_or_surname_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the race was collected based on visual observation or surname."
        },
        "race_national_origin_refusal_indicator": {
          "type": "boolean",
          "comment": "Borrower's answer to the statement: I do not wish to furnish the HMDA) information. Collected on the URLA in Section X."
        },
        "race_refusal_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower has stated that they do not wish to furnish the HMDA race information."
        },
        "race_type": {
          "enum": [
            "NotApplicable",
            "Asian",
            "White",
            "AmericanIndianOrAlaskaNative",
            "InformationNotProvidedByApplicantInMailInternetOrTelephoneApplication",
            "NativeHawaiianOrOtherPacificIslander",
            "BlackOrAfricanAmerican",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "race_type_additional_description": {
          "type": "string",
          "comment": "A free-form text field used to provide a supplemental comment or remark regarding HMDA Race Type."
        },
        "refusal_indicator": {
          "type": "boolean",
          "comment": "Indicates that the borrower has refused to provide the requested HMDA information."
        }
      },
      "relationships": {
        "represents": {
          "targets": [
            "person"
          ],
          "comment": "A person who is represented by this."
        }
      }
    },
    {
      "type": "graph_entity",
      "container_name": "graph_entities",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "comment": {
          "type": "string",
          "comment": "Comment provides a human-readable description of a resource."
        },
        "container_name": {
          "type": "string",
          "comment": "Container name refers to a high-level organizational construct that holds one or more graphs within it."
        },
        "data_path": {
          "type": "string",
          "comment": "The data path stores the location of the entity's data within the graph structure."
        },
        "date": {
          "type": "dateTime",
          "comment": "The specific date on which the interaction occurred."
        },
        "deprecated": {
          "type": "boolean",
          "comment": "This property indicates whether a lexicon class, data or object property is outdated, no longer recommended for use, or planned to be removed in future versions or updates. The property should not be used in new implementations."
        },
        "domain": {
          "type": "string",
          "comment": "An attribute representing the specific area, category, or field to which the product belongs. This classification helps in organizing products within a particular context or industry"
        },
        "label": {
          "type": "string",
          "comment": "Label refers to a description or identifier assigned to a specific field in software called Desktop Underwriter. Labels in Desktop Underwriter provide clear indications of what information is expected to be entered in each field. They help guide users through the loan application process by providing context and specifying the type of data required. "
        },
        "lexicon_identifier": {
          "type": "string",
          "comment": "Unique Lexicon Identifier"
        },
        "max_count": {
          "type": "integer"
        },
        "min_count": {
          "type": "integer"
        },
        "pattern": {
          "type": "string"
        },
        "range": {
          "type": "string",
          "comment": "Data_property specifies the range of a property."
        },
        "subClassOf": {
          "type": "string",
          "comment": "subClassOf indicates that a class is a subclass of another class."
        },
        "subclass_of": {
          "type": "string"
        }
      },
      "relationships": {
        "has_language": {
          "targets": [
            "language"
          ],
          "comment": "Represented association of graph entity with certain language."
        }
      }
    },
    {
      "type": "graph",
      "container_name": "graphs",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        },
        "namespace": {
          "type": "string"
        },
        "tag": {
          "type": "string",
          "comment": "A tag is a label or keyword that is used to categorize or classify objects based on their nature, priority, or other characteristics."
        }
      },
      "relationships": {}
    },
    {
      "type": "health_metric",
      "container_name": "health_metrics",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "created_date": {
          "type": "dateTime",
          "comment": "Created date refers to the date that the health metric was created."
        },
        "has_transaction": {
          "type": "string",
          "comment": "Indicates the transaction(s) related to a particular entity."
        },
        "health_metric_identifier": {
          "type": "string",
          "comment": "A health metric identifier is a unique identifier for a health metric."
        },
        "health_metric_type": {
          "type": "string",
          "comment": "Health metric type refers to a category of quantitative or qualitative data points that provide insights into the current state and functioning of a system."
        },
        "health_status_code": {
          "type": "string",
          "comment": "A host environment variable is a dynamic value that is stored in the operating system's environment and provides information or configuration settings specific to the host environment in which the program is executed."
        },
        "health_status_type": {
          "type": "string",
          "comment": "Health status type refers to the different categories or classifications used to indicate the overall health or condition of a computer system, component, or software application."
        },
        "load_time": {
          "type": "integer",
          "comment": "Load time refers to the amount of milliseconds it takes for product to fully load and become ready for use by a user. The load time is measured from the moment a user starts a product to the point where it is fully loaded and ready for the user to interact with."
        },
        "number_of_clicks": {
          "type": "integer",
          "comment": "Number of clicks refers to the number of times a user clicks a mouse button or a touchpad while using a product. The number of clicks measures user engagement with a particular product and evaluates the efficiency of a particular interface or workflow. For example, if a user must click through multiple levels of menus or buttons to access a particular feature, it may be an indication that the interface could be streamlined or simplified to improve user experience."
        },
        "page_path": {
          "type": "string",
          "comment": "Page path refers to the specific location or address of a web page within a website's hierarchy or directory structure. It is a part of the URL that helps identify and locate a specific webpage."
        },
        "session_end_time": {
          "type": "dateTime",
          "comment": "Session end time is the date and time on which a session was completed."
        },
        "session_start_time": {
          "type": "dateTime",
          "comment": "Session start time is the date and time on which the session began."
        },
        "site_event_date": {
          "type": "dateTime",
          "comment": "Site event date refers to the date that a particular site event was captured."
        },
        "site_event_type": {
          "type": "string",
          "comment": "Site event type refers to the category of the site_event. Types are typically those returned by Google Analytics to classify site event types."
        },
        "user_guid": {
          "type": "string",
          "comment": "A user GUID (Globally Unique Identifier) is a unique identifier for the user who created the session."
        },
        "visitor_time_spent": {
          "type": "integer",
          "comment": "Visitor time spent refers to the amount of milliseconds that a visitor spent using the product. The visitor time spent is measured from the moment a user starts a product to the point where the user stops interacting with a product."
        }
      },
      "relationships": {
        "has_address": {
          "targets": [
            "address"
          ],
          "comment": "Indicates a specific location or postal information."
        },
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        },
        "has_product": {
          "targets": [
            "product"
          ],
          "comment": "The 'has_product' property connects an invocation to a specific product or service that is being affected or manipulated through the invocation. This relationship can help in understanding the interaction between the invocation and the corresponding product"
        },
        "has_product_configuration": {
          "targets": [
            "product_configuration"
          ],
          "comment": "Product configuration refers to the process of customizing a product to meet specific customer needs and requirements."
        },
        "has_transaction": {
          "targets": [
            "transaction"
          ],
          "comment": "Indicates the transaction(s) related to a particular entity."
        }
      }
    },
    {
      "type": "homeowners_association_amenity",
      "container_name": "homeowners_association_amenities",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "homeowners_association_amenity_type": {
          "enum": [
            "SpaHotTub",
            "AssociationManagement",
            "Pool",
            "CommonAreas",
            "Clubhouse",
            "BasketballCourt",
            "Trail",
            "MaintenanceGrounds",
            "TennisCourts",
            "Management",
            "Pickleball",
            "CableTV",
            null
          ],
          "comment": "Refers to the type of Homeowners association (HOA) amenity.",
          "type": [
            "string",
            "null"
          ]
        },
        "homeowners_association_amenity_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the amenity type."
        }
      },
      "relationships": {}
    },
    {
      "type": "homeowners_association_inclusion",
      "container_name": "homeowners_association_inclusions",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "homeowners_association_inclusion_type": {
          "enum": [
            "SpaHotTub",
            "AssociationManagement",
            "Pool",
            "CommonAreas",
            "Clubhouse",
            "BasketballCourt",
            "Trail",
            "MaintenanceGrounds",
            "TennisCourts",
            "Management",
            "Pickleball",
            "CableTV",
            null
          ],
          "comment": "Refers to the type of Homeowners association (HOA) inclusion.",
          "type": [
            "string",
            "null"
          ]
        },
        "homeowners_association_inclusion_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the inclusion type."
        }
      },
      "relationships": {}
    },
    {
      "type": "homeowners_association",
      "container_name": "homeowners_associations",
      "is_deprecated": false,
      "description": "The HomeownersAssociation class represents comprehensive information about homeowners associations (HOAs) governing residential properties, including community governance, financial obligations, and available amenities. It captures essential HOA details such as the association name, type (mandatory, voluntary, condominium, hybrid, or other), fee structure with amounts and payment frequencies (monthly, quarterly, annually, etc.), and applicable year information. The class documents extensive community amenities ranging from recreational facilities like pools, clubhouses, gyms, and golf courses to modern conveniences such as co-working spaces, package lockers, and rooftop decks. Additionally, it tracks security features including 24/7 guards, gated entries, surveillance systems, keycard access, and other safety measures. This information is crucial for property buyers to understand community living costs, available facilities, governance structure, and security provisions when evaluating properties within HOA-managed communities.",
      "deprecated_properties": [
        "has_payment",
        "has_expense",
        "has_homeowners_association_amenity",
        "has_homeowners_association_inclusion"
      ],
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "homeowners_association_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Name of the homeowners association (e.g., Jupiter Shores HOA).",
          "minLength": 1
        },
        "homeowners_association_type": {
          "enum": [
            "Mandatory",
            "Voluntary",
            "Condominium",
            "Hybrid",
            null
          ],
          "comment": "Refers to the type of Homeowners association (HOA).",
          "type": [
            "string",
            "null"
          ]
        },
        "homeowners_association_amount": {
          "type": "decimal",
          "comment": "Amount of HOA fees",
          "format": "currency"
        },
        "homeowners_association_year": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "year of for the HOA year",
          "minimum": 1
        },
        "homeowners_association_fee_frequency": {
          "enum": [
            "Monthly",
            "Quarterly",
            "Annually",
            "Bi-Annually",
            "One-Time",
            null
          ],
          "comment": "How often the HOA fee is charged.",
          "type": [
            "string",
            "null"
          ]
        },
        "amenities": {
          "enum": [
            "pool",
            "clubhouse",
            "gym",
            "golf_course",
            "tennis_court",
            "playground",
            "dog_park",
            "spa",
            "sauna",
            "business_center",
            "game_room",
            "bbq_area",
            "marina",
            "bike_trails",
            "walking_paths",
            "rooftop_deck",
            "community_kitchen",
            "co_working_space",
            "package_lockers",
            null
          ],
          "comment": "List of common amenities offered (e.g., pool, clubhouse, gym, golf course).",
          "type": [
            "string",
            "null"
          ]
        },
        "security_features": {
          "enum": [
            "24_7_guard",
            "gated_entry",
            "surveillance_cameras",
            "keycard_access",
            "security_patrols",
            "doorman",
            "intercom_system",
            "secure_parking",
            "fenced_perimeter",
            "alarm_system",
            "smart_locks",
            null
          ],
          "comment": "Standard security infrastructure or services (e.g., 24/7 guard, gated entry, surveillance cameras).",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_homeowners_association_amenity": {
          "targets": [
            "homeowners_association_amenity"
          ],
          "comment": "A Homeowners association amenity is a shared facility and service provided and maintained by the HOA for the benefit and use of the residents within the community."
        },
        "has_homeowners_association_inclusion": {
          "targets": [
            "homeowners_association_inclusion"
          ],
          "comment": "A homeowners association inclusion refers to a service included in the HOA dues."
        },
        "has_payment": {
          "targets": [
            "payment"
          ],
          "comment": "A payment refers to the transfer of money, goods, or services from one party (the payer) to another party (the payee) in exchange for a product, service, or debt settlement. Payments can take various forms, including cash, checks, bank transfers, credit cards, electronic funds transfers, mobile payments, and digital currencies."
        },
        "has_expense": {
          "targets": [
            "expense"
          ],
          "comment": "Homeowners associations typically require monthly payments, which are considered fixed property expenses to be paid regardless of occupancy."
        }
      }
    },
    {
      "type": "hoa_policy",
      "container_name": "hoa_policies",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": "string",
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data."
        },
        "leasing_policy": {
          "enum": [
            "NoRental",
            "ShortTermRental",
            "LongTermRental",
            "MinimumStay30Days",
            "MinimumStay6Months",
            "MinimumStay1Year",
            "HOAApprovalRequired",
            "OwnerOccupiedOnly",
            "UnlimitedRental",
            "SeasonalRentalOnly",
            null
          ],
          "comment": "Summary of leasing rules and duration limits (e.g., minimum stay, frequency, HOA approval).",
          "type": [
            "string",
            "null"
          ]
        },
        "pet_policy": {
          "enum": [
            "NoPets",
            "PetFriendly",
            "DogsOnly",
            "CatsOnly",
            "SmallPetsOnly",
            "WeightRestriction25lbs",
            "WeightRestriction50lbs",
            "BreedRestrictions",
            "MaxTwoPets",
            "PetDeposit",
            "PetFee",
            "ServiceAnimalsOnly",
            null
          ],
          "comment": "Information about pet allowances and restrictions (e.g., pet friendly, breed/size restrictions).",
          "type": [
            "string",
            "null"
          ]
        },
        "vehicle_policy": {
          "enum": [
            "NoRestrictions",
            "NoRVs",
            "NoTrailers",
            "NoCommercialVehicles",
            "NoBoats",
            "ReservedParkingOnly",
            "GuestParkingRestricted",
            "MaxTwoVehicles",
            "CoveredParkingRequired",
            "NoStreetParking",
            "PermitRequired",
            null
          ],
          "comment": "Rules around parking and vehicle types (e.g., no RVs, reserved parking).",
          "type": [
            "string",
            "null"
          ]
        },
        "general_restrictions": {
          "enum": [
            "NoRestrictions",
            "QuietHours",
            "NoSmoking",
            "NoStorage",
            "DressCode",
            "NoSatelliteDishes",
            "NoExteriorModifications",
            "NoPoolAccess",
            "NoGym",
            "AgeLimited55Plus",
            "NoShortTermGuests",
            "HOAApprovalRequired",
            null
          ],
          "comment": "Other HOA or property-wide lifestyle rules (e.g., quiet hours, storage bans, dress code).",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    {
      "type": "identity",
      "container_name": "identities",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "identity_identifier": {
          "type": "string",
          "comment": "An identity identifier is a unique code or number that represents to a set of identity credentials assigned to an individual or entity."
        },
        "identity_provider": {
          "type": "string",
          "comment": "Identity provider refers to the name of the provider/service used to verify identity."
        },
        "identity_trust_score": {
          "type": "integer",
          "comment": "Identify trust score is a numerical value or rating assigned to an individual's or entity's identity based on various factors and assessments. It represents the level of confidence or trust that can be placed in that identity for the purpose of establishing credibility."
        },
        "identity_verified_datetime": {
          "type": "dateTime",
          "comment": "Identify verified datetime indicates the date and time that an identity was verified."
        },
        "identity_verified_indicator": {
          "type": "boolean",
          "comment": "Identify verified indicator denotes whether or not an identity has been verified."
        }
      },
      "relationships": {}
    },
    {
      "type": "income",
      "container_name": "incomes",
      "is_deprecated": false,
      "deprecated_properties": [
        "current_income_monthly_total_amount",
        "employment_income_indicator",
        "income_source_name",
        "urla_borrower_total_monthly_income_amount",
        "income_data_source_type"
      ],
      "properties": {
        "annual_income": {
          "type": "decimal",
          "comment": "Annual income refers to the yearly financial earnings of an individual or organization."
        },
        "assessed_income_monthly_amount": {
          "type": "integer",
          "comment": "Assessed_income_monthly_amount refers to the total amount of money that an individual or entity receives during a month, as assessed during an income verification process."
        },
        "bonus_income_amount": {
          "type": "integer",
          "comment": "Bonus income refers to an additional amount of money that an individual receives on top of their regular salary or wages. This type of income is usually provided as a reward or incentive for achieving specific goals or milestones, such as meeting sales targets or completing a project ahead of schedule."
        },
        "component_income_representation_and_warranty_decision_indicator": {
          "type": "boolean",
          "comment": "Component income representation and warranty decision indicator refers to a decision made regarding the representation and warranty of a particular income component when applying for a mortgage loan. This decision may indicate whether the income component is accepted, rejected, or pending review based on the lender's underwriting criteria and assessment of the borrower's financial information."
        },
        "data_provider_name": {
          "type": "string",
          "comment": "Data provider name refers to the name of the company or entity that provided the information about the borrower's current income. This information is used to verify the borrower's income and financial stability for loan underwriting purposes."
        },
        "documentation_classification_description": {
          "type": "string",
          "comment": "Documentation classification description refers to the category or type of documentation provided to support the reported income amount. This description helps to identify and understand the level of evidence and verifiability of the income information used for mortgage purposes."
        },
        "income_amount": {
          "type": "integer",
          "comment": "Income amount refers to the total amount of money that an individual or entity receives during a specified period."
        },
        "income_data_source_type": {
          "type": "string",
          "comment": "Income data source type refers to the type of documentation or information used to verify the borrower's income. It could be rdf:type tax return, pay stub, bank statement, or any other document that provides evidence of the borrower's income. This information is used to determine the borrower's ability to repay the loan."
        },
        "income_description": {
          "type": "string",
          "comment": "A description of income is a statement or summary that provides details about an individual's or entity's sources of income. It typically includes information about the type of income, such as wages, salaries, commissions, bonuses, dividends, interest, or capital gains."
        },
        "income_identifier": {
          "type": "string",
          "comment": "An income identifier is a unique identifier for the income record of an individual or organization."
        },
        "income_pay_frequency_type": {
          "enum": [
            "Monthly",
            "Biweekly",
            "Yearly",
            "Weekly",
            null
          ],
          "comment": "Income pay frequency refers to the frequency at which an individual or entity receives payment for their work or services.",
          "type": [
            "string",
            "null"
          ]
        },
        "income_type": {
          "enum": [
            "Pension",
            "MiscellaneousIncome",
            "Commissions",
            "MortgageCreditCertificate",
            "MilitaryFlightPay",
            "PublicAssistance",
            "MilitaryClothesAllowance",
            "Bonuses",
            "AutomobileAllowance",
            "DividendsInterest",
            "Disability",
            "BorrowerEstimatedTotalMonthlyIncome",
            "NetRentalIncome",
            "TipIncome",
            "Non-borrowerhouseholdincome",
            "HousingChoiceVoucherProgram",
            "DefinedContributionPlan",
            "NotesReceivableInstallment",
            "Vabenefitsnon-educational",
            "WorkersCompensation",
            "MilitaryHazardPay",
            "TemporaryLeave",
            "MilitaryRationsAllowance",
            "MortgageDifferential",
            "MilitaryCombatPay",
            "ProposedGrossRentForSubjectProperty",
            "ContractBasis",
            "MilitaryOverseasPay",
            "Unemployment",
            "HousingAllowance",
            "RealEstateOwnedGrossRentalIncome",
            "Base",
            "Royalties",
            "SubjectPropertyNetCashFlow",
            "Trailingco-borrowerincome",
            "b239455247",
            "MilitaryQuartersAllowance",
            "EmploymentRelatedAccount",
            "Overtime",
            "WagesTipsOther",
            "SelfEmploymentLoss",
            "MilitaryBasePay",
            "MilitaryPropPay",
            "SelfEmploymentIncome",
            "Non-borrowercontribution",
            "MilitaryVariableHousingAllowance",
            "FosterCare",
            "SocialSecurity",
            "AccessoryUnitIncome",
            "CapitalGains",
            "BoarderIncome",
            null
          ],
          "comment": "Income type refers to the specific category or source of income earned by an individual or entity, such as earned, investment or rental income.",
          "type": [
            "string",
            "null"
          ]
        },
        "income_type_other_description": {
          "type": "string",
          "comment": "Income_type_other_description is a free-form text field used to collect additional information when Other is selected for Income Type."
        },
        "income_year": {
          "type": "string",
          "comment": "Income year refers to the year in which an individual or entity received income."
        },
        "median_household_income_census_amount": {
          "type": "decimal",
          "comment": "Median household income census amount refers to the median household income as provided in Census 2000 data."
        },
        "other_income_amount": {
          "type": "integer",
          "comment": "Other income refers to any additional income that an individual receives beyond their regular salary or wages, but that is not categorized as bonus income or overtime income."
        },
        "overtime_income_amount": {
          "type": "integer",
          "comment": "Overtime income refers to the additional pay that an employee receives for working beyond their regular work hours or scheduled shift. Overtime pay is typically paid at a higher rate than regular pay in recognition of the additional time and effort required."
        },
        "period_end_date": {
          "type": "string",
          "format": "date",
          "comment": "period end date in mortgage banking expenses refers to the date that marks the end of a specific time period for which expenses are being reported. \nThis date is used to determine the duration of the time period for which expenses are being calculated and reported. The period end date can be used to calculate the total expenses for rdf:type specific time period, such as rdf:type month or rdf:type quarter, and can help mortgage companies to track and analyze their expenses over time. The period end date is an important factor in determining the accuracy and completeness of expense reporting in mortgage banking."
        },
        "period_start_date": {
          "type": "string",
          "format": "date",
          "comment": "period start date in mortgage banking expenses refers to the date that marks the beginning of a specific time period for which expenses are being reported. \nThis date is used in conjunction with the period end date to determine the duration of the time period for which expenses are being calculated and reported. The period start date can be used to calculate the total expenses for rdf:type specific time period, such as rdf:type month or rdf:type quarter, and can help mortgage companies to track and analyze their expenses over time. The period start date is an important factor in determining the accuracy and completeness of expense reporting in mortgage banking."
        },
        "predicted_net_worth_amount": {
          "type": "decimal",
          "comment": "Predicted net worth amount refers to an estimate or projection of a person's net worth at some point in time. Net worth is determined based on Home Value, Age of head of household, dwelling size, & census level data.  The basis for the model was the Federal Reserve's Survey of Consumer Finance (SCF)."
        },
        "seasonal_income_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the amount of income is only earned during portion of the calendar year."
        }
      },
      "relationships": {
        "income_recipient": {
          "targets": [
            "person"
          ],
          "comment": "Identifies the individual who receives or is entitled to this income. "
        },
        "paid_by": {
          "targets": [
            "company",
            "person"
          ],
          "comment": "The 'paid_by' property specifies the company responsible for disbursing the income to the individual or company. It identifies the payer or source of the income, helping to provide clarity on the origin of the funds."
        },
        "sourced_from_employment": {
          "targets": [
            "employment"
          ],
          "comment": "This property indicates that the specified income is sourced or derived from a particular employment."
        },
        "sourced_from_property": {
          "targets": [
            "property"
          ],
          "comment": "A relationship that signifies a specific income is derived or sourced from a property. This relationship connects an income source to the property from which it originates."
        }
      }
    },
    {
      "type": "insurance",
      "container_name": "insurances",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "base_loan_amount": {
          "type": "decimal",
          "comment": "base loan amount in mortgage banking refers to the initial amount of money borrowed by a borrower, before any fees or additional costs are added. It is the principal amount of the loan and is used as the basis for calculating interest charges, monthly payments, and the overall cost of the loan. \n\nThe base loan amount is rdf:type key factor in determining the terms and conditions of rdf:type loan, including the interest rate, amortization period, and monthly payment amount. It is separate from any additional costs or fees, such as closing costs, origination fees, or prepaid interest, which are added to the base loan amount to arrive at the total loan amount."
        },
        "borrower_requested_interest_rate_percent": {
          "type": "decimal",
          "comment": "A borrower-requested interest rate percent is the interest rate that the borrower has requested for the mortgage.  Mortgage interest rate is the percentage of the loan amount that the borrower will pay to the lender as interest over the life of the loan. It is usually expressed as an annual percentage rate (APR) and can vary depending on a number of factors, such as the borrower's credit score, the size of the down payment, and the type of loan."
        },
        "coverage_amount": {
          "type": "decimal",
          "comment": "The coverage amount refers to the maximum amount of money that an insurance policy will pay out to cover damages or losses to a property. This amount is typically set by the policy holder when they purchase the insurance policy, and it represents the estimated cost to repair or replace the property in the event of damage or loss."
        },
        "coverage_description": {
          "type": "string",
          "comment": "A coverage description is a detailed explanation of what is covered under the policy and the circumstances under which a claim can be made. The coverage description will typically include information on the types of perils or events that are covered, as well as any exclusions or limitations that apply to the coverage."
        },
        "deductible_amount": {
          "type": "decimal",
          "comment": "A deductible amount refers to the portion of a claim that the policyholder is responsible for paying out of pocket before the insurance company will start to cover the costs of the claim. Deductibles are typically expressed as a specific dollar amount or as a percentage of the total insured value of the property."
        },
        "deductible_description": {
          "type": "string",
          "comment": "A deductible description is a detailed explanation of what the policyholder is responsible for paying out of pocket before the insurance company will start to cover the costs of the claim."
        },
        "escrow_indicator": {
          "type": "boolean",
          "comment": "The escrow_indicator identifies mortgages where the lender sets aside a portion of the monthly mortgage payment to cover the cost of insurance premiums. When a borrower takes out a mortgage loan to purchase a home, the lender may require the borrower to escrow, or set aside, funds to cover the cost of property insurance, such as homeowners insurance or hazard insurance."
        },
        "five_year_cost_comparison_amount": {
          "type": "decimal",
          "comment": "The five year cost comparison amount is the amount resulting from a calculation that compares the total cost of two different mortgages over a five-year period. It takes into account the interest rate, loan amount, and other costs associated with the mortgage, such as closing costs and fees. To calculate the five year cost comparison, you would take the total cost of each mortgage over a five-year period, including all principal, interest, and fees, and compare them to determine which option is more cost-effective."
        },
        "force_placed_by_servicer_indicator": {
          "type": "boolean",
          "comment": "A forced_place_by_servicer_indicator identifies mortgages where a mortgage servicer (lender) placed insurance on a property because the borrower (property owner) did not have sufficient insurance coverage in place. In a mortgage agreement, the lender may require the borrower to maintain adequate insurance coverage on the property to protect against damage or loss. If the borrower fails to maintain this insurance coverage, the lender may have the right to force place insurance to protect their interest in the property."
        },
        "housing_cost_over_five_years_amount": {
          "type": "decimal",
          "comment": "The housing cost over five years amount is the amount resulting from the calculation that adds up all of the costs associated with owning a home over a five-year period. This includes not only the mortgage payment, but also property taxes, insurance premiums, maintenance costs, and any other expenses related to home ownership. To calculate the housing cost over five years, you would first determine the total cost of the mortgage payment over that period of time, including principal and interest. Next, you would add in the cost of property taxes and insurance premiums, which are typically paid on an annual basis but can be divided by five to get an average annual cost. You would also factor in an estimate for maintenance and repair costs, which can vary depending on the age and condition of the home."
        },
        "investor_program_name_type": {
          "enum": [
            "PrimeRatePlus",
            "PaymentPower",
            "SettleAmerica",
            "Calpers",
            null
          ],
          "comment": "An investor program name type refers to a type of loan that is designed for real estate investors. These programs are often offered by lenders and are designed to meet the specific needs of investors who are looking to purchase, renovate, or refinance investment properties.",
          "type": [
            "string",
            "null"
          ]
        },
        "investor_program_name_type_other_description": {
          "type": "string",
          "comment": "An investor program name type (other) description refers to a description for a non-standard type of loan designed for real estate investors. Since this program type is non-standard, it is typically designated as an 'other' type."
        },
        "loan_identifier_type": {
          "enum": [
            "MersMin",
            "ServicerLoan",
            "WholesaleLenderLoan",
            "InvestorCommitment",
            "AgencyCase",
            "UniversalLoan",
            "SellerLoan",
            "InvestorLoan",
            "LoanPriceQuote",
            "InvestorContract",
            "LenderCase",
            "PoolIssuerLoan",
            "LenderLoan",
            "ServicerWorkoutCase",
            "SubservicerLoan",
            "PriceResponse",
            "MiRateQuote",
            "InvestorWorkoutCase",
            "NewServicerLoan",
            null
          ],
          "comment": "A loan identifier type is a unique identification code assigned to a mortgage loan by a lender or a loan servicer. The loan identifier is used to track the loan throughout its life cycle, from origination to servicing, and can be used to help identify the loan in various systems and databases. Some loan identifier types being used in the mortgage industry include a lender/servicer-assigned identifier, a universal loan identifier (ULI), Fannie Mae loan number and Freddie Mac loan number.",
          "type": [
            "string",
            "null"
          ]
        },
        "loan_identifier_type_other_description": {
          "type": "string",
          "comment": "A loan identifier type (other) description refers to a description for a non-standard type of loan identifier. Since the identifier is non-standard, it is typically designated as an 'other' type."
        },
        "policy_cancellation_date": {
          "type": "string",
          "format": "date",
          "comment": "An insurance policy cancellation date refers to the date on which an insurance policy is terminated or cancelled by either the insurance company or the policyholder."
        },
        "policy_effective_date": {
          "type": "string",
          "format": "date",
          "comment": "An insurance policy effective date is the date on which the insurance coverage begins. It is the date on which the policyholder's coverage is considered to be in force and the insurance company is obligated to pay for any covered losses or damages that occur after that date."
        },
        "policy_expiration_date": {
          "type": "string",
          "format": "date",
          "comment": "An insurance policy expiration date is the date on which an insurance policy ends and coverage under the policy ceases. The expiration date is typically specified in the policy documentation and is often one year from the date the policy was originally purchased or renewed."
        },
        "policy_identifier": {
          "type": "string",
          "comment": "An insurance policy identifier is a unique code or number that is assigned to an insurance policy to identify it within an insurance company's system. This identifier is used to track policy information, premiums paid, claims filed, and other important details related to the policy."
        },
        "policy_renewal_date": {
          "type": "string",
          "format": "date",
          "comment": "An insurance policy renewal date is the date on which an insurance policy comes up for renewal. Insurance policies typically have a fixed term, such as one year, and must be renewed at the end of that term to remain in effect."
        },
        "premium_amount": {
          "type": "decimal",
          "comment": "An insurance policy premium amount refers to the amount of money that an individual or business must pay to an insurance company in exchange for insurance coverage."
        },
        "rate_quote_all_product_indicator": {
          "type": "boolean",
          "comment": "The rate_quote_all_product_indicator identifies loans where the mortgage lender has provided a quote that includes interest rates and other terms for all of their financial products that may be available to a borrower. A rate quote typically includes information such as the interest rate, any fees or charges associated with the product, the term of the loan and the monthly payment amount."
        },
        "rate_quote_product_comparison_indicator": {
          "type": "boolean",
          "comment": "The rate_quote_product_comparison_indicator identifies loans where the mortgage lender has provided a rate quote that allows borrowers to compare different mortgage products based on the interest rates and fees associated with each loan option."
        },
        "rate_quote_type": {
          "enum": [
            "Estimated",
            "Detail",
            null
          ],
          "comment": "A rate quote type is a type of estimate provided by a lender that outlines the potential interest rate and other costs associated with a mortgage loan. It is often given to borrowers who are in the process of shopping for a mortgage and are looking for information on the rates and fees that may apply to a loan.",
          "type": [
            "string",
            "null"
          ]
        },
        "rate_quote_type_other_description": {
          "type": "string",
          "comment": "A rate quote type (other) description refers to a description for a non-standard type of rate quote. Since this rate quote type is non-standard, it is typically designated as an 'other' type."
        },
        "required_indicator": {
          "type": "boolean",
          "comment": "The required_indicator indicates that the lender requires the borrower to carry insurance for the property."
        },
        "second_deductible_amount": {
          "type": "decimal",
          "comment": "A second deductible amount is the highest amount a property owner will have to pay out of pocket if a specific kind of loss or damage occurs. Typically there is typically only one deductible amount that applies to each covered loss. However, in some cases, a policy may include multiple deductibles for different types of losses or damage. For example, a policy may have a separate deductible for wind damage, hail damage, and flood damage. In this case, the policyholder would be responsible for paying the applicable deductible for each type of damage that occurred."
        },
        "second_deductible_description": {
          "type": "string",
          "comment": "A second deductible description is a detailed explanation of the conditions under which a second deductible would apply."
        },
        "service_payer_type": {
          "type": "string",
          "comment": "A servicer payer type refers to the type of entity that is responsible for making payments on a loan or other financial obligation on behalf of another party. In the context of a mortgage, the servicer payer type is typically the borrower, who is responsible for making monthly payments to the loan servicer."
        },
        "subordinate_financing_is_new_indicator": {
          "type": "boolean",
          "comment": "When true indicates that subordinate financing is being created simultaneously with the subject loan."
        },
        "the_best_quote_indicator": {
          "type": "boolean",
          "comment": "The the_best_quote_indicator indicates that a borrower has received a best quote, or most favorable loan offer available, from a lender. When a borrower is shopping for a loan, they may receive multiple loan offers with different interest rates, terms, and fees. The best quote is the one that offers the lowest interest rate, the most favorable terms, and the lowest fees."
        },
        "third_deductible_amount": {
          "type": "decimal",
          "comment": "A third deductible amount is the highest amount a property owner will have to pay out of pocket if a specific kind of loss or damage occurs. Typically there is typically only one deductible amount that applies to each covered loss. However, in some cases, a policy may include multiple deductibles for different types of losses or damage. For example, a policy may have a separate deductible for wind damage, hail damage, and flood damage. In this case, the policyholder would be responsible for paying the applicable deductible for each type of damage that occurred."
        },
        "third_deductible_description": {
          "type": "string",
          "comment": "A third deductible description is a detailed explanation of the conditions under which a third deductible would apply."
        }
      },
      "relationships": {}
    },
    {
      "type": "interaction",
      "container_name": "interactions",
      "is_deprecated": true,
      "deprecated_properties": [
        "icebreaker_message",
        "icebreaker_message_obfuscated",
        "date",
        "icebreaker_message",
        "lead_interaction_type",
        "snoozed_until",
        "has_lead",
        "has_person"
      ],
      "properties": {
        "date": {
          "type": "dateTime",
          "comment": "The specific date on which the interaction occurred."
        },
        "ice_breaker_message_obfuscated": {
          "type": "string",
          "comment": "A version of the icebreaker message where sensitive or identifiable information has been obscured or replaced."
        },
        "ice_breaker_message_unobfuscated": {
          "type": "string",
          "comment": "The initial message or statement used to initiate or commence the interaction."
        },
        "icebreaker_message": {
          "type": "string",
          "comment": "The initial message or statement used to initiate or commence the interaction."
        },
        "icebreaker_message_obfuscated": {
          "type": "string",
          "comment": "A version of the icebreaker message where sensitive or identifiable information has been obscured or replaced."
        },
        "lead_interaction_type": {
          "enum": [
            "Unread",
            "Starred",
            "Read",
            "Snoozed",
            "Archived",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "snoozed_until": {
          "type": "dateTime"
        }
      },
      "relationships": {
        "has_lead": {
          "targets": [
            "lead"
          ],
          "comment": "Associates the interaction with a specific lead or prospective entity."
        },
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        }
      }
    },
    {
      "type": "interest",
      "container_name": "interests",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "interest_name": {
          "type": "string",
          "comment": "A label denoting the specific area or subject of the person's interest, such as 'music', 'traveling', or 'coding'."
        },
        "interest_score": {
          "type": "integer",
          "comment": "A score representing the intensity or level of passion a person has for the specified interest, with 1 being the lowest and 10 being the highest level of interest."
        }
      },
      "relationships": {}
    },
    {
      "type": "invocation_template",
      "container_name": "invocation_templates",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "invocation_category_type": {
          "type": "string",
          "comment": "The invocation category type is a classification that defines the nature or purpose of the function or service being invoked. It can help in categorizing the invocation based on its role or functionality within the application"
        },
        "invocation_code": {
          "type": "string",
          "comment": "The invocation code is a unique identifier or code associated with a specific invocation. It can be used to trace or reference a particular function or method call within a system, facilitating debugging, logging, or monitoring activities"
        },
        "invocation_message": {
          "type": "string",
          "comment": "The invocation message is a human-readable description or message related to the invocation. It can include information about the status, result, or any relevant details of the invocation, and is often used for logging or user notifications"
        }
      },
      "relationships": {}
    },
    {
      "type": "invocation",
      "container_name": "invocations",
      "is_deprecated": false,
      "deprecated_properties": [
        "request_collection_identifier",
        "response_collection_identifier",
        "product_api_identifier"
      ],
      "properties": {
        "focus_node_identifier": {
          "type": "string",
          "comment": "The focus_node_identifier is a unique reference or key that represents the primary entity or point of interest related to the invocation. It can be used to quickly identify and navigate to the main subject or target of the invocation within a broader system or dataset."
        },
        "invocation_category_type": {
          "type": "string",
          "comment": "The invocation category type is a classification that defines the nature or purpose of the function or service being invoked. It can help in categorizing the invocation based on its role or functionality within the application"
        },
        "invocation_code": {
          "type": "string",
          "comment": "The invocation code is a unique identifier or code associated with a specific invocation. It can be used to trace or reference a particular function or method call within a system, facilitating debugging, logging, or monitoring activities"
        },
        "invocation_message": {
          "type": "string",
          "comment": "The invocation message is a human-readable description or message related to the invocation. It can include information about the status, result, or any relevant details of the invocation, and is often used for logging or user notifications"
        },
        "invocation_status": {
          "enum": [
            "Timeout",
            "Failed",
            "ActionRequired",
            "Succeeded",
            "Canceled",
            null
          ],
          "comment": "An invocation status is the result or outcome of a function or service invocation, indicating whether the invocation was successful or not. When a function or service is invoked, it performs some action or computation, and the invocation status reflects whether that action was completed successfully or encountered an error.",
          "type": [
            "string",
            "null"
          ]
        },
        "invocation_timestamp": {
          "type": "dateTime",
          "comment": "An invocation timestamp is a timestamp that indicates the date and time when a particular function or service was invoked or called. This timestamp tracks the activity of a function or service and is used to determine when it was last executed. An invocation timestamp is generated automatically by the system at the time the function or service is called."
        },
        "message_parameters": {
          "type": "string",
          "comment": "Message parameters refer to the specific inputs or arguments that are passed to a function or method during an invocation. These parameters can be used to control the behavior of the function or to provide necessary data for its execution"
        }
      },
      "relationships": {
        "has_focus_node_identifier": {
          "targets": [
            "class"
          ],
          "comment": "Unique reference or key that represents the primary entity or point of interest related to the invocation. It can be used to quickly identify and navigate to the main subject or target of the invocation within a broader system or dataset."
        },
        "has_graph_entity": {
          "targets": [
            "graph_entity"
          ],
          "comment": "The 'has_graph_entity' property establishes a relationship between an invocation and a specific entity within a graph structure. This link can be used to represent the influence or impact of the invocation on various nodes or entities within a system's graph architecture"
        },
        "has_product": {
          "targets": [
            "product"
          ],
          "comment": "The 'has_product' property connects an invocation to a specific product or service that is being affected or manipulated through the invocation. This relationship can help in understanding the interaction between the invocation and the corresponding product"
        },
        "has_product_api": {
          "targets": [
            "product_api"
          ],
          "comment": "The 'has_product_api' property links an invocation to a specific product API that is being accessed or utilized during the invocation. This connection provides details about the API and its role in the invocation process"
        },
        "has_product_configuration": {
          "targets": [
            "product_configuration"
          ],
          "comment": "Product configuration refers to the process of customizing a product to meet specific customer needs and requirements."
        }
      }
    },
    {
      "type": "language",
      "container_name": "languages",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        },
        "prefix": {
          "type": "string",
          "comment": "RDF namespace URI for the language."
        }
      },
      "relationships": {}
    },
    {
      "type": "lead",
      "container_name": "leads",
      "is_deprecated": false,
      "deprecated_properties": [
        "has_address",
        "has_asset",
        "has_consumer_profile",
        "has_credit",
        "has_declaration",
        "has_employment",
        "has_expense",
        "has_government_monitoring",
        "has_interaction",
        "has_income",
        "has_liability",
        "has_liability_timeline",
        "has_license",
        "has_ownership",
        "has_residence",
        "has_subscription",
        "has_real_estate_agent_notes"
      ],
      "properties": {
        "lead_identifier": {
          "type": "string",
          "comment": "A lead identifier is a unique alphanumeric string used to identify a specific lead."
        },
        "lead_source": {
          "enum": [
            "OpenHouse",
            "EmployeeContact",
            "NetworkingEvent",
            "MailOut",
            "YardSign",
            "StaircaseWebsite",
            "Facebook",
            "Instagram",
            "Referral",
            "Zillow",
            "SMS",
            "PhoneCall",
            null
          ],
          "comment": "Indicates what is the source of this lead.",
          "type": [
            "string",
            "null"
          ]
        },
        "lead_type": {
          "enum": [
            "Buy",
            "Sell",
            null
          ],
          "comment": "Indicates if the lead represents an individual who wants to buy a property (Buy) or an individual who wants to sell a property (Sell).",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_address": {
          "targets": [
            "address"
          ],
          "comment": "Indicates a specific location or postal information."
        },
        "has_asset": {
          "targets": [
            "asset"
          ],
          "comment": "Relates to valuable resources or possessions."
        },
        "has_communication": {
          "targets": [
            "communication"
          ],
          "comment": "Refers to a means or method of communication."
        },
        "has_company": {
          "targets": [
            "company"
          ],
          "comment": "A company is a legal entity formed by a group of people or individuals for the purpose of carrying out a business or commercial activity."
        },
        "has_consumer_profile": {
          "targets": [
            "consumer_profile"
          ],
          "comment": "Associates a person with their detailed consumer profile, capturing their interests, purchasing behaviors, and other related preferences. This relationship enables a deeper understanding of the individual's consumer habits and potential buying tendencies."
        },
        "has_credit": {
          "targets": [
            "credit"
          ],
          "comment": "Credit refers to information about an individual's or organization's creditworthiness: their ability to borrow money with the promise of repaying the debt later, the amount of money they've borrowed but haven't repaid, and their history of repaying debt according to credit agreements."
        },
        "has_declaration": {
          "targets": [
            "declaration"
          ],
          "comment": "Indicates the association to declaration have been made or are associated with."
        },
        "has_document": {
          "targets": [
            "document"
          ],
          "comment": "A document is a written or printed record that contains information, data, or instructions in a fixed form that can be stored, transmitted, or communicated."
        },
        "has_employment": {
          "targets": [
            "employment",
            "employment"
          ],
          "comment": "Employment refers to the state of being employed, meaning a person has a job or occupation and is receiving compensation for their work."
        },
        "has_expense": {
          "targets": [
            "expense"
          ],
          "comment": "A cost incurred by the property as part of maintenance, rental, or another process."
        },
        "has_finance_relation": {
          "targets": [
            "finance_relation"
          ],
          "comment": "Links to financial relationships or transactions."
        },
        "has_government_monitoring": {
          "targets": [
            "government_monitoring"
          ],
          "comment": "Indicates oversight or surveillance by governmental entities."
        },
        "has_income": {
          "targets": [
            "income"
          ],
          "comment": "Refers to earnings or revenue sources."
        },
        "has_interaction": {
          "targets": [
            "interaction"
          ],
          "comment": "Relates to a communication or engagement between entities or systems."
        },
        "has_lead_person_relation": {
          "targets": [
            "lead_person_relation"
          ],
          "comment": "Represents the relationship between a person and a lead"
        },
        "has_liability": {
          "targets": [
            "liability"
          ],
          "comment": "Represents the financial obligations or debts that an individual or entity has, typically arising from borrowed funds, owed services, or other commitments. This relationship highlights the indebtedness and the financial responsibilities that need to be met"
        },
        "has_liability_timeline": {
          "targets": [
            "liability_timeline"
          ],
          "comment": "Maps the timeline of obligations or debts."
        },
        "has_license": {
          "targets": [
            "license"
          ],
          "comment": "Indicates the licenses possessed or required."
        },
        "has_listing": {
          "targets": [
            "listing"
          ],
          "comment": "Associates with a specific catalogued item or offer, typically for sale or trade."
        },
        "has_loan": {
          "targets": [
            "loan"
          ],
          "comment": "A loan timeline is a chronological record capturing the progression and changes of loan attributes over time."
        },
        "has_loan_timeline": {
          "targets": [
            "loan_timeline"
          ],
          "comment": "Associates a loan with its chronological record that captures the progression and changes of loan attributes over time."
        },
        "has_ownership": {
          "targets": [
            "ownership"
          ],
          "comment": "The ownership record associated with a person."
        },
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        },
        "has_property": {
          "targets": [
            "property"
          ],
          "comment": "Property is a piece of land and any structures or improvements that are permanently attached to it. In the context of property tax, a property can have a tax levied against it. The tax is usually assessed and collected by local governments, such as cities or counties, and is used to fund local services such as schools, police and fire departments, road maintenance, and other community services. "
        },
        "has_real_estate_agent_notes": {
          "targets": [
            "chat_message"
          ],
          "comment": "This property is used to link a lead to a real estate agent notes. Real estate agent will use Leads bot to add notes to a lead."
        },
        "has_residence": {
          "targets": [
            "residence"
          ],
          "comment": "Associates with a place of dwelling or habitation."
        },
        "has_subscription": {
          "targets": [
            "subscription"
          ],
          "comment": "Indicates that an entity is associated with or possesses a specific subscription."
        },
        "has_customer_contact": {
          "targets": [
            "customer_contact"
          ],
          "comment": "Describes details about an interaction with a customer."
        }
      }
    },
    {
      "type": "lead_person_relation",
      "container_name": "lead_person_relation",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "relation_role": {
          "enum": [
            "Buyer",
            "Seller",
            "Renter",
            "Landlord",
            "Investor",
            "Referral",
            "Co-buyer",
            "Co-seller",
            "Spouse",
            "Partner",
            "Family Member",
            "Legal Representative",
            "Financial Advisor",
            "Real Estate Agent",
            "Tenant",
            "Property Manager",
            null
          ],
          "comment": "Relation role defines the type of association between a person and the lead. Some examples of relation roles are seller, buyer, co-seller, co-buyer.",
          "type": [
            "string",
            "null"
          ]
        },
        "primary_contact": {
          "type": "boolean",
          "comment": "Primary contact indicates that this person is the main point of contact."
        }
      },
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        },
        "has_lead": {
          "targets": [
            "lead"
          ],
          "comment": "Associates the interaction with a specific lead or prospective entity."
        }
      }
    },
    {
      "type": "lease",
      "container_name": "lease",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "lease_identifier": {
          "type": "string",
          "comment": "A lease identifier is a unique code or number that is assigned to a specific lease agreement to help identify and track it within a database or system. The lease identifier can be alphanumeric and may include information such as the property address, tenant name, or lease start date."
        },
        "monthly_rate": {
          "type": "decimal",
          "comment": "Monthly rate refers to the amount of rent that is charged on a monthly basis for the use and occupancy of a property or space."
        }
      },
      "relationships": {}
    },
    {
      "type": "liability",
      "container_name": "liabilities",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "liability_current_rating_type": {
          "enum": [
            "AsAgreed",
            "BankruptcyOrWageEarnerPlan",
            "ChargeOff",
            "Collection",
            "CollectionOrChargeOff",
            "Foreclosure",
            "ForeclosureOrRepossession",
            "Late30Days",
            "Late60Days",
            "Late90Days",
            "LateOver120Days",
            "NoDataAvailable",
            "Repossession",
            "TooNew",
            "WageEarnerPlan",
            null
          ],
          "comment": "The liability account's current rating (as of Date Reported) for how timely the borrower has been making payments on this account.",
          "type": [
            "string",
            "null"
          ]
        },
        "credit_business_detail_type": {
          "enum": [
            "AdvertisingAgencies",
            "AdvertisingMiscellaneous",
            "AdvertisingNewsMedia",
            "AutomotiveAuctionsWholesale",
            "AutomotiveDealersNew",
            "AutomotiveDealersUsed",
            "AutomotiveFarmImplementDealers",
            "AutomotiveLeasing",
            "AutomotiveMiscellaneous",
            "AutomotiveParts",
            "AutomotiveRental",
            "AutomotiveRepairBodyShops",
            "AutomotiveServiceStations",
            "AutomotiveTbastoresTireDealers",
            "AutomotiveTruckDealers",
            "BankingAllBanks",
            "BankingBankcard",
            "BankingCommercialIndustrial",
            "BankingInstallmentLoansCreditLine",
            "BankingMiscellaneous",
            "BankingMortgageDepartment",
            "BankingSavingsBanks",
            "ClothingGeneral",
            "ClothingMiscellaneous",
            "ClothingSpecialtyShoeHatEtc",
            "CollectionServicesAcbofA",
            "CollectionServicesOther",
            "ContractorsGeneral",
            "ContractorsHomeImprovement",
            "ContractorsMiscellaneous",
            "ContractorsSubcontractors",
            "DepartmentAndMailOrderCompleteDepartmentStores",
            "DepartmentAndMailOrderMailOrderFirms",
            "DepartmentAndMailOrderMiscellaneous",
            "DepartmentAndMailOrderVarietyStores",
            "EmploymentServices",
            "FarmAndGardenSuppliesChemicalAndFertilizer",
            "FarmAndGardenSuppliesFeedAndSeed",
            "FarmAndGardenSuppliesMiscellaneous",
            "FarmAndGardenSuppliesNurseryAndLandscaping",
            "FinanceAutomobile",
            "FinanceBailBonds",
            "FinanceBrokerageAndInvestmentFirms",
            "FinanceBulkPurchase",
            "FinanceCreditUnions",
            "FinanceEducation",
            "FinanceFactoringCompanies",
            "FinanceMiscellaneous",
            "FinanceMortgageBrokers",
            "FinanceMortgageCompanies",
            "FinanceMortgageReporters",
            "FinancePersonalLoanCompanies",
            "FinanceSales",
            "FinanceSavingsAndLoanAssociations",
            "GovernmentCityAndCounty",
            "GovernmentFederal",
            "GovernmentMiscellaneous",
            "GovernmentState",
            "GroceryDairies",
            "GroceryMiscellaneous",
            "GroceryNeighborhood",
            "GrocerySupermarkets",
            "HomeFurnishingApplianceSalesAndService",
            "HomeFurnishingCarpetAndFloorCoverings",
            "HomeFurnishingElectronicsTelevisionAndRadio",
            "HomeFurnishingFurniture",
            "HomeFurnishingFurnitureRental",
            "HomeFurnishingInteriorDecoratorsDesign",
            "HomeFurnishingMiscellaneous",
            "HomeFurnishingMusicAndRecords",
            "InsuranceGeneral",
            "InsuranceLife",
            "InsuranceMiscellaneous",
            "JewelryAndCameraCameras",
            "JewelryAndCameraComputerSalesAndServices",
            "JewelryAndCameraJewelry",
            "JewelryAndCameraMiscellaneous",
            "JewelryAndCameraVideoTapeRentalAndSales",
            "LumberAndHardwareAirConditioningPlumbingElectrical",
            "LumberAndHardwareFixtureAndCabinet",
            "LumberAndHardwareLumberYards",
            "LumberAndHardwareMiscellaneous",
            "LumberAndHardwarePaintGlassAndPaper",
            "LumberAndHardwareStores",
            "MedicalAndHealthAnimalHospitals",
            "MedicalAndHealthChiropractors",
            "MedicalAndHealthDentists",
            "MedicalAndHealthDoctorsAndClinics",
            "MedicalAndHealthFuneralHomesAndCemeteries",
            "MedicalAndHealthHospitals",
            "MedicalAndHealthMedicalEquipment",
            "MedicalAndHealthMiscellaneous",
            "MedicalAndHealthOptometristsAndOpticalStores",
            "MedicalAndHealthOsteopaths",
            "MedicalAndHealthPharmaciesAndDrugs",
            "MedicalAndHealthVeterinarians",
            "MiscellaneousAuthenticationProducts",
            "MiscellaneousCreditBureaus",
            "MiscellaneousCreditReportBrokers",
            "MiscellaneousOther",
            "MiscellaneousRetail",
            "MiscellaneousServices",
            "MiscellaneousWholesale",
            "OilAndNationalCreditCardsAirlineTravelCards",
            "OilAndNationalCreditCardsCreditCardCompanies",
            "OilAndNationalCreditCardsMiscellaneous",
            "OilAndNationalCreditCardsOilCompanies",
            "PersonalServicesNotMedicalAccountants",
            "PersonalServicesNotMedicalBarbersBeautyShops",
            "PersonalServicesNotMedicalCountryClubsRestaurants",
            "PersonalServicesNotMedicalDetectiveInvestigativeServices",
            "PersonalServicesNotMedicalDryCleaningLaundry",
            "PersonalServicesNotMedicalEngineering",
            "PersonalServicesNotMedicalEquipmentLeasing",
            "PersonalServicesNotMedicalFlorists",
            "PersonalServicesNotMedicalHealthAndFitnessClubs",
            "PersonalServicesNotMedicalLegal",
            "PersonalServicesNotMedicalMiscellaneous",
            "PersonalServicesNotMedicalPestControl",
            "PersonalServicesNotMedicalPhotographers",
            "RealEstateAndPublicAccommodationApartments",
            "RealEstateAndPublicAccommodationHotels",
            "RealEstateAndPublicAccommodationMiscellaneous",
            "RealEstateAndPublicAccommodationMobileHomes",
            "RealEstateAndPublicAccommodationMotels",
            "RealEstateAndPublicAccommodationOfficeLeasing",
            "RealEstateAndPublicAccommodationPropertyManagement",
            "RealEstateAndPublicAccommodationRealEstateSales",
            "SportingGoodsAircraftSalesAndService",
            "SportingGoodsBoatAndMarinas",
            "SportingGoodsMiscellaneous",
            "SportingGoodsMotorcycleAndBicycle",
            "SportingGoodsStores",
            "UtilitiesAndFuelCableSatelliteCompanies",
            "UtilitiesAndFuelCoalAndWoodDealers",
            "UtilitiesAndFuelElectricalLightAndPower",
            "UtilitiesAndFuelFuelOilDealers",
            "UtilitiesAndFuelGarbageAndRubbishDisposals",
            "UtilitiesAndFuelGasNaturalAndBottled",
            "UtilitiesAndFuelMiscellaneous",
            "UtilitiesAndFuelTelephoneCompanies",
            "UtilitiesAndFuelWaterCompanies",
            "WholesaleAutomotiveSupplies",
            "WholesaleBuildingAndHardwareSupply",
            "WholesaleClothingAndDryGoods",
            "WholesaleCreditCardProcessing",
            "WholesaleDrugsAndChemicals",
            "WholesaleGroceries",
            "WholesaleHomeFurnishings",
            "WholesaleMachineryAndEquipment",
            "WholesaleMiscellaneous",
            null
          ],
          "comment": "Details about the type of business that has extended a line of credit or loan to a borrower.",
          "type": [
            "string",
            "null"
          ]
        },
        "home_equity_line_of_credit_heloc_maximum_balance_amount": {
          "type": "decimal"
        },
        "liability_account_status_type": {
          "enum": [
            "Closed",
            "Frozen",
            "Open",
            "Paid",
            "Refinanced",
            "Transferred",
            null
          ],
          "comment": "The status of the liability account (e.g. open, closed).",
          "type": [
            "string",
            "null"
          ]
        },
        "liability_highest_adverse_rating_type": {
          "enum": [
            "AsAgreed",
            "BankruptcyOrWageEarnerPlan",
            "ChargeOff",
            "Collection",
            "CollectionOrChargeOff",
            "Foreclosure",
            "ForeclosureOrRepossession",
            "Late30Days",
            "Late60Days",
            "Late90Days",
            "LateOver120Days",
            "NoDataAvailable",
            "Repossession",
            "TooNew",
            "WageEarnerPlan",
            null
          ],
          "comment": "The liability accounts highest (or worst) rating type for how timely the borrower has been making payments on this account.",
          "type": [
            "string",
            "null"
          ]
        },
        "liability_terms_source_type": {
          "enum": [
            "Calculated",
            "Provided",
            null
          ],
          "comment": "The source of the terms established for repayment of a loan.",
          "type": [
            "string",
            "null"
          ]
        },
        "credit_business_type": {
          "enum": [
            "Advertising",
            "Automotive",
            "Banking",
            "Clothing",
            "CollectionServices",
            "Contractors",
            "DepartmentAndMailOrder",
            "Employment",
            "FarmAndGardenSupplies",
            "Finance",
            "Government",
            "Grocery",
            "HomeFurnishing",
            "Insurance",
            "JewelryAndCamera",
            "LumberAndHardware",
            "MedicalAndHealth",
            "Miscellaneous",
            "MiscellaneousAndPublicRecord",
            "OilAndNationalCreditCards",
            "PersonalServicesNotMedical",
            "RealEstateAndPublicAccommodation",
            "SportingGoods",
            "UtilitiesAndFuel",
            "Wholesale",
            null
          ],
          "comment": "The type of business that has extended a line of credit or loan to a borrower.",
          "type": [
            "string",
            "null"
          ]
        },
        "liability_loan_type": {
          "enum": [
            "Agriculture",
            "Airplane",
            "ApplianceOrFurniture",
            "AttorneyFees",
            "AutoLease",
            "AutoLoanEquityTransfer",
            "AutoRefinance",
            "Automobile",
            "BiMonthlyMortgageTermsInYears",
            "Boat",
            "Business",
            "BusinessCreditCard",
            "Camper",
            "ChargeAccount",
            "CheckCreditOrLineOfCredit",
            "ChildSupport",
            "Collection",
            "CollectionAttorney",
            "Comaker",
            "CombinedCreditPlan",
            "CommercialCreditObligation",
            "CommercialLineOfCredit",
            "CommercialMortgage",
            "ConditionalSalesContract",
            "ConditionalSalesContractRefinance",
            "Consolidation",
            "ConstructionLoan",
            "ConventionalRealEstateMortgage",
            "CreditCard",
            "CreditLineSecured",
            "DebitCard",
            "DebtCounselingService",
            "DeferredStudentLoan",
            "DepositRelated",
            "Educational",
            "Employment",
            "FactoringCompanyAccount",
            "FamilySupport",
            "FarmersHomeAdministrationFHMA",
            "FederalConsolidatedLoan",
            "FhaComakerNotBorrower",
            "FhaHomeImprovement",
            "FhaRealEstateMortgage",
            "FinanceStatement",
            "GovernmentBenefit",
            "GovernmentEmployeeAdvance",
            "GovernmentFeeForService",
            "GovernmentFine",
            "GovernmentGrant",
            "GovernmentMiscellaneousDebt",
            "GovernmentOverpayment",
            "GovernmentSecuredDirectLoan",
            "GovernmentSecuredGuaranteeLoan",
            "GovernmentUnsecuredDirectLoan",
            "GovernmentUnsecuredGuaranteeLoan",
            "HomeEquity",
            "HomeEquityLineOfCredit",
            "HomeImprovement",
            "HouseholdGoods",
            "HouseholdGoodsAndOtherCollateralAuto",
            "HouseholdGoodsSecured",
            "InstallmentLoan",
            "InstallmentSalesContract",
            "InsuranceClaims",
            "Lease",
            "LenderPlacedInsurance",
            "ManualMortgage",
            "ManufacturedHome",
            "MedicalDebt",
            "MobileHome",
            "MobilePhone",
            "Mortgage",
            "NoteLoan",
            "NoteLoanWithComaker",
            "PartiallySecured",
            "PersonalLoan",
            "RealEstateJuniorLiens",
            "RealEstateLoanEquityTransfer",
            "RealEstateMortgageWithoutOtherCollateral",
            "RealEstateSpecificTypeUnknown",
            "Recreational",
            "RecreationalVehicle",
            "Refinance",
            "RefundAnticipationLoan",
            "RentalAgreement",
            "ResidentialLoan",
            "ReturnedCheck",
            "RevolvingBusinessLines",
            "SecondMortgage",
            "Secured",
            "SecuredByCosigner",
            "SecuredCreditCard",
            "SecuredHomeImprovement",
            "SemiMonthlyMortgagePayment",
            "SinglePaymentLoan",
            "SpouseSupport",
            "SummaryOfAccountsWithSameStatus",
            "TimeSharedLoan",
            "Title1Loan",
            "UnknownLoanType",
            "Unsecured",
            "UtilityCompany",
            "VeteransAdministrationLoan",
            "VeteransAdministrationRealEstateMortgage",
            null
          ],
          "comment": "The type of loan associated with the liability.",
          "type": [
            "string",
            "null"
          ]
        },
        "integrated_disclosure_section_type": {
          "enum": [
            "ServicesYouCanShopFor",
            "DueFromSellerAtClosing",
            "PaidAlreadyByOrOnBehalfOfBorrowerAtClosing",
            "InitialEscrowPaymentAtClosing",
            "Prepaids",
            "ServicesYouCannotShopFor",
            "TaxesAndOtherGovernmentFees",
            "TotalOtherCosts",
            "DueFromBorrowerAtClosing",
            "OtherCosts",
            "PayoffsAndPayments",
            "TotalLoanCosts",
            "ServicesBorrowerDidNotShopFor",
            "ServicesBorrowerDidShopFor",
            "TotalClosingCosts",
            "OriginationCharges",
            "DueToSellerAtClosing",
            null
          ],
          "comment": "Refers to a specific category of closing costs such as prepaids and services you can shop for. This section type appears on a closing costs integrated disclosure.",
          "type": [
            "string",
            "null"
          ]
        },
        "integrated_disclosure_section_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to capture additional information when Other is selected for Integrated Disclosure Section Type."
        },
        "liability_account_identifier": {
          "type": "string",
          "comment": "A unique alphanumeric string identifying the liability."
        },
        "liability_account_opened_date": {
          "type": "string",
          "format": "date",
          "comment": "The date the liability account was opened."
        },
        "liability_account_ownership_type": {
          "type": "string",
          "comment": "The ownership relation of the borrower to the liability account (e.g. are they solely responsible, jointly responsible, etc.)"
        },
        "liability_account_reported_date": {
          "type": "string",
          "format": "date",
          "comment": "The date that the report regarding the liability account was produced."
        },
        "liability_current_rating_code": {
          "type": "string",
          "comment": "The liability account's current code (as of Date Reported) for how timely the borrower has been making payments on this account. This is also known as the Manner of Payment (MOP)."
        },
        "liability_days_late_count_ninety": {
          "type": "integer",
          "comment": "The number of of times a payment on a liability account was at least ninety days late."
        },
        "liability_days_late_count_sixty": {
          "type": "integer",
          "comment": "The number of of times a payment on a liability account was at least sixty days late."
        },
        "liability_days_late_count_thirty": {
          "type": "integer",
          "comment": "The number of of times a payment on a liability account was at least thirty days late."
        },
        "liability_description": {
          "type": "string",
          "comment": "A text description that further defines the Liability. This could be used to describe the job related expenses."
        },
        "liability_exclusion_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the liability is to be excluded from inclusion in calculations associated with processing the loan."
        },
        "liability_high_balance_amount": {
          "type": "decimal",
          "comment": "The highest amount of unpaid credit ever recorded on the liability as of the liability account reported date."
        },
        "liability_highest_adverse_rating_code": {
          "type": "string",
          "comment": "The liability accounts highest (or worst) rating code for how timely the borrower has been making payments on this account."
        },
        "liability_monthly_payment_amount": {
          "type": "decimal",
          "comment": "The dollar amount of the monthly payment required on borrower's Liability Type."
        },
        "liability_months_reviewed_count": {
          "type": "integer",
          "comment": "The number of months of account history reported by the liability holder. This is the period over which Late Counts are accumulated."
        },
        "liability_most_recent_adverse_rating_type": {
          "type": "string",
          "comment": "The type of adverse rating most recently assigned to the liability."
        },
        "liability_payment_includes_taxes_and_insurance_indicator": {
          "type": "boolean"
        },
        "liability_payment_includes_taxes_insurance_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the mortgage liability payment includes taxes and/or insurance in addition to principal and interest."
        },
        "liability_payment_pattern_data_text": {
          "type": "string",
          "comment": "This is a set of previous monthly payment ratings beginning with the Payment Pattern Start Date. C=Current, 1-6=# Months Late, 7=Wage Earner Plan, 8=Repossession, 9=Collection, N=No Activity, X=No Data."
        },
        "liability_payment_pattern_start_date": {
          "type": "string",
          "format": "date",
          "comment": "The start date for the liability account payment pattern."
        },
        "liability_payoff_status_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the liability will be paid off at or before closing."
        },
        "liability_payoff_with_current_assets_indicator": {
          "type": "boolean",
          "comment": "Indicates a liability is to be paid using borrower's current assets, prior to closing, and not out of cash from closing."
        },
        "liability_prior_adverse_rating_type": {
          "type": "string",
          "comment": "The prior type of adverse rating assigned to the liability."
        },
        "liability_terms_description": {
          "type": "string",
          "comment": "The payment terms for the liability."
        },
        "liability_terms_months_count": {
          "type": "integer",
          "comment": "The total number of months established as terms for repayment of a loan."
        },
        "liability_to_be_paid_off_indicator": {
          "type": "boolean",
          "comment": "liability to be paid off indicator in mortgage banking refers to the status of a mortgage loan that is expected to be paid in full, either through regular payments by the borrower or through refinancing. \n\nThis indicator is used to track the status of the loan and to determine when the liability associated with it will be fully satisfied. In mortgage banking, the \"liability to be paid off\" indicator is a crucial piece of information that helps lenders and investors make informed decisions about the loans they hold or are considering acquiring."
        },
        "liability_to_be_resubordinated_indicator": {
          "type": "boolean"
        },
        "liability_type": {
          "enum": [
            "Garnishments",
            "MortgageLoan",
            "CollectionsJudgmentsAndLiens",
            "Open30DayChargeAccount",
            "PersonalLoan",
            "BorrowerEstimatedTotalMonthlyLiabilityPayment",
            "Installment",
            "Taxes",
            "LeasePayment",
            "UnsecuredHomeImprovementLoanRevolving",
            "TaxLien",
            "Revolving",
            "FirstPositionMortgageLien",
            "Heloc",
            "DeferredStudentLoan",
            "DelinquentTaxes",
            "MonetaryJudgment",
            "SecondPositionMortgageLien",
            "UnsecuredHomeImprovementLoanInstallment",
            "ThirdPositionMortgageLien",
            "HomeownersAssociationLien",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "liability_type_other_description": {
          "type": "string",
          "comment": "Specifies the other liability type when Other is selected."
        },
        "number_active_credit_lines": {
          "type": "integer",
          "comment": "Active credit lines refers to the number of lines of credit that an individual has, where a credit line is a flexible and pre-approved borrowing arrangement offered by a bank or credit union."
        },
        "subject_loan_resubordination_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the liability will be re-subordinated to the subject loan after closing."
        }
      },
      "relationships": {
        "derived_from_loan": {
          "targets": [
            "loan"
          ],
          "comment": "A relationship indicating that a particular financial obligation or liability originates from a specific loan or borrowing agreement. This relationship establishes the source of the liability and traces it back to its initial financial arrangement, demonstrating the reason for the obligation's existence."
        },
        "has_credit_comment": {
          "targets": [
            "credit_comment"
          ],
          "comment": "A comment about a credit liability provided by a credit bureau (Equifax, Experian, TransUnion), a lender or other source."
        },
        "has_liability_holder": {
          "targets": [
            "person"
          ]
        },
        "has_liability_timeline": {
          "targets": [
            "liability_timeline"
          ],
          "comment": "Maps the timeline of obligations or debts."
        },
        "has_payoff": {
          "targets": [
            "payoff"
          ],
          "comment": "Details about the act of repaying the entire outstanding balance of a loan, including any principal, interest, and fees, to the lender."
        },
        "owed_by": {
          "targets": [
            "person"
          ],
          "comment": "The person who owes the creditor."
        },
        "owed_to": {
          "targets": [
            "company"
          ],
          "comment": "The company that extended credit to the borrower."
        }
      }
    },
    {
      "type": "liability_timeline",
      "container_name": "liability_timelines",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "liability_remaining_term_months_count": {
          "type": "integer",
          "comment": "The number of months the borrower must make payments in order to satisfy the identified liability. Collected on the URLA in Section VI (Liabilities - Mos. Left to Pay)."
        },
        "liability_unpaid_balance_amount": {
          "type": "decimal",
          "comment": "The amount of the outstanding balance for a Liability Type."
        },
        "number_of_payments_remaining_count": {
          "type": "integer"
        },
        "remaining_term_in_months_count": {
          "type": "integer"
        }
      },
      "relationships": {}
    },
    {
      "type": "license",
      "container_name": "licenses",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "license_authority_level_type": {
          "enum": [
            "Private",
            "PublicState",
            "PublicLocal",
            "PublicFederal",
            null
          ],
          "comment": "An automobile type is the type or category to which an automobile belongs. (e.g., sedan, SUV, pickup).",
          "type": [
            "string",
            "null"
          ]
        },
        "license_authority_level_type_other_description": {
          "type": "string",
          "comment": "If license authority level type is 'other,' license authority level type other description provides more details on the license authority level type."
        },
        "license_exempt_indicator": {
          "type": "boolean",
          "comment": "License_exempt_indicator indicates whether the party is exempt from specific licensing requirement(s) or not."
        },
        "license_expiration_date": {
          "type": "string",
          "format": "date",
          "comment": "license expiration date indicates the date that the license expires."
        },
        "license_identifier": {
          "type": "string",
          "comment": "A license identifier is a unique code or number assigned to a license for identification purposes. It is often used in various administrative and legal systems to ensure accuracy and consistency in record-keeping and data management."
        },
        "license_issue_date": {
          "type": "string",
          "format": "date",
          "comment": "license issue date indicates the date that the license was issued."
        },
        "license_issuing_authority_name": {
          "type": "string",
          "comment": "license issuing authority name is the name of the authority that issued the license."
        },
        "license_issuing_state_code": {
          "type": "string",
          "comment": "license issuing authority state code is code for the state where the licensing authority is located in."
        },
        "license_issuing_state_name": {
          "type": "string",
          "comment": "license issuing authority state name is the name of the state where the licensing authority is located in."
        },
        "sequence_number": {
          "type": "string",
          "comment": "An address sequence number is a unique numerical identifier assigned to an address within a specific sequence or order. It is used to indicate the position or sequence of an address within a given range or list."
        }
      },
      "relationships": {}
    },
    {
      "type": "listing_timeline",
      "container_name": "listing_timelines",
      "is_deprecated": true,
      "deprecated_properties": [
        "price_date",
        "status_date",
        "price_type",
        "listing_status_type",
        "listing_status_type_other_description",
        "price_amount"
      ],
      "properties": {
        "listing_status_type": {
          "enum": [
            "Contract",
            "Expired",
            "SettledSale",
            "Leased",
            "Rented",
            "Withdrawn",
            "Sold",
            "Active",
            null
          ],
          "comment": "The status of the listing",
          "type": [
            "string",
            "null"
          ]
        },
        "listing_status_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for the ListingStatusType."
        },
        "price_amount": {
          "type": "decimal",
          "comment": "The amount at which the property was listed or adjusted to at a specific point in time."
        },
        "price_date": {
          "type": "string",
          "format": "date",
          "comment": "The date when a specific price was set or adjusted for the listing."
        },
        "price_type": {
          "enum": [
            "AcceptedOffer",
            "ForeclosureSale",
            "MinSold",
            "ShortSale",
            "AuctionWinningBid",
            "Max",
            "FinalListed",
            "Reduced",
            "BuyItNow",
            "Relisted",
            "Change",
            "Sold",
            "AssessedValue",
            "FairMarket",
            "InitialListing",
            "AuctionStart",
            "Appraised",
            "AverageListing",
            null
          ],
          "comment": "Enumerated values indicating the nature of the price",
          "type": [
            "string",
            "null"
          ]
        },
        "status_date": {
          "type": "string",
          "format": "date",
          "comment": "The date when the status of the listing was updated or changed."
        }
      },
      "relationships": {}
    },
    {
      "type": "listing_term",
      "container_name": "listing_terms",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "listing_term_type": {
          "enum": [
            "ConventionalLoan",
            "VALoan",
            "FHALoan",
            "Cash",
            null
          ],
          "comment": "Refers to a condition or type of financing that a seller is willing to accept from a buyer when selling a property.",
          "type": [
            "string",
            "null"
          ]
        },
        "listing_term_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the listing term type."
        }
      },
      "relationships": {}
    },
    {
      "type": "listing",
      "container_name": "listings",
      "is_deprecated": false,
      "deprecated_properties": [
        "listing_term_type",
        "listing_term_type_other_description",
        "commission_type",
        "commission_type_other_description",
        "commission_percentage"
      ],
      "properties": {
        "listed_date": {
          "type": "string",
          "format": "date",
          "comment": "The date when the property was listed for sale."
        },
        "deals_home_indicator": {
          "type": "boolean",
          "comment": "Indicates if the listing is marked as deal or no."
        },
        "featured_home_indicator": {
          "type": "boolean",
          "comment": "Indicates if the listing is marked as featured or no."
        },
        "staircase_discount_price_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "Refers to the sale price of a property after applying a discount based on Staircase's commission rate compared to the buyer's commission rate."
        },
        "broker_cancellation_fee_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "Refers to the amount the broker will be paid if the lease agreement is canceled."
        },
        "broker_cancellation_fee_indicator": {
          "type": "boolean",
          "comment": "Indicates if the broker will receive a cancellation fee."
        },
        "broker_compensation_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "Broker Compensation Amount refers to the fixed monetary amount that a real estate broker earns as a commission upon successfully completing a sale or lease of a property."
        },
        "broker_compensation_indicator": {
          "type": "boolean",
          "comment": "Indicates if the broker will receive compensation."
        },
        "broker_compensation_percentage": {
          "restrictions": {
            "fractionDigits": 3,
            "totalDigits": 6
          },
          "type": "decimal",
          "comment": "Broker Compensation Percentage refers to the commission percentage that a real estate broker earns upon successfully completing a sale or lease of a property."
        },
        "broker_compensation_transfer_days": {
          "type": "integer",
          "comment": "Compensation Transfer Days refer to the number of days within which the broker's commission or compensation must be transferred to the broker after a transaction is completed."
        },
        "broker_compensation_transfer_indicator": {
          "type": "boolean",
          "comment": "Indicates if there are a set number of days in which compensation must be transferred to the broker."
        },
        "broker_deposit_fee_indicator": {
          "type": "boolean",
          "comment": "Indicates if the broker will receive a deposit fee."
        },
        "broker_deposit_fee_percentage": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 3,
            "totalDigits": 10
          },
          "comment": "Specifies the broker's compensation in the event that a property sale or lease does not go through and the deposit paid by the buyer or lessee is retained by the owner or seller."
        },
        "broker_leasing_fee_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "Refers to the amount the broker will be paid for successfully leasing the property."
        },
        "broker_leasing_fee_indicator": {
          "type": "boolean",
          "comment": "Indicates if the broker will receive a leasing fee."
        },
        "buy_side_commission": {
          "restrictions": {
            "fractionDigits": 3,
            "totalDigits": 6
          },
          "type": "decimal",
          "comment": "Percent of commmission that will be paid as part of a real estate transaction."
        },
        "commission_percentage": {
          "restrictions": {
            "fractionDigits": 3,
            "totalDigits": 6
          },
          "type": "decimal",
          "comment": "Percent of commmission that will be paid as part of a real estate transaction."
        },
        "commission_type": {
          "enum": [
            "BuyerAgent",
            "TransBrk",
            "NonRep",
            null
          ],
          "comment": "Refers to a type of commmission that will be paid as part of a real estate transaction.",
          "type": [
            "string",
            "null"
          ]
        },
        "commission_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the commission type."
        },
        "conditional_termination_agreement_indicator": {
          "type": "boolean",
          "comment": "Indicates if a termination of a listing agreement must abide by conditions."
        },
        "cumulative_days_on_market_count": {
          "type": "integer",
          "comment": "The total number of days a property is on the market unsold - inclusive of all listing status change dates, from the original listing date to time the listing is selected for the valuation report."
        },
        "current_list_price_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "Current list price (e.g. of the property)."
        },
        "currently_listed_indicator": {
          "type": "boolean",
          "comment": "Indicates that the property is currently listed for sale in MLS."
        },
        "price_reduced_days_count": {
          "type": "integer",
          "comment": "The number of days since the last price reduction."
        },
        "last_list_price_revision_days_count": {
          "type": "integer",
          "comment": "The number of days since the last list price revision."
        },
        "days_on_market_count": {
          "type": "integer",
          "comment": "The total number of days on the property has been on the market from the last material status date to the time listing selected for the valuation."
        },
        "exclusive_brokerage_listing_agreement_indicator": {
          "type": "boolean",
          "comment": "Refers to a contract between a property owner and a real estate broker where the broker is given the exclusive right to act as the seller's agent in marketing the property."
        },
        "exclusive_right_of_sale_listing_agreement_indicator": {
          "type": "boolean",
          "comment": "Refers to a contract between a property owner (seller) and a real estate broker that grants the broker the exclusive right to sell the property."
        },
        "exclusive_right_to_lease_agreement_indicator": {
          "type": "boolean",
          "comment": "Refers to a contract between a property owner and a real estate broker that grants the broker the exclusive right to lease the property."
        },
        "final_list_price_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "The final list price of the property."
        },
        "sold_price_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "The sold price price of the property."
        },
        "for_sale_by_owner_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the property is for sale by owner."
        },
        "gross_lease_value_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "Gross Lease Value refers to the total monetary value of a lease agreement over its entire term."
        },
        "gross_lease_value_percentage": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 3,
            "totalDigits": 10
          },
          "comment": "Gross Lease Value Percentage refers to a percentage of the total gross lease value that is used to calculate certain financial aspects of the lease."
        },
        "last_list_price_revision_date": {
          "type": "string",
          "format": "date",
          "comment": "The most recent date when the property list price was revised."
        },
        "list_price_reduced_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "The amount by which a property list price has been reduced."
        },
        "listed_within_previous_year_description": {
          "type": "string",
          "comment": "A free-form text describing the offering prices, dates, and data sources of the previous twelve (12) months of listing"
        },
        "listed_within_previous_year_indicator": {
          "type": "boolean",
          "comment": "Indicates that the property has been listed within the previous twelve (12) months"
        },
        "listing_agreement_price_terms": {
          "type": "string",
          "comment": "Listing Agreement Price Terms refer to the specific conditions and details related to the pricing of a property as outlined in a real estate listing agreement."
        },
        "listing_agreement_price_terms_indicator": {
          "type": "boolean",
          "comment": "Indicates if there are price terms associated with the listing agreement."
        },
        "listing_agreement_termination_date": {
          "type": "string",
          "format": "date",
          "comment": "A specific date on which a real estate listing agreement between a property owner (seller or landlord) and a real estate broker or agent comes to an end."
        },
        "listing_agreement_termination_date_indicator": {
          "type": "boolean",
          "comment": "Indicates if there is a specific date on which a real estate listing agreement between a property owner (seller or landlord) and a real estate broker or agent comes to an end."
        },
        "listing_identifier": {
          "type": "string",
          "comment": "A unique identifier for a listing, typically used in real estate or classified advertisements."
        },
        "listing_property_description": {
          "type": "string",
          "comment": "A detailed narrative that provides potential buyers or renters with essential information about a property."
        },
        "listing_status_date": {
          "type": "string",
          "format": "date",
          "comment": "The disposition date related to the Listing Status Type."
        },
        "listing_sold_date": {
          "type": "string",
          "format": "date",
          "comment": "The date when the property was sold."
        },
        "original_list_price_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "The original list price of the property."
        },
        "listing_status_type": {
          "enum": [
            "ComingSoon",
            "Contract",
            "Expired",
            "SettledSale",
            "Closed",
            "Canceled",
            "Pending",
            "TemporaryOffMarket",
            "Leased",
            "Rented",
            "Withdrawn",
            "Sold",
            "Active",
            null
          ],
          "comment": "The status of the listing",
          "type": [
            "string",
            "null"
          ]
        },
        "listing_status_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for the ListingStatusType."
        },
        "listing_price_type": {
          "enum": [
            "AcceptedOffer",
            "ForeclosureSale",
            "MinSold",
            "ShortSale",
            "AuctionWinningBid",
            "Max",
            "FinalListed",
            "Reduced",
            "BuyItNow",
            "Relisted",
            "Change",
            "Sold",
            "AssessedValue",
            "FairMarket",
            "InitialListing",
            "AuctionStart",
            "Appraised",
            "AverageListing",
            null
          ],
          "comment": "Enumerated values indicating the nature of the price",
          "type": [
            "string",
            "null"
          ]
        },
        "listing_term_type": {
          "enum": [
            "ConventionalLoan",
            "VALoan",
            "FHALoan",
            "Cash",
            null
          ],
          "comment": "Refers to a condition or type of financing that a seller is willing to accept from a buyer when selling a property.",
          "type": [
            "string",
            "null"
          ]
        },
        "listing_term_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the listing term type."
        },
        "mls_area_major": {
          "type": "string",
          "comment": "MLS Area Major refers to a major specific geographic region or zone defined by the Multiple Listing Service (MLS) to categorize and organize real estate listings."
        },
        "mls_area_minor": {
          "type": "string",
          "comment": "MLS Area Minor refers to a minor specific geographic region or zone defined by the Multiple Listing Service (MLS) to categorize and organize real estate listings."
        },
        "mls_broker_remarks": {
          "type": "string",
          "comment": "Broker remarks in an MLS (Multiple Listing Service) listing refer to the descriptive text a broker writes to highlight the features and benefits of a property."
        },
        "mls_number_identifier": {
          "type": "string",
          "comment": "Identifies the record number in the local MLS from which the listing was obtained."
        },
        "possession_terms": {
          "type": "string",
          "comment": "Possession terms refer to the conditions and timing related to when the buyer can take physical possession of the property after the sale is completed."
        },
        "property_forecast_sale_price_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "The dollar value of the forecast sales price of the subject property."
        },
        "property_typical_marketing_days_duration_type": {
          "enum": [
            "Under30Days",
            "30to120days",
            "Over120Days",
            null
          ],
          "comment": "Enumerations representing the typical duration of days a property of this type remains on the market",
          "type": [
            "string",
            "null"
          ]
        },
        "sell_side_commission": {
          "restrictions": {
            "fractionDigits": 3,
            "totalDigits": 6
          },
          "type": "decimal",
          "comment": "Commission Transaction Broker."
        },
        "short_sale_offering_type": {
          "enum": [
            "Preapproved",
            "Requested",
            null
          ],
          "comment": "The type of short sale offering",
          "type": [
            "string",
            "null"
          ]
        },
        "short_sale_offering_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for Short Sale Offering Type."
        },
        "special_listing_conditions": {
          "type": "string",
          "comment": "Special listing conditions refer to specific terms or circumstances under which a property is being sold."
        },
        "special_listing_conditions_indicator": {
          "type": "boolean",
          "comment": "Indicates if there are special conditions associated with a listing agreement."
        },
        "unconditional_termination_agreement_indicator": {
          "type": "boolean",
          "comment": "Indicates if a termination of a listing agreement does not have any conditions it must abide by."
        }
      },
      "relationships": {
        "has_agent": {
          "targets": [
            "person"
          ],
          "comment": "Associates the listing with a specific real estate agent or broker who represents or manages the property listing"
        },
        "has_agent_company": {
          "targets": [
            "company"
          ],
          "comment": "Links the listing to a specific real estate agency or company under which the agent operates or is affiliated"
        },
        "has_customer_contact": {
          "targets": [
            "customer_contact"
          ],
          "comment": "Contains details about an interaction with a customer."
        },
        "has_listing_timeline": {
          "targets": [
            "listing_timeline"
          ],
          "comment": "Links the listing to its chronological record detailing changes or events related to the listing status, price adjustments, or other relevant updates."
        },
        "has_offering_history": {
          "targets": [
            "offering"
          ],
          "comment": "Relates the listing to its offering history, detailing past offers and conditions"
        },
        "has_open_house": {
          "targets": [
            "open_house"
          ],
          "comment": "An event organized by the listing agent or broker where a property that’s for sale is opened to the public for viewing."
        },
        "has_property": {
          "targets": [
            "property"
          ],
          "comment": "Property is a piece of land and any structures or improvements that are permanently attached to it. This includes residential, commercial, and industrial buildings, as well as natural resources such as water, minerals, and crops that are located on the land. A person can have property and be considered a property owner. If the person owns the property outright, it is a financial asset. If the person has taken out a loan to purchase the property, it is a financial debt because it represents money that they have borrowed from the lender and must repay over time."
        },
        "has_listing_term": {
          "targets": [
            "listing_term"
          ],
          "comment": "Refers to terms that a seller is willing to accept from a buyer when selling a property."
        }
      }
    },
    {
      "type": "loan_application_process",
      "container_name": "loan_application_process",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "has_expense": {
          "type": "string",
          "comment": "An expense represents a cost incurred by an entity in the process of generating revenue."
        },
        "has_income": {
          "type": "string",
          "comment": "Refers to earnings or revenue sources."
        }
      },
      "relationships": {
        "has_asset": {
          "targets": [
            "asset"
          ],
          "comment": "Relates to valuable resources or possessions."
        },
        "has_bank_statement": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_bank_statement_401_k": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_bank_statement_checking_account": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_bank_statement_saving_account": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_bank_statement_stock_account": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_bankruptcy_discharge_notice": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_child_support_verification": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_closing_adjustment_item": {
          "targets": [
            "closing_adjustment_item"
          ],
          "comment": "Item provided in a closing disclosure that either adds a cost to, or subtracts a cost from, closing costs."
        },
        "has_closing_disclosure": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_company": {
          "targets": [
            "company"
          ],
          "comment": "A company is a legal entity formed by a group of people or individuals for the purpose of carrying out a business or commercial activity."
        },
        "has_credit": {
          "targets": [
            "credit"
          ],
          "comment": "Credit refers to information about an individual's or organization's creditworthiness: their ability to borrow money with the promise of repaying the debt later, the amount of money they've borrowed but haven't repaid, and their history of repaying debt according to credit agreements."
        },
        "has_credit_report": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_credit_score_disclosure": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_death_certificate": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_divorce_decree": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_drivers_license": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_employment": {
          "targets": [
            "employment",
            "employment"
          ],
          "comment": "Employment refers to the state of being employed, meaning a person has a job or occupation and is receiving compensation for their work."
        },
        "has_employment_verification": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_equal_credit_opportunity_act_disclosure": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_estimated_property_cost": {
          "targets": [
            "estimated_property_cost"
          ],
          "comment": "Estimate of the property costs amount that a borrower is expected to pay each month for a loan."
        },
        "has_expense": {
          "targets": [
            "expense"
          ],
          "comment": "Denotes the financial outflows or costs that an individual or entity experiences. This can include regular outlays such as monthly bills, or one-off costs. This relationship underscores the financial transactions that reduce available funds"
        },
        "has_finance_relation": {
          "targets": [
            "finance_relation"
          ],
          "comment": "Links to financial relationships or transactions."
        },
        "has_gift_letter": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_income": {
          "targets": [
            "income"
          ],
          "comment": "Refers to earnings or revenue sources."
        },
        "has_irs1040": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_irsw2": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_liability": {
          "targets": [
            "liability"
          ],
          "comment": "Represents the financial obligations or debts that an individual or entity has, typically arising from borrowed funds, owed services, or other commitments. This relationship highlights the indebtedness and the financial responsibilities that need to be met"
        },
        "has_loan": {
          "targets": [
            "loan"
          ],
          "comment": "A loan timeline is a chronological record capturing the progression and changes of loan attributes over time."
        },
        "has_loan_application": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_loan_application_fnm_1009": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_loan_application_urla": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_loan_estimate": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_marriage_certificate": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_passport": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_patriot_act_disclosure": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_pay_stub": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        },
        "has_payoff": {
          "targets": [
            "payoff"
          ],
          "comment": "Details about the act of repaying the entire outstanding balance of a loan, including any principal, interest, and fees, to the lender."
        },
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        },
        "has_projected_payment": {
          "targets": [
            "projected_payment"
          ],
          "comment": "Estimate of the amount that a borrower is expected to pay each month for a loan."
        },
        "has_property": {
          "targets": [
            "property"
          ],
          "comment": "Property is a piece of land and any structures or improvements that are permanently attached to it. This includes residential, commercial, and industrial buildings, as well as natural resources such as water, minerals, and crops that are located on the land. A person can have property and be considered a property owner. If the person owns the property outright, it is a financial asset. If the person has taken out a loan to purchase the property, it is a financial debt because it represents money that they have borrowed from the lender and must repay over time."
        },
        "has_w2": {
          "targets": [
            "document"
          ],
          "comment": "A document which may be uploaded as part of a loan application process."
        }
      }
    },
    {
      "type": "loan_price_quote_adjustment_reason",
      "container_name": "loan_price_quote_adjustment_reasons",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "adjustment_reason_description": {
          "type": "string",
          "comment": "Reason why the loan price quote was adjusted."
        },
        "adjustment_reason_type": {
          "type": "string",
          "comment": "Category for the adjustment that affected the loan price quote."
        },
        "adjustor_id": {
          "type": "string",
          "comment": "Identifier for the adjustor who created the loan price quote adjustment."
        }
      },
      "relationships": {}
    },
    {
      "type": "loan_timeline",
      "container_name": "loan_timelines",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "unpaid_balance_amount": {
          "type": "decimal",
          "comment": "The amount of the outstanding balance for a Mortgage."
        },
        "unpaid_principal_interest_balance_amount": {
          "type": "decimal",
          "comment": "The total amount currently owed on the loan, comprising both the unpaid portion of the original borrowed amount and the accrued interest up to the current timeline entry."
        }
      },
      "relationships": {}
    },
    {
      "type": "loan",
      "container_name": "loans",
      "is_deprecated": false,
      "deprecated_properties": [
        "loan_purpose",
        "loan_term",
        "has_loan_term",
        "has_closing_information",
        "loan_total_interest_percentage",
        "has_customer",
        "lender_loan_identifier",
        "has_service_provider",
        "downpayment_percentage",
        "loan_cost",
        "amortization_type",
        "amortization_type_other_description",
        "arm_first_cap_amount",
        "arm_index_value_percent",
        "arm_index_value_type",
        "arm_lifetime_cap_amount",
        "arm_margin_percent",
        "arm_periodic_cap_amount",
        "arm_relative_cap_amount",
        "combined_loan_to_value_cltv_ratio_percent",
        "compensation_amount",
        "compensation_percent",
        "conforming_loan_indicator",
        "current_interest_rate_percent",
        "discount_points_amount",
        "home_equity_combined_loan_to_value_hcltv_ratio_percent",
        "initial_fixed_period_effective_months_count",
        "loan_amortization_period_count",
        "loan_amortization_period_type",
        "loan_par_price_amount",
        "loan_product_name",
        "loan_rate_lock_expiration_date",
        "loan_rate_lock_period_days_count",
        "loan_to_value_ltv_ratio_percent",
        "mi_monthly_payment_amount",
        "monthly_payment",
        "original_interest_rate_discount_percent",
        "piti",
        "rebate_amount",
        "rebate_percent",
        "subsequent_rate_adjustment_frequency_months_count",
        "has_customer_contact",
        "refinance_program_type",
        "refinance_program_type_other_description",
        "refinance_type",
        "loan_total_interest_percentage",
        "note_rate_percentage",
        "downpayment_percent",
        "compensation_percent",
        "rebate_percent",
        "downpayment_amount",
        "prepayment_penalty",
        "prepayment_penalty_calculation_period_amount",
        "township",
        "range",
        "section",
        "block",
        "pool_prefix_identifier",
        "highway_contract_route_identifier",
        "map_reference_second_identifier",
        "creditor_servicing_of_loan_statement_type_other_description",
        "correspondent_acquisition_type_other_description",
        "escrow_absence_reason_type_other_description",
        "loan_features_other_description",
        "loan_repayment_type_other_description",
        "lending_limit_type_other_description",
        "loan_secured_by_type_other_description",
        "mortgage_type_other_description",
        "refinance_program_type_other_description",
        "scra_relief_status_type_other_description",
        "supplemental_mortgage_type_other_description",
        "respa_conforming_year_type_other_description",
        "ease_of_completion",
        "cost_savings",
        "piti_savings",
        "day_1_certainty_value",
        "loan_price_quote_status",
        "notes_and_advisories",
        "seasonal_payment_feature_description",
        "step_payments_feature_description",
        "lien_priority_type_other_description",
        "loan_purpose_type_other_description",
        "loan_identifier",
        "lender_loan_identifier",
        "originator_loan_identifier",
        "servicer_loan_identifier",
        "investor_loan_identifier",
        "mers_mortgage_identification_number",
        "pool_identifier",
        "pool_prefix_identifier",
        "loan_application_date",
        "application_received_date",
        "loan_approval_date",
        "loan_approval_expiration_date",
        "loan_approval_period_days_count",
        "loan_commitment_date",
        "loan_commitment_expiration_date",
        "loan_commitment_period_days_count",
        "estimate_issued_date",
        "loan_estimated_closing_date",
        "loan_rate_lock_indicator",
        "loan_rate_lock_expiration_date",
        "loan_rate_lock_period_days_count",
        "servicing_transfer_indicator",
        "servicing_transfer_prohibited_indicator",
        "servicing_transfer_status_type",
        "creditor_servicing_of_loan_statement_type",
        "loan_status",
        "loan_status_date",
        "loan_status_type",
        "loan_asset_added_indicator",
        "loan_sale_funding_date",
        "pool_issue_date",
        "correspondent_acquisition_type",
        "delegated_underwriting_indicator",
        "enote_indicator",
        "enote_certified_indicator",
        "day_one_certainty_indicator",
        "trid_rule_indicator",
        "warehouse_lender_indicator",
        "accelerated_payment_program_indicator",
        "ach_indicator",
        "positive_rental_history_indicator",
        "workout_active_indicator",
        "closing_disclosure_waiting_period_waived_indicator",
        "loan_estimate_waiting_period_waived_indicator",
        "right_of_rescission_waiting_period_waived_indicator",
        "generates_liability",
        "has_late_charge_payment",
        "has_automated_underwriting_system",
        "has_closing_adjustment_item",
        "has_closing_information",
        "has_document",
        "has_estimated_property_cost",
        "has_finance_relation",
        "has_loan_price_quote_adjustment_reason",
        "has_loan_timeline",
        "has_payoff",
        "has_projected_payment",
        "has_property",
        "has_terms_of_loan",
        "has_terms_of_refinance",
        "accelerated_payment_program_indicator",
        "ach_indicator",
        "active_litigation_indicator",
        "amortization_type",
        "amortization_type_other_description",
        "application_received_date",
        "appraisal_value",
        "arm_first_cap_amount",
        "arm_index_value_percent",
        "arm_index_value_type",
        "arm_lifetime_cap_amount",
        "arm_margin_percent",
        "arm_periodic_cap_amount",
        "arm_relative_cap_amount",
        "arms_length_indicator",
        "assumability_indicator",
        "assumed_indicator",
        "assumed_loan_amount",
        "balloon_guaranteed_refinancing_indicator",
        "balloon_payment_amount",
        "balloon_payment_maximum_amount",
        "balloon_payment_minimum_amount",
        "balloon_reset_indicator",
        "balloon_reset_option_indicator",
        "balloon_term_months_count",
        "base_loan_amount",
        "base_ltv_value",
        "below_market_subordinate_financing_indicator",
        "biweekly_to_monthly_on_default_indicator",
        "borrower_paid_mi",
        "borrower_requested_loan_amount",
        "buydown_amount",
        "buydown_increase_rate",
        "buydown_temporary_subsidy_funding_indicator",
        "buydown_type",
        "capitalized_fees_indicator",
        "capitalized_loan_indicator",
        "closing_cost_expiration_date",
        "closing_cost_financed_indicator",
        "closing_disclosure_waiting_period_waived_indicator",
        "collateral_pledged_to_name",
        "combined_loan_balance_to_value_clbtv_ratio_percent",
        "combined_loan_to_value_cltv_ratio_percent",
        "compensation_amount",
        "compensation_percent",
        "concurrent_origination_indicator",
        "concurrent_origination_lender_indicator",
        "conforming_loan_indicator",
        "construction_loan_indicator",
        "construction_to_permanent_closing_type",
        "conversion_of_contract_for_deed_indicator",
        "convertible_indicator",
        "correspondent_acquisition_type",
        "correspondent_acquisition_type_other_description",
        "cost_savings",
        "credit_enhancement_indicator",
        "creditor_servicing_of_loan_statement_type",
        "creditor_servicing_of_loan_statement_type_other_description",
        "current_interest_rate_percent",
        "current_unpaid_principal_balance_upb_amount",
        "day_1_certainty_value",
        "day_one_certainty_indicator",
        "deferred_interest_balance_amount",
        "delegated_underwriting_indicator",
        "demand_feature_indicator",
        "disclosed_fully_indexed_rate_percent",
        "disclosed_index_rate_percent",
        "disclosed_margin_rate_percent",
        "discount_points_amount",
        "downpayment_amount",
        "downpayment_percent",
        "dti_value",
        "ease_of_completion",
        "eligible_for_lender_paid_mi_indicator",
        "employee_loan_program_indicator",
        "energy_improvement_amount",
        "energy_related_improvements_indicator",
        "enote_certified_indicator",
        "enote_indicator",
        "escrow_absence_reason_type",
        "escrow_absence_reason_type_other_description",
        "escrow_account_lender_requirement_type",
        "escrow_account_requested_indicator",
        "escrow_indicator",
        "escrow_not_allowed_indicator",
        "escrows_elected_by_borrower_indicator",
        "estimate_issued_date",
        "estimated_monthly_taxes_insurance_assessment_amount",
        "estimated_monthly_taxes_insurance_assessment_amount_can_increase_indicator",
        "estimated_monthly_taxes_insurance_assessment_period_type",
        "heloc_indicator",
        "higher_priced_mortgage_loan_indicator",
        "hold_years",
        "home_buyers_homeownership_education_certificate_indicator",
        "home_equity_combined_loan_to_value_hcltv_ratio_percent",
        "homeowners_insurance_required_indicator",
        "initial_fixed_period_effective_months_count",
        "interest_credited_to_borrower_indicator",
        "interest_only",
        "interest_only_indicator",
        "interest_only_term_months_count",
        "interest_rate_increase_indicator",
        "investor_loan_identifier",
        "jurisdiction_high_cost_loan_indicator",
        "lender_loan_identifier",
        "lender_placed_hazard_insurance_indicator",
        "lender_self_insured_indicator",
        "lending_limit_amount",
        "lending_limit_type",
        "lending_limit_type_other_description",
        "lien_holder_same_as_subject_loan_indicator",
        "lien_priority_type_other_description",
        "loan_affordable_indicator",
        "loan_age_months_count",
        "loan_amortization_maximum_term_months_count",
        "loan_amortization_period_count",
        "loan_amortization_period_type",
        "loan_amount_increase_indicator",
        "loan_application_date",
        "loan_approval_date",
        "loan_approval_expiration_date",
        "loan_approval_period_days_count",
        "loan_asset_added_indicator",
        "loan_closing_status_type",
        "loan_commitment_date",
        "loan_commitment_expiration_date",
        "loan_commitment_period_days_count",
        "loan_cost",
        "loan_estimate_waiting_period_waived_indicator",
        "loan_estimated_closing_date",
        "loan_features_other_description",
        "loan_features_other_indicator",
        "loan_funding_date",
        "loan_identifier",
        "loan_identifier_value",
        "loan_level_credit_score",
        "loan_level_credit_score_indicator",
        "loan_par_price_amount",
        "loan_price_quote_status",
        "loan_product_identifier",
        "loan_product_name",
        "loan_purpose_type_other_description",
        "loan_rate_lock_expiration_date",
        "loan_rate_lock_indicator",
        "loan_rate_lock_period_days_count",
        "loan_repayment_type",
        "loan_repayment_type_other_description",
        "loan_rider_indicator",
        "loan_rider_type",
        "loan_role_type",
        "loan_sale_funding_date",
        "loan_secured_by_type",
        "loan_secured_by_type_other_description",
        "loan_secured_indicator",
        "loan_seller_provided_investment_rating_description",
        "loan_status",
        "loan_status_date",
        "loan_status_type",
        "loan_type",
        "loan_to_value_ltv_ratio_percent",
        "loan_total_interest_percent",
        "loan_total_interest_percentage",
        "lost_note_affidavit_indicator",
        "ltv_value",
        "mers_mortgage_identification_number",
        "mi_coverage_exists_indicator",
        "mi_monthly_payment_amount",
        "mi_premium_financed_amount",
        "mi_premium_financed_indicator",
        "mi_required_indicator",
        "monthly_payment",
        "monthly_principal_and_interest_can_increase_indicator",
        "mortgage_modification_indicator",
        "mortgage_type_other_description",
        "mortgage_value",
        "negative_amortization_indicator",
        "note",
        "note_city_name",
        "note_rate_percentage",
        "note_state_name",
        "notes_and_advisories",
        "open_end_credit_indicator",
        "original_interest_rate_discount_percent",
        "original_loan_standard_escrow_provisions_indicator",
        "originator_loan_identifier",
        "other_proposed_monthly_payment_for_property_amount",
        "overdue_interest_amount",
        "pace_loan_payoff_amount",
        "payment_increase_indicator",
        "piggyback_loan_indicator",
        "piti",
        "piti_savings",
        "pool_identifier",
        "pool_issue_date",
        "pool_prefix_identifier",
        "positive_rental_history_indicator",
        "prepayment_penalty",
        "prepayment_penalty_calculation_period_amount",
        "prepayment_penalty_calculation_period_type",
        "prepayment_penalty_term_months_count",
        "prepayment_penalty_waived_indicator",
        "prepayment_restriction_indicator",
        "private_lender_indicator",
        "program_period_type",
        "properties_financed_by_lender_count",
        "property_inspection_waiver_indicator",
        "qualified_mortgage_indicator",
        "rebate_amount",
        "rebate_percent",
        "recoverable_corporate_advance_balance_from_borrower_amount",
        "recoverable_corporate_advance_balance_from_third_party_amount",
        "refinance_program_type",
        "refinance_program_type_other_description",
        "refinance_type",
        "refund_of_overpaid_interest_calendar_year_amount",
        "regulation_z_high_cost_loan_indicator",
        "relocation_loan_indicator",
        "remaining_unearned_interest_amount",
        "renovation_loan_indicator",
        "respa_conforming_year_type_other_description",
        "resubordinating_liabilities_indicator",
        "reverse_mortgage_indicator",
        "right_of_rescission_waiting_period_waived_indicator",
        "scheduled_amortization_midpoint_date",
        "scheduled_unpaid_principal_balance_upb_amount",
        "scra_indicator",
        "balloon_indicator",
        "loan_annual_percentage_rate",
        "scra_relief_forbearance_requested_indicator",
        "scra_relief_status_type",
        "scra_relief_status_type_other_description",
        "seasonal_payment_feature_description",
        "seasonal_payment_feature_indicator",
        "servicer_loan_identifier",
        "servicing_transfer_indicator",
        "servicing_transfer_prohibited_indicator",
        "servicing_transfer_status_type",
        "shared_appreciation_cap_amount",
        "shared_appreciation_indicator",
        "shared_appreciation_rate_percent",
        "shared_equity_indicator",
        "signed_authorization_to_request_tax_records_indicator",
        "start_date",
        "step_payments_feature_description",
        "subordinate_financing_is_new_indicator",
        "subsequent_rate_adjustment_frequency_months_count",
        "supplemental_mortgage_type",
        "supplemental_mortgage_type_other_description",
        "tax_records_obtained_indicator",
        "timely_payment_rate_reduction_indicator",
        "total_interest_amount_over_hold_years",
        "total_margin_adjustment_amount",
        "total_mortgaged_properties_count",
        "total_piti_paid_at_five_years_amount",
        "total_price_adjustment_amount",
        "total_principal_amount_over_hold_years",
        "total_principal_paid_at_five_years_amount",
        "total_rate_adjustment_amount",
        "total_sales_concession_amount",
        "total_senior_financing_amount",
        "total_srp_adjustment_amount",
        "total_subordinate_financing_amount",
        "total_subordinate_financing_proceeds_applied_amount",
        "trid_rule_indicator",
        "upb_change_frequency_type",
        "warehouse_lender_indicator",
        "weighted_average_interest_rate_percent",
        "workout_active_indicator"
      ],
      "description": "Represents a mortgage loan with comprehensive financial terms, conditions, and status information. Includes loan amounts, interest rates, payment schedules, borrower information, and regulatory compliance details for real estate financing transactions.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "accelerated_payment_program_indicator": {
          "type": "boolean",
          "comment": "Indicates that mortgagor participates in some sort of accelerated principal re-payment program which may be administered by a third party."
        },
        "ach_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that a loan is enrolled in Automatic Clearing House (ACH) payment drafting."
        },
        "active_litigation_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan is subject to active litigation."
        },
        "amortization_type": {
          "enum": [
            "GraduatedPaymentArm",
            "Step",
            "Fixed",
            "Gem",
            "Gpm",
            "RateImprovementMortgage",
            "AdjustableRate",
            null
          ],
          "comment": "Loan amortization type refers to the method used to calculate and pay off a loan over time. The two most common types of loan amortization are fully amortizing and partially amortizing.  In a fully amortizing loan, the borrower makes regular payments (usually monthly) that include both principal and interest. Each payment reduces the principal balance of the loan, and over time the loan is gradually paid off in full. In a partially amortizing loan, the borrower makes regular payments that include both principal and interest, but the payments are not large enough to fully pay off the loan by the end of its term. As a result, at the end of the loan term, the borrower must either make a balloon payment to pay off the remaining balance, refinance the loan, or enter into another agreement with the lender.",
          "type": [
            "string",
            "null"
          ]
        },
        "amortization_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information or a description of the amortization_type when other is selected.",
          "minLength": 1
        },
        "application_received_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date the creditor or originator received the application from the borrower for the subject mortgage loan.",
          "minLength": 1
        },
        "appraisal_value": {
          "type": "decimal",
          "format": "currency",
          "comment": "Appraisal value indicates the estimated fair market value of a property determined by a professional appraiser. The appraisal process involves a comprehensive evaluation of the property, including its physical characteristics, location, and current market conditions. The appraiser will consider factors such as the size and layout of the property, the condition of the interior and exterior, any upgrades or renovations made to the property, and comparable sales in the area."
        },
        "arm_first_cap_amount": {
          "type": "decimal",
          "comment": "A provision in the mortgage agreement that limits the amount by which the interest rate can increase during the initial adjustment period."
        },
        "arm_index_value_percent": {
          "type": "decimal",
          "comment": "A benchmark interest rate that serves as the basis for determining the interest rate on an adjustable-rate mortgage."
        },
        "arm_index_value_type": {
          "enum": [
            "SOFR",
            "Libor",
            "Treasury",
            "MTA",
            "FarmCredit",
            "Prime",
            "COFI",
            null
          ],
          "comment": "Refers to the specific type of benchmark or index used to determine the interest rate adjustments for an adjustable-rate mortgage (ARM).",
          "type": [
            "string",
            "null"
          ]
        },
        "arm_lifetime_cap_amount": {
          "type": "decimal",
          "comment": "A provision that limits the maximum interest rate that can be charged over the entire life of the ARM loan."
        },
        "arm_margin_percent": {
          "type": "decimal",
          "comment": "For adjustable-rate mortgages, refers to a fixed percentage that is added to a benchmark interest rate to determine the borrower's interest rate during each adjustment period."
        },
        "arm_periodic_cap_amount": {
          "type": "decimal",
          "comment": "A provision that limits how much the interest rate on the mortgage can change during a specific time interval, typically referred to as the adjustment period."
        },
        "arm_relative_cap_amount": {
          "type": "decimal",
          "comment": "A limitation placed on how much the interest rate on an ARM can change in relation to a specific benchmark or index, typically the underlying index to which the ARM is tied."
        },
        "arms_length_indicator": {
          "type": "boolean",
          "comment": "Indicates that this is an arm's length transaction. An arm's length transaction is between a willing buyer and a willing seller with no undue influence on either party and there is no relationship between the parties except that of the specific transactio"
        },
        "assumability_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the loan is assumable by another borrower."
        },
        "assumed_indicator": {
          "type": "boolean",
          "comment": "Indicates if the loan has been assumed."
        },
        "assumed_loan_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "The dollar amount of an existing loan assumed by the borrower."
        },
        "balloon_guaranteed_refinancing_indicator": {
          "type": "boolean",
          "comment": "When true, indicates refinancing of the balloon mortgage loan is guaranteed by the lender."
        },
        "balloon_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that a final balloon payment is required to fully pay off the loan."
        },
        "balloon_payment_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "The dollar amount of the final, or lump sum, balloon payment."
        },
        "balloon_payment_maximum_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "The largest scheduled lump sum payment over the life of loan. This applies when there are scheduled lump sum payments that are more than twice as large as the average of earlier scheduled payments."
        },
        "balloon_payment_minimum_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "The smallest scheduled lump sum payment over the life of loan. This applies when there are scheduled lump sum payments that are more than twice as large as the average of earlier scheduled payments."
        },
        "balloon_reset_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the balloon loan has been reset to the current market rate."
        },
        "balloon_reset_option_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the balloon loan has an option to reset."
        },
        "balloon_term_months_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The number of months that the balloon term is in effect.",
          "minimum": 1
        },
        "base_loan_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "base loan amount in mortgage banking refers to the initial amount of money borrowed by a borrower, before any fees or additional costs are added. It is the principal amount of the loan and is used as the basis for calculating interest charges, monthly payments, and the overall cost of the loan. \n\nThe base loan amount is rdf:type key factor in determining the terms and conditions of rdf:type loan, including the interest rate, amortization period, and monthly payment amount. It is separate from any additional costs or fees, such as closing costs, origination fees, or prepaid interest, which are added to the base loan amount to arrive at the total loan amount."
        },
        "base_ltv_value": {
          "type": "decimal",
          "comment": "Base LTV (Loan-to-Value) ratio is the ratio between the total amount of the loan and the appraised value of the asset that is being used as collateral for the loan. The Base LTV is the initial ratio established at the time of the loan origination, which determines the maximum loan amount that can be borrowed based on the value of the collateral."
        },
        "below_market_subordinate_financing_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the seller provided below-market subordinate financing."
        },
        "biweekly_to_monthly_on_default_indicator": {
          "type": "boolean",
          "comment": "Indicates if the lender allows conversion from Bi-weekly payments to monthly upon a default by the borrower."
        },
        "borrower_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The number of borrowers obligated on the note.",
          "minimum": 1
        },
        "borrower_paid_mi": {
          "type": "boolean",
          "comment": "Borrower-paid mortgage insurance (BPMI) is a type of insurance that mortgage borrowers can purchase to protect their lender in the event that they default on their mortgage payments. BPMI is typically required for borrowers who make a down payment of less than 20% of the home's purchase price. BPMI is different from other types of mortgage insurance because the borrower is responsible for paying the premiums, rather than the lender. The premiums can be paid upfront as a lump sum, or they can be added to the monthly mortgage payment."
        },
        "borrower_requested_loan_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "The amount of the loan initially requested by the borrower. This amount may include financed PMI, MIP and Funding Fees."
        },
        "buydown_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "A mortgage buydown is a financing technique in which the borrower or a third party pays an upfront fee to lower the interest rate on a mortgage loan for a period of time, typically the first few years of the loan term. The amount of the buydown is typically calculated as a percentage of the loan amount. The mortgage buydown amount is the total amount of money that is paid upfront to lower the interest rate on the mortgage loan."
        },
        "buydown_increase_rate": {
          "type": "decimal",
          "comment": "An arrangement where the borrower or a third party pays additional upfront fees or points to reduce the interest rate on a mortgage loan for a specified period. This upfront payment effectively 'buys down' the interest rate, resulting in lower monthly mortgage payments during the initial years of the loan. The loan buydown increase rate comes into play when the initial, lower interest rate gradually increases over time until it reaches the loan's original interest rate."
        },
        "buydown_temporary_subsidy_funding_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that there is buydown funding on this loan that reduces the interest rate and/or the payments for a specified period."
        },
        "buydown_type": {
          "enum": [
            "OneOne",
            "TwoOne",
            "ThreeTwoOne",
            "OneZero",
            null
          ],
          "comment": "A mortgage buydown is a type of mortgage financing in which the borrower or a third party pays an additional fee, known as points, to the lender in exchange for a lower interest rate on the mortgage loan. The buydown can be a temporary or permanent reduction of the interest rate on the mortgage loan. There are two main types of buydowns: temporary and permanent.",
          "type": [
            "string",
            "null"
          ]
        },
        "capitalized_fees_indicator": {
          "type": "boolean",
          "comment": "Indicates that the mortgage balance includes capitalized origination fees."
        },
        "capitalized_loan_indicator": {
          "type": "boolean",
          "comment": "Indicates that interest accrued, escrow disbursements made and/or fees charged are included in the unpaid principal balance."
        },
        "closing_cost_expiration_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date on which the closing costs agreement between a borrower and a lender expires.",
          "minLength": 1
        },
        "closing_cost_financed_indicator": {
          "type": "boolean",
          "comment": "Indicates that some or all of the closing cost were financed into the loan amount."
        },
        "closing_disclosure_waiting_period_waived_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that upon receipt of the Closing Disclosure, and due to a bona fide personal financial emergency, the consumer modified or waived the three-business-day waiting period that must be met prior to consummation of the mortgage loan transaction."
        },
        "collateral_pledged_to_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Specifies to whom the loan has been pledged as collateral.",
          "minLength": 1
        },
        "combined_loan_balance_to_value_clbtv_ratio_percent": {
          "type": "decimal",
          "comment": "Combined Loan-to-Value (CLTV) ratio, expressed as a percentage, representing the total of all loans secured by the property divided by its appraised value. It helps assess the overall loan risk when multiple mortgages or liens exist on a property."
        },
        "combined_loan_to_value_cltv_ratio_percent": {
          "type": "decimal",
          "comment": "Combined Loan-to-Value (CLTV) ratio is a measure of the amount of debt a borrower has relative to the value of their property.\nIt is calculated by dividing the total amount of all mortgages on rdf:type property by the appraised value of the property.\nFor example, if rdf:type borrower has rdf:type mortgage for $150,000 and rdf:type home equity line of credit (HELOC) for $50,000, the CLTV ratio would be calculated as follows:\nCLTV ratio = ($150,000 + $50,000) / appraised value of the property\nThe CLTV ratio is expressed as rdf:type percentage and provides rdf:type snapshot of the borrower's overall leverage. A higher CLTV ratio indicates a higher level of debt relative to the value of the property, while a lower CLTV ratio indicates a lower level of debt relative to the value of the property.\nLenders use the CLTV ratio as one factor in determining rdf:type borrower's creditworthiness and their ability to repay the debt. Borrowers with a high CLTV ratio may be seen as higher risk and may be required to provide additional documentation or a larger down payment to secure financing."
        },
        "compensation_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "Fees or compensation that a loan originator or mortgage broker receives for facilitating the mortgage loan."
        },
        "compensation_percent": {
          "type": "decimal",
          "comment": "The percentage of the loan amount that a lender or mortgage broker receives for facilitating a mortgage loan."
        },
        "concurrent_origination_indicator": {
          "type": "boolean",
          "comment": "Indicates that a new first mortgage will be closed concurrently with a second or a HELOC loan."
        },
        "concurrent_origination_lender_indicator": {
          "type": "boolean",
          "comment": "Indicates that a concurrent loan is from the same lender. This is in conjunction with Concurrent Origination Indicator."
        },
        "conforming_loan_indicator": {
          "type": "boolean",
          "comment": "conforming loan indicator is a flag or code used in mortgage banking to indicate whether a loan meets the guidelines set by the GSEs. \n- If the indicator is set to \"yes,\" it means that the loan meets the guidelines and is considered a conforming loan. \n- If the indicator is set to \"no,\" it means that the loan does not meet the guidelines and is considered a non-conforming loan.\n\nConforming loans are typically easier to obtain and come with lower interest rates than non-conforming loans, as they are seen as lower risk to the lender. Non-conforming loans, also known as jumbo loans, typically have higher interest rates and may have more stringent lending requirements as they are seen as higher risk.\n\nThe conforming loan limit, which is the maximum loan amount that rdf:type loan can be to be considered rdf:type conforming loan, is set by the GSEs and is based on the median home prices in rdf:type particular geographic area. The conforming loan limit is adjusted annually to reflect changes in housing prices.\n\nIn mortgage banking, rdf:type \"conforming loan\" is a loan that meets the guidelines set by government-sponsored enterprises (GSEs) such as Freddie Mac and Fannie Mae. These guidelines include maximum loan amounts, credit score requirements, and debt-to-income ratios, among others."
        },
        "construction_loan_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan is a construction loan."
        },
        "construction_to_permanent_closing_type": {
          "enum": [
            "TwoClosing",
            "OneClosing",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "conversion_of_contract_for_deed_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the subject transaction proceeds are used to pay off the remaining balance of the land contract (also known as a contract for deed)."
        },
        "convertible_indicator": {
          "type": "boolean",
          "comment": "Indicates that the loan has a convertible characteristic."
        },
        "correspondent_acquisition_type": {
          "enum": [
            "Flow",
            "Bulk",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "correspondent_acquisition_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field that specifies the enumeration when the value of Other is used for Correspondent Acquisition Type.",
          "minLength": 1
        },
        "cost_savings": {
          "type": "decimal",
          "comment": "he overall amount of money a borrower will save or has saved by selecting the Staircase loan (price) estimate."
        },
        "credit_enhancement_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan has a credit enhancement."
        },
        "creditor_servicing_of_loan_statement_type": {
          "enum": [
            "CreditorMayAssignSellOrTransferServicingOfLoan",
            "CreditorIntendsToTransferServicingOfLoan",
            "CreditorIntendsToServiceLoan",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "creditor_servicing_of_loan_statement_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to capture additional information when Other is selected for Creditor Servicing Of Loan Statement Type.",
          "minLength": 1
        },
        "current_interest_rate_percent": {
          "type": "decimal",
          "comment": "The current interest rate, expressed as a percent, for this loan."
        },
        "current_unpaid_principal_balance_upb_amount": {
          "type": "decimal",
          "comment": "Current Unpaid Principal Balance (UPB) amount is the outstanding balance owed on a mortgage loan as of a particular date, excluding any accrued interest or other charges. It is the amount of the loan that has not yet been paid off.\n\nUPB is an important metric in mortgage banking because it provides rdf:type snapshot of the borrower's current level of debt and their progress in paying off the loan. It is used to calculate a borrower's monthly mortgage payment, to assess their creditworthiness, and to determine the value of a loan in the secondary mortgage market.\n\nUPB is calculated by subtracting the total amount of principal payments made to date from the original loan amount. The UPB amount can decrease over time as the borrower makes payments on the loan, and it will eventually reach zero when the loan is fully paid off.\n\nIn addition to the UPB amount, mortgage lenders also track other key loan performance metrics such as delinquency status, loan-to-value ratio, and loan modification status, among others, to assess the risk of rdf:type loan and the borrower's ability to repay the debt."
        },
        "day_1_certainty_value": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Fannie Mae Day 1 Certainty is an electronic Loan verification process, indended to reduce the lending time and warrant relief for qualified loans.\n\nWhen true, indicates the Loan is qualified for automated DU approval by FNMA.",
          "minLength": 1
        },
        "day_one_certainty_indicator": {
          "type": "boolean",
          "comment": "Day 1 Certainty is a program offered by Fannie Mae, a government-sponsored enterprise (GSE), to help lenders streamline the mortgage loan origination process and reduce risk. The program aims to provide lenders with greater confidence in the underwriting process and reduce the need for additional documentation and manual processes."
        },
        "deferred_interest_balance_amount": {
          "type": "decimal",
          "comment": "Accrued Uncollected Interest"
        },
        "delegated_underwriting_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the underwriting authority on a loan is delegated to the loan originator based on disclosed guidelines."
        },
        "demand_feature_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan has a demand feature."
        },
        "disclosed_fully_indexed_rate_percent": {
          "type": "decimal",
          "comment": "The value of the fully indexed interest rate, expressed as a percent, which must be disclosed to the borrower for adjustable rate mortgages."
        },
        "disclosed_index_rate_percent": {
          "type": "decimal",
          "comment": "The value of the financial index, expressed as a percent, used to calculate the Disclosed Fully Indexed Interest Rate that must be disclosed to the borrower for adjustable rate mortgages."
        },
        "disclosed_margin_rate_percent": {
          "type": "decimal",
          "comment": "The number of percentage points to be added to the Disclosed Index Rate Percent to arrive at the Disclosed Fully Indexed Interest Rate that must be disclosed to the borrower for adjustable rate mortgages."
        },
        "discount_points_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "Discount points are prepaid interest that borrowers can pay at the time of closing when obtaining a mortgage loan. Each discount point typically costs 1% of the total loan amount and can be used to lower the interest rate on the loan."
        },
        "downpayment_amount": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "Down payment amount refers to the amount of money that a borrower pays upfront to purchase a property, before obtaining a mortgage loan. The specific amount required can vary depending on factors such as the borrower's creditworthiness, the type of loan, and the lender's requirements. In general, a larger down payment can help to reduce the amount of the mortgage loan needed and can lead to lower monthly payments and interest charges over the life of the loan.",
          "minimum": 1
        },
        "downpayment_percent": {
          "type": "decimal",
          "comment": "Down payment percent is the percentage of the purchase price of a property that a borrower pays upfront as a down payment towards the mortgage loan. The down payment percentage is an important factor in determining the loan-to-value (LTV) ratio, which is the ratio of the loan amount to the appraised value of the property. A higher down payment percentage means a lower loan amount and a lower LTV ratio, which may result in a lower interest rate and better loan terms."
        },
        "dti_value": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "Debt-To-Income (DTI) ratio is a financial ratio that compares a borrower's total monthly debt payments to their gross monthly income. It is used by lenders to evaluate a borrower's ability to repay a loan, particularly a mortgage loan. To calculate the DTI ratio, the borrower's total monthly debt payments, including things like credit card payments, car payments, student loans, and other loan payments, are divided by their gross monthly income (pre-tax income). The resulting ratio is expressed as a decimal. A DTI ratio of .43 or lower is generally considered a good target for most borrowers.",
          "minimum": 1
        },
        "ease_of_completion": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "A measure, on a scale from 0 to 100, indicating the ease with which a task or activity can be completed, with higher values indicating greater ease.",
          "minimum": 1
        },
        "eligible_for_lender_paid_mi_indicator": {
          "type": "boolean",
          "comment": "Indicates that the mortgage loan is eligible for lender-paid MI."
        },
        "employee_loan_program_indicator": {
          "type": "boolean",
          "comment": "Indicates if the loan is part of an employee loan program.Renamed. Replaces \"MI Employee Loan Indicator\"."
        },
        "end_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The end date is the date when the borrower is expected to have fully repaid the mortgage loan and the mortgage is considered to be fully paid off. This date is typically specified in the mortgage agreement and is calculated based on the term of the mortgage, which is the length of time the borrower has to repay the loan.",
          "minLength": 1
        },
        "energy_improvement_amount": {
          "type": "decimal",
          "comment": "Energy Improvement Amount refers to the amount of money that is set aside for energy-efficient upgrades or improvements to a property. \nThis could include things such as adding insulation, upgrading windows, installing rdf:type more efficient heating and cooling system, or adding solar panels.\n\nThe energy improvement amount is typically included in rdf:type mortgage loan as rdf:type separate line item, and the funds are disbursed to the borrower as the improvements are completed. The purpose of including this amount in the loan is to help borrowers make energy-efficient upgrades to their homes, which can result in lower energy bills and improved comfort.\n\nLenders may offer special financing options for energy improvements, such as rdf:type separate loan or rdf:type line of credit, as rdf:type way to encourage borrowers to make these upgrades. Borrowers may also be eligible for tax credits or other incentives for making energy-efficient upgrades to their homes."
        },
        "energy_related_improvements_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan will include an amount for energy-related improvements."
        },
        "enote_certified_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the loan delivery data has been automatically certified against eNote data."
        },
        "enote_indicator": {
          "type": "boolean",
          "comment": "Indicates that an eNote is used as part of this loan."
        },
        "escrow_absence_reason_type": {
          "enum": [
            "LenderDoesNotOffer",
            "LenderDoesNotRequire",
            "BorrowerDeclined",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "escrow_absence_reason_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Escrow Absence Reason Type.",
          "minLength": 1
        },
        "escrow_account_lender_requirement_type": {
          "enum": [
            "EscrowsRequiredByLender",
            "EscrowsWaivedByLender",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "escrow_account_requested_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the establishment of an escrow account has been requested by the borrower(s) for the loan."
        },
        "escrow_indicator": {
          "type": "boolean",
          "comment": "The escrow_indicator identifies mortgages where the lender sets aside a portion of the monthly mortgage payment to cover the cost of insurance premiums. When a borrower takes out a mortgage loan to purchase a home, the lender may require the borrower to escrow, or set aside, funds to cover the cost of property insurance, such as homeowners insurance or hazard insurance."
        },
        "escrow_not_allowed_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that, under applicable law, a servicer may not establish an escrow account for the mortgage loan being modified."
        },
        "escrows_elected_by_borrower_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower has elected to establish an escrow account."
        },
        "estimate_issued_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "Date that the loan estimate was issued by the loan originator.",
          "minLength": 1
        },
        "estimated_monthly_taxes_insurance_assessment_amount": {
          "type": "decimal",
          "comment": "Estimate of the taxes, insurance and assessments payment that a borrower can expect to make on a loan."
        },
        "estimated_monthly_taxes_insurance_assessment_amount_can_increase_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the estimated monthly taxes, insurance and assessments payment that a borrower can expect to make on a loan might increase."
        },
        "estimated_monthly_taxes_insurance_assessment_period_type": {
          "enum": [
            "Day",
            "Quarterly",
            "Month",
            "Yearly",
            "Annually",
            "Semimonthly",
            "Daily",
            "Annual",
            "Monthly",
            "Year",
            "Biweekly",
            "Week",
            "Weekly",
            "Semiannually",
            null
          ],
          "comment": "Indicates a period of time such as day, month and year.",
          "type": [
            "string",
            "null"
          ]
        },
        "heloc_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan is a Home Equity Line of Credit (HELOC)."
        },
        "higher_priced_mortgage_loan_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the transaction is considered to be a higher priced mortgage loan under Regulation Z requirements."
        },
        "hold_years": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "Hold years is the number of years a borrower is planning to hold the mortgage.",
          "minimum": 1
        },
        "home_buyers_homeownership_education_certificate_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the Home Buyers/Home Ownership Education certificate is included in the loan file."
        },
        "home_equity_combined_loan_to_value_hcltv_ratio_percent": {
          "type": "decimal",
          "comment": "Home Equity Combined Loan-to-Value (HCLTV) ratio percent is a measure of the amount of equity a homeowner has in their property compared to the total amount of debt secured by the property.\n\nThe HCLTV ratio is calculated as the sum of all outstanding mortgage debts (including the first mortgage and any home equity loans or lines of credit) divided by the appraised value of the property. The result is expressed as rdf:type percentage.\n\nFor example, if rdf:type homeowner has an outstanding first mortgage balance of $200,000 and rdf:type home equity loan balance of $50,000, and their property is appraised at $300,000, their HCLTV ratio would be (200,000 + 50,000) / 300,000 = 0.5, or 50%.\n\nLenders use the HCLTV ratio to assess the risk of rdf:type home equity loan or line of credit and to determine the maximum loan amount that can be approved. The lower the HCLTV ratio, the more equity the homeowner has in their property and the lower the risk to the lender. Lenders generally prefer rdf:type HCLTV ratio of 80% or lower.\n\nIn addition to the HCLTV ratio, lenders also consider other factors such as the borrower's credit score, income, and debt-to-income ratio, among others, when deciding whether to approve a home equity loan or line of credit."
        },
        "homeowners_insurance_required_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the property related to the loan must have homeowner's insurance."
        },
        "initial_fixed_period_effective_months_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The number of months in the initial fixed period of a loan with an adjustable rate or payment.",
          "minimum": 1
        },
        "interest_credited_to_borrower_indicator": {
          "type": "boolean",
          "comment": "dentifies whether interest was credited to the borrower at time of closing for a closed-end mortgage.In Version 2.x, this was in the HOME_EQUITY container"
        },
        "interest_only": {
          "type": "boolean",
          "comment": "Interest-only in a loan is a type of loan where the borrower is required to pay only the interest on the loan during the initial period of the loan, which is typically for a fixed number of years. During the interest-only period, the borrower is not required to pay down the principal amount of the loan, which means that the loan balance remains the same. After the interest-only period ends, the borrower is required to make full payments that include both principal and interest until the loan is fully paid off. This means that the borrower will have to make higher payments compared to the interest-only period, as the principal amount must be paid down over the remaining loan term."
        },
        "interest_only_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan terms allow interest-only payments to be made for a specified time period."
        },
        "interest_only_term_months_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The number of months that the interest only term is in effect.",
          "minimum": 1
        },
        "interest_rate_increase_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the interest rate on the loan can increase after the closing."
        },
        "investor_loan_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Investor loan identifier is used to track the loan throughout the mortgage process and to ensure that the correct information is associated with the loan at all times. \nThis identifier is typically rdf:type combination of letters and numbers that is unique to the loan and is used in loan servicing systems and mortgage-related databases.\n\nFor example, an investor loan identifier might be rdf:type combination of the loan number, the borrower's name, and the date the loan was originated. The investor loan identifier is used to quickly and easily locate information about the loan, such as the loan balance, payment history, and property information.\n\nThe investor loan identifier is important for mortgage lenders, servicers, and investors because it helps them keep track of the loan and ensures that the correct information is associated with the loan at all times. This helps to minimize the risk of errors and reduces the likelihood of fraudulent activity.\n\nInvestor loan identifiers are typically assigned when the loan is originated and are maintained throughout the life of the loan. They are used to track the loan as it is sold, serviced, or modified and are rdf:type critical component of the mortgage banking process.",
          "minLength": 1
        },
        "jurisdiction_high_cost_loan_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the loan is determined to be high cost under the jurisdictions high cost rules or requirements."
        },
        "lender_loan_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Lender Loan Identifier refers to a unique identifier assigned to a mortgage loan by the lender who originates the loan.\nThe lender loan identifier is used to track the loan throughout the mortgage process and to ensure that the correct information is associated with the loan at all times. This identifier is typically rdf:type combination of letters and numbers that is unique to the loan and is used in loan servicing systems and mortgage-related databases.\nFor example, rdf:type lender loan identifier might be rdf:type combination of the loan number, the borrower's name, and the date the loan was originated. The lender loan identifier is used to quickly and easily locate information about the loan, such as the loan balance, payment history, and property information.\nThe lender loan identifier is important for mortgage lenders, servicers, and investors because it helps them keep track of the loan and ensures that the correct information is associated with the loan at all times. This helps to minimize the risk of errors and reduces the likelihood of fraudulent activity.\nLender loan identifiers are typically assigned when the loan is originated and are maintained throughout the life of the loan. They are used to track the loan as it is sold, serviced, or modified and are rdf:type critical component of the mortgage banking process.",
          "minLength": 1
        },
        "lender_placed_hazard_insurance_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that there is lender placed hazard insurance of any kind associated with this loan."
        },
        "lender_self_insured_indicator": {
          "type": "boolean",
          "comment": "Indicates that the Lender will provide self-insurance."
        },
        "lending_limit_amount": {
          "type": "decimal",
          "comment": "The maximum dollar amount limit for the mortgage loan."
        },
        "lending_limit_type": {
          "enum": [
            "Calculated",
            "County",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "lending_limit_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Other is selected for the Lending Limit Type.",
          "minLength": 1
        },
        "lien_holder_same_as_subject_loan_indicator": {
          "type": "boolean",
          "comment": "Indicates that the lien holder of the related loan is the same as the lien holder of the subject loan."
        },
        "lien_priority_type": {
          "enum": [
            "FirstLien",
            "ThirdLien",
            "FourthLien",
            "SecondLien",
            null
          ],
          "comment": "Defines the priority of claims against the property in the event of default or foreclosure. The priority determines the sequence of debt repayment if the property is sold or foreclosed on",
          "type": [
            "string",
            "null"
          ]
        },
        "lien_priority_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A textual description or elaboration of the lien_priority_type indicating its priority in relation to other liens or claims on the property.",
          "minLength": 1
        },
        "loan_affordable_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan is classified as an affordable loan by the lender or the investor."
        },
        "loan_age_months_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The age of the loan expressed in months calculated as defined by trading partner agreement.",
          "minimum": 1
        },
        "loan_amortization_maximum_term_months_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The maximum number of months over which an extendable mortgage may be amortized.",
          "minimum": 1
        },
        "loan_amortization_period_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The number periods (as defined by the loan_amortization_period_type) over which the scheduled loan payments of principal and/or interest are calculated to retire the obligation.",
          "minimum": 1
        },
        "loan_amortization_period_type": {
          "enum": [
            "Day",
            "Month",
            "Semimonthly",
            "Year",
            "Biweekly",
            "Week",
            "Quarter",
            null
          ],
          "comment": "",
          "type": [
            "string",
            "null"
          ]
        },
        "loan_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "Loan amount refers to the total amount of money that a borrower borrows from a lender to purchase a property. This amount is typically based on the purchase price of the property, minus any down payment that the borrower is able to make."
        },
        "loan_amount_increase_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan amount can increase after closing."
        },
        "loan_annual_percentage_rate": {
          "type": "decimal",
          "format": "rate_percent",
          "comment": "A standardized way to express the true cost of borrowing on a loan, including both the interest rate and any applicable fees or costs. The APR is expressed as a percentage provides a more comprehensive view of the total cost of a loan than the nominal or stated interest rate alone."
        },
        "loan_application_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "Loan Application Date refers to the date on which a borrower applies for a mortgage loan. \nThis date is the start of the mortgage loan process and marks the beginning of the lender's review of the borrower's financial information, credit history, and other relevant information to determine whether the borrower is eligible for the loan.\n\nThe loan application date is important because it establishes the timeline for the mortgage process and sets the deadline for the lender to complete its review and make rdf:type loan decision. The loan application date is also used to determine the interest rate and other loan terms that will be offered to the borrower.\n\nThe loan application date is usually recorded in the loan file and is used to track the progress of the loan through the mortgage process. This information is used by the lender, investor, and servicer to ensure that the correct information is associated with the loan at all times.\n\nThe loan application date is rdf:type critical component of the mortgage process and is used to help ensure that the correct information is associated with the loan at all times. This helps to minimize the risk of errors and reduces the likelihood of fraudulent activity.",
          "minLength": 1
        },
        "loan_approval_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date the mortgage loan approval was made by the lender to the borrower. A loan approval involves verifying credit, down payment, employment history, etc. of the borrower(s) and will generally state that the borrower is approved for a loan upon satisfaction of certain conditions.",
          "minLength": 1
        },
        "loan_approval_expiration_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date the mortgage loan approval expires.",
          "minLength": 1
        },
        "loan_approval_period_days_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The number of days the mortgage loan approval is in effect.",
          "minimum": 1
        },
        "loan_asset_added_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that this loan asset was added to the security in the current investor reporting period."
        },
        "loan_closing_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date on which the mortgage loan is officially closed and the loan funds are disbursed to the borrower.",
          "minLength": 1
        },
        "loan_closing_status_type": {
          "enum": [
            "Closed",
            "TableFunded",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "loan_commitment_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date the mortgage loan commitment to the borrower was made. The loan commitment is a formal, binding offer from a lender that a specified amount of loan or line of credit will be made available to the named borrower at a certain interest rate, during a certain period and, usually, for a certain purpose. The commitment also specifies the terms and requirements under which the loan will be advanced.",
          "minLength": 1
        },
        "loan_commitment_expiration_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date the mortgage loan commitment expires.",
          "minLength": 1
        },
        "loan_commitment_period_days_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The number of days the mortgage loan commitment is in effect.",
          "minimum": 1
        },
        "loan_cost": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "Total amount the loan will cost, as reported in a price estimate."
        },
        "loan_estimate_waiting_period_waived_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that upon receipt of the Loan Estimate, and due to a bona fide personal financial emergency, the consumer modified or waived the seven-business-day waiting period that must be met prior to consummation of the mortgage loan transaction."
        },
        "loan_estimated_closing_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The estimated closing date for loan at the time of application.",
          "minLength": 1
        },
        "loan_features_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field that specifies a loan feature when the value of Other is selected for Loan Features on the 1003.",
          "minLength": 1
        },
        "loan_features_other_indicator": {
          "type": "boolean",
          "comment": "Boolean value that indicates Other has been selected as a loan feature on the 1003."
        },
        "loan_funding_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date the loan funds were released from the original lender to the closing agent for disbursement to the borrower.",
          "minLength": 1
        },
        "loan_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A unique identifier assigned to a loan by a specific company or institution. Different companies may use different identifiers for the same loan.",
          "minLength": 1
        },
        "loan_identifier_value": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The value of the identifier for the specified type.",
          "minLength": 1
        },
        "loan_level_credit_score": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "A score based on various factors, such as the borrower's credit score, loan-to-value ratio, loan program, and other risk factors.",
          "minimum": 1
        },
        "loan_level_credit_score_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan level credit score was used for decisioning of the loan."
        },
        "loan_par_price_amount": {
          "type": "decimal",
          "comment": "Refers to the par price that the lender is offering the borrower, a baseline standard where the borrower does not receive any discount points or premium credits."
        },
        "loan_price_quote_status": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect the status of a price quote.",
          "minLength": 1
        },
        "loan_product_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect the identifier for the loan product that the lender is offering. The loan product is a product brand that is specific to the lender's portfolio.",
          "minLength": 1
        },
        "loan_product_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect the brand name of the loan product that the lender is offering. The loan product name is a brand name that is specific to the lender's portfolio.",
          "minLength": 1
        },
        "loan_purpose_type": {
          "enum": [
            "Refinance",
            "Purchase",
            "MortgageModification",
            "Unknown",
            null
          ],
          "comment": "Specifies the primary reason or purpose for which the loan was taken.",
          "type": [
            "string",
            "null"
          ]
        },
        "loan_purpose_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A textual description elaborating on the primary reason or motive for obtaining the loan, as specified in the loan_purpose_type.",
          "minLength": 1
        },
        "loan_rate_lock_expiration_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date on which the interest rate lock agreement between a borrower and a lender expires.",
          "minLength": 1
        },
        "loan_rate_lock_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that a specific loan interest rate offered to a borrower will remain unchanged for a predetermined period, typically ranging from 15 days to 60 days or more."
        },
        "loan_rate_lock_period_days_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The number of days that a rate lock remains in effect.",
          "minimum": 1
        },
        "loan_repayment_type": {
          "enum": [
            "ConstantPrincipal",
            "ScheduledAmortization",
            "PrincipalPaymentOption",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "loan_repayment_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Loan Repayment Type.",
          "minLength": 1
        },
        "loan_rider_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the loan includes a rider, which is an amendment or addition to the standard loan agreement to address specific terms or conditions"
        },
        "loan_rider_type": {
          "enum": [
            "Buydown",
            "StepRate",
            "Prepayment",
            "Occupancy",
            "Balloon",
            "Arm",
            null
          ],
          "comment": "Specifies the type of rider.",
          "type": [
            "string",
            "null"
          ]
        },
        "loan_role_type": {
          "enum": [
            "Historical",
            "RelatedLoan",
            "SubjectLoan",
            null
          ],
          "comment": "Loan role type helps lenders understand a borrower's ability to repay a loan and determine loan terms and conditions. There are three types of loan roles: subject, related and historical. A subject loan is the loan that is being evaluated or underwritten by the lender. A related loan is a loan that is related to the subject loan in some way, such as a second mortgage or a home equity line of credit (HELOC) that is taken out on the same property. A historical loan is a loan that has already been repaid or closed.",
          "type": [
            "string",
            "null"
          ]
        },
        "loan_sale_funding_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date the investor releases funds to the seller of the loan.",
          "minLength": 1
        },
        "loan_secured_by_type": {
          "enum": [
            "SubjectProperty",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "loan_secured_by_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Loan Secured By Type.",
          "minLength": 1
        },
        "loan_secured_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan is secured by some type of collateral."
        },
        "loan_seller_provided_investment_rating_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The widely-recognized alpha code (e.g., AA, A, B, etc.) provided by the seller which specifies the credit risk class of a financial asset (e.g. a loan or mortgage backed security).",
          "minLength": 1
        },
        "loan_status": {
          "enum": [
            "Prospect",
            "NotAccepted",
            "Incomplete",
            "Registered",
            "Suspended",
            "Lead",
            "InShipping",
            "Processing",
            "ApplicationTaken",
            "Funded",
            "Servicing",
            "BrokerInitialSubmission",
            "Closed",
            "PreDeny",
            "InitialSubmission",
            "Purchased",
            "ConditionSubmission",
            "Withdrawn",
            "Denied",
            "Approved",
            "PreQualify",
            "Rescinded",
            "ClearToClose",
            "PostClosing",
            "PreApproval",
            "BrokerConditionSubmission",
            null
          ],
          "comment": "Loan status refers to the current state or condition of a loan. It indicates whether the borrower is up-to-date with their payments, in default, or in some other stage of the loan process.",
          "type": [
            "string",
            "null"
          ]
        },
        "loan_status_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "Loan status date indicates the date on which the status of a loan was last updated or changed. It is the date when the loan's status was evaluated and recorded by the lender or servicer, and can indicate whether the borrower is up-to-date on their payments, delinquent, or in default.",
          "minLength": 1
        },
        "loan_status_type": {
          "enum": [
            "Underwriting",
            "Application",
            "Prequalification",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "loan_to_value_ltv_ratio_percent": {
          "type": "decimal",
          "comment": "loan-to-value (LTV) ratio is a measure of a loan's size relative to the value of the property securing the loan. \nIt is expressed as rdf:type percentage, calculated as the loan amount divided by the property value. \n\nThe LTV ratio helps lenders assess risk by indicating the percentage of the property's value that is being borrowed. A higher LTV ratio can make a loan riskier for the lender, as there is less equity in the property to act as collateral in the event of default. Lenders often use the LTV ratio as one of several factors when determining loan approval and the interest rate to be charged on a loan."
        },
        "loan_total_interest_percent": {
          "type": "decimal",
          "comment": "Indicates the proportion of the total payments made over the life of a loan that goes toward paying the loan's interest charges. It is expressed as a percentage and is used to help borrowers understand how much of their loan payments will be allocated to interest expenses over the loan term."
        },
        "loan_total_interest_percentage": {
          "type": "decimal",
          "comment": "Indicates the proportion of the total payments made over the life of a loan that goes toward paying the loan's interest charges. It is expressed as a percentage and is used to help borrowers understand how much of their loan payments will be allocated to interest expenses over the loan term."
        },
        "loan_type": {
          "enum": [
            "Conventional",
            "Fha",
            "Va",
            null
          ],
          "comment": "Loan type refers to the specific type of loan that a borrower obtains from a lender, such as a personal loan, auto loan, or student loan. The loan type determines the terms and conditions of the loan, including the interest rate, repayment period, and the amount borrowed.",
          "type": [
            "string",
            "null"
          ]
        },
        "lost_note_affidavit_indicator": {
          "type": "boolean",
          "comment": "Indicates whether or not a lost note affidavit (LNA) is associated with the loan."
        },
        "ltv_value": {
          "type": "decimal",
          "comment": "Loan-To-Value (LTV) ratio is a financial ratio that compares the amount of the loan to the appraised value of the property being purchased or refinanced. To calculate the LTV ratio, the loan amount is divided by the appraised value of the property. The resulting ratio is expressed as a decimal. In general, a lower LTV ratio is considered better, as it indicates that the borrower has a larger equity stake in the property, and may be less likely to default on the loan."
        },
        "lender_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The name of the institution or company that originated or currently owns the loan.",
          "minLength": 1
        },
        "mers_mortgage_identification_number": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Mortgage Electronic Registration Systems (MERS) Mortgage Identification Number (MIN) is a unique identifier assigned to a mortgage loan by the MERS system. \nMERS is an electronic registry that tracks changes in ownership of mortgage loans and the servicing rights to these loans. \n\nThe MIN serves as rdf:type tracking number that links rdf:type specific mortgage loan to rdf:type property and enables the tracking of the loan's transfer of ownership and servicing rights. This allows mortgage loans to be transferred and sold among financial institutions without the need for the physical transfer of paper documents. The MIN is a key component of the electronic mortgage system and helps improve the efficiency of the mortgage market.",
          "minLength": 1
        },
        "mi_coverage_exists_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan is covered by mortgage insurance."
        },
        "mi_monthly_payment_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "Cost of mortgage insurance that a borrower pays as part of a monthly mortgage payment."
        },
        "mi_premium_financed_amount": {
          "type": "decimal",
          "comment": "Amount of the mortgage insurance premium that was financed as part of the loan."
        },
        "mi_premium_financed_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that all or a portion of the mortgage insurance premium was financed as part of the loan."
        },
        "mi_required_indicator": {
          "type": "boolean",
          "comment": "Indicates that Mortgage Insurance is or was required as a condition for originating the loan."
        },
        "monthly_payment": {
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "type": "decimal",
          "comment": "A mortgage monthly payment is the amount of money that a borrower pays each month to repay the mortgage loan, which includes both the principal and interest on the loan. In addition to the principal and interest, the mortgage monthly payment may also include other expenses such as property taxes, homeowners insurance, and mortgage insurance, depending on the loan type and requirements. These additional expenses are often collected and held in an escrow account by the lender, who then pays them on behalf of the borrower."
        },
        "monthly_principal_and_interest_can_increase_indicator": {
          "type": "boolean",
          "comment": "monthly principal and interest (P&I) can increase indicator refers to a feature of certain types of mortgage loans, such as adjustable-rate mortgages (ARMs), where the monthly P&I payment can increase over time based on changes in interest rates. \nThis feature is designed to protect the lender from the risk of declining interest rates, which would decrease the loan's monthly payment and reduce the lender's income.\n\nWith an adjustable-rate mortgage, the monthly P&I payment is based on rdf:type loan's interest rate, which can change periodically. The frequency of interest rate adjustments and the extent of the changes are specified in the loan terms, and the monthly P&I payment can increase or decrease accordingly. The monthly P&I can increase indicator is a warning that the monthly payment could increase in the future, based on changes in interest rates. This indicator is intended to help borrowers understand the potential financial risk of an adjustable-rate mortgage."
        },
        "mortgage_modification_indicator": {
          "type": "boolean",
          "comment": "Indicates that a loan modification exists."
        },
        "mortgage_type": {
          "enum": [
            "Conventional",
            "Va",
            "UsdaRuralDevelopment",
            "LocalAgency",
            "Fha",
            "PublicAndIndianHousing",
            "StateAgency",
            null
          ],
          "comment": "Mortgage type refers to the specific type of mortgage loan that a borrower obtains to finance the purchase or refinance of a property. There are several different types of mortgage loans, each with its own set of features, eligibility requirements, and interest rates.",
          "type": [
            "string",
            "null"
          ]
        },
        "mortgage_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A detailed description or explanation of the type of mortgage being taken, providing more context than the mortgage_type enumeration value.",
          "minLength": 1
        },
        "mortgage_value": {
          "type": "decimal",
          "comment": "Mortgage value refers to the amount of money that is borrowed by a borrower to purchase or refinance a property using a mortgage loan. It is the principal amount of the mortgage loan that is used to finance the purchase of the property. The mortgage value is typically determined by the purchase price of the property or its appraised value, whichever is lower."
        },
        "negative_amortization_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan terms allow unpaid interest to be added to the principal of the loan that can or will result in negative amortization."
        },
        "note": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A note is a legal document that outlines the terms of the loan between the borrower and lender. It is also known as a promissory note. The note contains the borrower's promise to repay the loan, the interest rate, the repayment terms, and other details about the loan, such as the maturity date and any prepayment penalties.",
          "minLength": 1
        },
        "note_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "The amount to be repaid as disclosed on the note."
        },
        "note_city_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The city referenced at the top of the promissory note.",
          "minLength": 1
        },
        "note_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date on the note.",
          "minLength": 1
        },
        "note_rate_percent": {
          "type": "decimal",
          "format": "rate_percent",
          "comment": "The actual interest rate as disclosed on the note."
        },
        "note_rate_percentage": {
          "type": "decimal",
          "comment": "Note rate percent refers to the interest rate specified in the promissory note or loan agreement between a lender and borrower. The note rate is the annual percentage rate (APR) that the borrower will pay on the loan amount."
        },
        "note_state_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The state referenced at the top of the promissory note.",
          "minLength": 1
        },
        "notes_and_advisories": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Notes and advisories related to some aspect of loan estimation, origination and/or settlement.",
          "minLength": 1
        },
        "occupancy": {
          "enum": [
            "SecondHome",
            "PrimaryResidence",
            "Investment",
            null
          ],
          "comment": "Occupancy type refers to the way in which a property is used or occupied by its owner or tenant. Occupancy type is used in determining the terms of a mortgage or loan and the level of risk associated with a property.",
          "type": [
            "string",
            "null"
          ]
        },
        "open_end_credit_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan or the application is for an open end loan, also known as a line of credit."
        },
        "original_interest_rate_discount_percent": {
          "type": "decimal",
          "comment": "For mortgages with an initial discounted rate (teaser rate), the difference in percentage points between the initial discounted rate and the fully indexed rate."
        },
        "original_loan_standard_escrow_provisions_indicator": {
          "type": "boolean",
          "comment": "When true indicates the original loan documents included standard Fannie Mae/Freddie Mac Uniform Instrument provisions for escrow items."
        },
        "originator_loan_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "originator loan identifier (OLI) is a unique identifier assigned to a mortgage loan by the loan originator.\nThe loan originator is the entity that originated or created the loan, such as rdf:type lender, mortgage broker, or financial institution.\nThe OLI is used to track the loan throughout its life cycle, from origination to payment or transfer to another lender.\nThe OLI serves as rdf:type unique identifier for rdf:type specific loan and allows the loan originator to efficiently manage and track the loan as it is processed, underwritten, and funded. It also enables the loan originator to associate rdf:type specific loan with other related information, such as the borrower's credit information, property details, and loan terms.\nThe OLI is an important tool for loan originators to manage and track their loan portfolios and ensure compliance with regulatory requirements. It also helps loan originators provide better customer service by allowing them to easily retrieve and manage loan information.",
          "minLength": 1
        },
        "other_proposed_monthly_payment_for_property_amount": {
          "type": "decimal",
          "comment": "An expense related to the portion of the monthly mortgage payment from items other than principal, interest, mortgage insurance, subordinate liens, property insurance and taxes, homeowners insurance and association/project dues."
        },
        "overdue_interest_amount": {
          "type": "decimal",
          "comment": "The dollar amount of interest accrued but not yet paid for Daily Simple Interest loans. This interest is considered overdue interest and is paid first when a payment is applied."
        },
        "pace_loan_payoff_amount": {
          "type": "decimal",
          "comment": "PACE (Property Assessed Clean Energy) loan payoff amount refers to the total amount owed on a PACE loan, which is a type of financing for energy efficiency and renewable energy improvements to a property. \n\nThe amount includes the principal balance, interest, and any additional fees or charges. \nThe borrower is responsible for paying off the PACE loan in full to satisfy the debt and remove the assessment from their property tax bill."
        },
        "payment_increase_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the payments on the loan can increase after the closing."
        },
        "piggyback_loan_indicator": {
          "type": "boolean",
          "comment": "Indicates a second lien being carried under the same loan number as a first mortgage. Generally one mortgage is covered by two notes and the borrower makes one combined payment.Potentially replace by Xlink arcrole."
        },
        "piti": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "PITI stands for Principal, Interest, Taxes, and Insurance. PITI is a commonly used pricing schema in the mortgage industry to calculate the total monthly payment that a borrower will need to make on a mortgage loan."
        },
        "piti_savings": {
          "type": "decimal",
          "comment": "The amount of money a borrower will save or has saved on the principal, interest, taxes and insurance monthly payment by selecting the Staircase loan (price) estimate."
        },
        "pool_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The unique identifier for a group or pool of loans. May include relevant prefix and suffix when not parsed into applicable fields. See Pool Prefix Identifier or Pool Suffix Identifier.",
          "minLength": 1
        },
        "pool_issue_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date a mortgage backed security is issued to investors.",
          "minLength": 1
        },
        "pool_prefix_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The prefix associated with the pool identifier.",
          "minLength": 1
        },
        "positive_rental_history_indicator": {
          "type": "boolean"
        },
        "prepayment_penalty": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "A prepayment penalty is a fee charged by some lenders if you pay off your loan before the end of its term. Essentially, it's a penalty for paying off your debt early. Lenders use prepayment penalties to discourage borrowers from paying off their loans too quickly, which can reduce the lender's profits by reducing the amount of interest they can collect. The penalty is usually a percentage of the remaining loan balance or a certain number of months' worth of interest payments.",
          "minimum": 1
        },
        "prepayment_penalty_calculation_period_amount": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "A prepayment penalty calculation period amount is a number indicating the length of time, in years, months, days, or whatever the period type is, that must pass before the prepayment penalty can be waived.",
          "minimum": 1
        },
        "prepayment_penalty_calculation_period_type": {
          "enum": [
            "Day",
            "Quarterly",
            "Month",
            "Yearly",
            "Annually",
            "Semimonthly",
            "Daily",
            "Annual",
            "Monthly",
            "Year",
            "Biweekly",
            "Week",
            "Weekly",
            "Semiannually",
            null
          ],
          "comment": "A prepayment penalty calculation period type indicates what type of time period must pass before the prepayment penalty can be waived.",
          "type": [
            "string",
            "null"
          ]
        },
        "prepayment_penalty_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the loan includes a penalty charged to the borrower in the event of prepayment."
        },
        "prepayment_penalty_term_months_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "Duration specified in a loan agreement during which borrowers are subject to penalties if they pay off the loan early or make larger-than-scheduled payments.",
          "minimum": 1
        },
        "prepayment_penalty_waived_indicator": {
          "type": "boolean",
          "comment": "Indicates that the prepayment penalty has been waived."
        },
        "prepayment_restriction_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the loan has any restrictions on the prepayment of the loan (i.e. paying off the principal and or interest at a rate faster than prescribed by the payment schedule)."
        },
        "private_lender_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the loan is provided by a private (non-institutional) lender."
        },
        "program_period_type": {
          "enum": [
            "PeriodFixed20Years",
            "PeriodArm7Years",
            "PeriodFixed30Years",
            "PeriodArm5Years",
            "PeriodFixed10Years",
            "PeriodFixed15Years",
            "PeriodArm10Years",
            null
          ],
          "comment": "Loan program period type refers to the period of time associated with the loan program.",
          "type": [
            "string",
            "null"
          ]
        },
        "properties_financed_by_lender_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "Case or loan level count of properties already financed by this lender for the borrower(s) named on the loan application. Does not include subject property",
          "minimum": 1
        },
        "property_inspection_waiver_indicator": {
          "type": "boolean",
          "comment": "Indicates whether a documented inspection of the property has been waived."
        },
        "qualified_mortgage_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the loan is determined to be a qualified mortgage under Regulation Z requirements."
        },
        "rebate_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "A rebate or credit that a borrower receives from a lender for a mortgage loan. It is essentially a financial incentive provided to the borrower, often in the form of a credit towards closing costs or other loan-related expenses."
        },
        "rebate_percent": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 3,
            "totalDigits": 6
          },
          "comment": "The percentage of the loan amount that a borrower receives as a rebate or credit from the lender in connection with a mortgage loan."
        },
        "recoverable_corporate_advance_balance_from_borrower_amount": {
          "type": "decimal",
          "comment": "Monies advanced on the loan (i.e. delinquency expense, tax penalty, repairs, etc.) that are recoverable from the borrower."
        },
        "recoverable_corporate_advance_balance_from_third_party_amount": {
          "type": "decimal",
          "comment": "Monies advanced on the loan (i.e. delinquency expense, tax penalty, repairs, etc.) that are recoverable from a third party."
        },
        "refinance_program_type": {
          "enum": [
            "InterestRateReduction",
            "StreamlinedWithoutAppraisal",
            "FullDocumentation",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "refinance_program_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field to capture additional detail when 'other' is selected for the refinance program type.",
          "minLength": 1
        },
        "refinance_type": {
          "enum": [
            "LimitedCashOut",
            "CashOut",
            "NoCashOut",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "refund_of_overpaid_interest_calendar_year_amount": {
          "type": "decimal",
          "comment": "The amount of overpaid interest refunded to the borrower for the calendar year."
        },
        "regulation_z_high_cost_loan_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the loan is determined to be high cost under Regulation Z."
        },
        "relocation_loan_indicator": {
          "type": "boolean",
          "comment": "Indicates if the loan is part of a corporate relocation program."
        },
        "remaining_unearned_interest_amount": {
          "type": "decimal",
          "comment": "The remaining amount of interest scheduled to be paid on a rule of 78s loan.Renamed. Used to be \"Current Unearned Interest Amount\"."
        },
        "renovation_loan_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that all or part of the subject loan proceeds will be used to finance the renovation of an existing property."
        },
        "respa_conforming_year_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field that specifies the enumeration when the value of Other is used for the RESPA Conforming Year Type.",
          "minLength": 1
        },
        "resubordinating_liabilities_indicator": {
          "type": "boolean",
          "comment": "resubordination of liabilities refers to the process of changing the priority of payment of a loan or other debt relative to other debts. \nIn other words, it determines which debt will be paid first in the event of default or foreclosure.\n\nThe \"resubordination of liabilities indicator\" is a flag used in mortgage banking to indicate whether a loan or debt has been resubordinated or not. This information is important for lenders and investors because it affects the priority of payment of the loan or debt relative to other debts in the event of default or foreclosure.\n\nIf the resubordination of liabilities indicator is set to \"yes,\" it means that the loan or debt has been resubordinated and will be paid after other debts in the event of default or foreclosure. If the indicator is set to \"no,\" it means that the loan or debt has not been resubordinated and will be paid before other debts in the event of default or foreclosure."
        },
        "reverse_mortgage_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the loan program uses present equity in the property to fund payments from the lender to the borrower-in lieu of the borrower receiving the proceeds of the loan in a lump sum. As a general rule no payments are made from the borrower to the lender and interest is accrued for payment at the end of the mortgage."
        },
        "right_of_rescission_waiting_period_waived_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that due to a bona fide personal financial emergency, the consumer modified or waived the right to rescind waiting period requirement that must be met prior to consummation of the mortgage loan transaction."
        },
        "scheduled_amortization_midpoint_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "Based on scheduled amortization, date at which the loan due date reaches the midpoint of the loans amortization period (e.g., for a 360 month loan, the date of month number 181).",
          "minLength": 1
        },
        "scheduled_unpaid_principal_balance_upb_amount": {
          "type": "decimal",
          "comment": "Scheduled Unpaid Principal Balance (UPB) is a term used in the mortgage industry to refer to the amount of outstanding principal on a mortgage loan that has not yet been paid off as of a specific date, according to the loan's amortization schedule. \n\nUPB is calculated by subtracting the total amount of principal paid to date from the original loan amount. \nThis amount represents the remaining amount owed by the borrower on the loan and is used to calculate the remaining monthly payments and the overall loan payoff amount."
        },
        "scra_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan is subject to the Servicemembers Civil Relief Act (SCRA)."
        },
        "scra_relief_forbearance_requested_indicator": {
          "type": "boolean",
          "comment": "When true indicates that relief under Servicemembers Civil Relief Act (SCRA) has been requested."
        },
        "scra_relief_status_type": {
          "enum": [
            "OneOrMoreBorrowersPreviouslyReceived",
            "NeverReceived",
            "OneOrMoreBorrowersCurrentlyReceive",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "scra_relief_status_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected as the Servicemember Relief Status Type.",
          "minLength": 1
        },
        "seasonal_payment_feature_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Specifies the details of the seasonal payment feature, including the period during which periodic payments are not scheduled.",
          "minLength": 1
        },
        "seasonal_payment_feature_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the loan contains a seasonal payment feature."
        },
        "servicer_loan_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Servicer Loan Identifier (SLID) is a unique identifier assigned to a loan by the servicer, which is the entity responsible for collecting payments, managing the loan's escrow account, and handling default and foreclosure processes on behalf of the lender. \n\nThe SLID is used to identify and track the loan throughout its lifecycle and is typically used for reporting purposes and for communication between the servicer and the lender or other parties involved in the loan's servicing. \nThe SLID helps to ensure accurate and efficient tracking and management of the loan.",
          "minLength": 1
        },
        "servicing_transfer_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan, once originated, may be transferred to another lender for servicing."
        },
        "servicing_transfer_prohibited_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the transfer of servicing is prohibited during life of the loan or for a designated period of time or until a certain event or condition is satisfied."
        },
        "servicing_transfer_status_type": {
          "enum": [
            "Retained",
            "Released",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "shared_appreciation_cap_amount": {
          "type": "decimal",
          "comment": "The maximum dollar amount that may be claimed as a share of the increase in value of the property."
        },
        "shared_appreciation_indicator": {
          "type": "boolean",
          "comment": "Indicates the loan is one in which the lender, in exchange for a loan with a favorable interest rate, participates in the profits (if any) the borrower receives when the property is eventually sold."
        },
        "shared_appreciation_rate_percent": {
          "type": "decimal",
          "comment": "The percentage of the increase in property value that accrues when the appreciation is shared."
        },
        "shared_equity_indicator": {
          "type": "boolean",
          "comment": "Indicates the mortgage is for resale-restricted, owner-occupied housing in which the rights, responsibilities, and benefits of residential property ownership are shared between individual homeowners and another party."
        },
        "signed_authorization_to_request_tax_records_indicator": {
          "type": "boolean",
          "comment": "Indicates that the IRS form (4506 or 4506T) that gives the lender the authority to request copies of tax records is present."
        },
        "start_date": {
          "type": "dateTime",
          "comment": "dateTime at which the subscription was started."
        },
        "step_payments_feature_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Specifies the details of the step payments feature, including the period during which periodic payments are scheduled to increase.",
          "minLength": 1
        },
        "subordinate_financing_is_new_indicator": {
          "type": "boolean",
          "comment": "When true indicates that subordinate financing is being created simultaneously with the subject loan."
        },
        "subsequent_rate_adjustment_frequency_months_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The frequency, in months, with which a subsequent rate associated with an adjustable rate mortgage will change.",
          "minimum": 1
        },
        "supplemental_mortgage_type": {
          "enum": [
            "Conventional",
            "Va",
            "UsdaRuralDevelopment",
            "LocalAgency",
            "Fha",
            "PublicAndIndianHousing",
            "StateAgency",
            null
          ],
          "comment": "Identifies any additional or secondary mortgage types or features that might be associated with the loan, e.g., 'balloon payment'.",
          "type": [
            "string",
            "null"
          ]
        },
        "supplemental_mortgage_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A detailed description or explanation of the type of mortgage being taken, providing more context than the supplemental_mortgage_type enumeration value.",
          "minLength": 1
        },
        "tax_records_obtained_indicator": {
          "type": "boolean",
          "comment": "Indicates that the IRS form (4506 or 4506T) that gives the lender the authority to request copies of tax records has been executed by the lender."
        },
        "timely_payment_rate_reduction_indicator": {
          "type": "boolean",
          "comment": "Flag indicating if the loan is eligible for a rate reduction if payments are received in a timely manner."
        },
        "total_interest_amount_over_hold_years": {
          "type": "decimal",
          "comment": "Total amount of interest a borrower will pay during the hold years."
        },
        "total_margin_adjustment_amount": {
          "type": "decimal",
          "comment": "Total change in the interest rate margin that is applied to an adjustable-rate mortgage (ARM) loan."
        },
        "total_mortgaged_properties_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The number of 1-4 unit properties that are financed and owned and/or obligated on by the borrower(s). A jointly owned/obligated property by multiple borrowers would count only once.",
          "minimum": 1
        },
        "total_piti_paid_at_five_years_amount": {
          "type": "decimal",
          "comment": "Total amount of principal, interest, taxes and insurance that the borrower will have paid five years after loan payments begin."
        },
        "total_price_adjustment_amount": {
          "type": "decimal",
          "comment": "Total amount of price adjustments that affect a loan price quote."
        },
        "total_principal_amount_over_hold_years": {
          "type": "decimal",
          "comment": "Total amount of principal a borrower will pay during the hold years."
        },
        "total_principal_paid_at_five_years_amount": {
          "type": "decimal",
          "comment": "Total amount of principal that the borrower will have paid five years after loan payments begin."
        },
        "total_rate_adjustment_amount": {
          "type": "decimal",
          "comment": "Total amount of rate adjustments that affect a loan price quote."
        },
        "total_sales_concession_amount": {
          "type": "decimal",
          "comment": "Total dollar amount of the value of all sales concessions granted by an interested party including such items as furniture, carpeting, decorator allowances, automobiles, vacations, securities, giveaways or other sales incentives"
        },
        "total_senior_financing_amount": {
          "type": "decimal",
          "comment": "Total dollar amount of financing associated with all loans to which the subject loan is subordinated."
        },
        "total_srp_adjustment_amount": {
          "type": "decimal",
          "comment": "Total SRP (Service Release Premium) adjustment amount affecting the pricing or interest rate of a mortgage loan. SRP adjustments are typically used in the context of loans that are intended to be sold on the secondary mortgage market, such as loans sold to government-sponsored enterprises (GSEs) like Fannie Mae or Freddie Mac."
        },
        "total_subordinate_financing_amount": {
          "type": "decimal",
          "comment": "Total amount of subordinate financing associated with the loan."
        },
        "total_subordinate_financing_proceeds_applied_amount": {
          "type": "decimal",
          "comment": "Total Subordinate Financing Proceeds Applied Amount in mortgage banking refers to the total amount of funds from a subordinate financing source that has been applied to the loan. \n\nSubordinate financing refers to rdf:type loan or other form of financing that has rdf:type lower priority than the first mortgage, meaning that in the event of rdf:type default or foreclosure, the first mortgage would be paid off before the subordinate financing. \nThe Total Subordinate Financing Proceeds Applied Amount represents the portion of the subordinate financing proceeds that has been used to pay down the loan balance, rather than being held in reserve or used for other purposes."
        },
        "trid_rule_indicator": {
          "type": "boolean",
          "comment": "When true indicates the loan or application is subject to the TILA RESPA Integrated Disclosure (TRID) rule in Regulation Z."
        },
        "upb_change_frequency_type": {
          "enum": [
            "Quarterly",
            "Annually",
            "Semimonthly",
            "Daily",
            "Monthly",
            "Biweekly",
            "Weekly",
            "Semiannually",
            null
          ],
          "comment": "Indicates how frequently the unpaid principal balance (UPB) is recalculated or adjusted. This is particularly relevant for certain adjustable-rate mortgages or loans with variable payments.",
          "type": [
            "string",
            "null"
          ]
        },
        "warehouse_lender_indicator": {
          "type": "boolean",
          "comment": "An indicator denoting whether a Warehouse Bank is involved in the mortgage loan transaction through a relationship with the lender."
        },
        "weighted_average_interest_rate_percent": {
          "type": "decimal",
          "comment": "An average of the different interest rates applicable to the transaction, based on the portions of the amount to which each interest rate applies, when multiple interest rates are applied to different portions of a loan's principal balance in a precompute"
        },
        "workout_active_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the loan is actively in the workout process."
        }
      },
      "relationships": {
        "generates_liability": {
          "targets": [
            "liability"
          ],
          "comment": "A relationship indicating that a financial action or agreement, such as taking out a loan, leads to the creation of a financial obligation or debt, termed as a liability. This denotes the responsibility of repayment or fulfillment of the said financial commitment."
        },
        "has_late_charge_payment": {
          "targets": [
            "payment"
          ],
          "comment": "A late charge payment in a loan context refers to a penalty fee that a borrower must pay if they fail to make their loan payment by the due date."
        },
        "has_automated_underwriting_system": {
          "targets": [
            "automated_underwriting_system"
          ],
          "comment": "An automated underwriting system refers to the process by which computer algorithms and software systems evaluate the risks involved in insuring a particular client or granting a loan to a borrower."
        },
        "has_closing_adjustment_item": {
          "targets": [
            "closing_adjustment_item"
          ],
          "comment": "Item provided in a closing disclosure that either adds a cost to, or subtracts a cost from, closing costs."
        },
        "has_closing_information": {
          "targets": [
            "closing_information"
          ],
          "comment": "Information about the costs associated with closing, or settling, the loan, to complete the purchase process."
        },
        "has_document": {
          "targets": [
            "document"
          ],
          "comment": "A document is a written or printed record that contains information, data, or instructions in a fixed form that can be stored, transmitted, or communicated."
        },
        "has_estimated_property_cost": {
          "targets": [
            "estimated_property_cost"
          ],
          "comment": "Estimate of the property costs amount that a borrower is expected to pay each month for a loan."
        },
        "has_finance_relation": {
          "targets": [
            "finance_relation"
          ],
          "comment": "Links to financial relationships or transactions."
        },
        "has_loan_price_quote_adjustment_reason": {
          "targets": [
            "loan_price_quote_adjustment_reason"
          ],
          "comment": "Details about adjustments that are made to a loan price quote."
        },
        "has_loan_timeline": {
          "targets": [
            "loan_timeline"
          ],
          "comment": "Associates a loan with its chronological record that captures the progression and changes of loan attributes over time."
        },
        "has_payoff": {
          "targets": [
            "payoff"
          ],
          "comment": "Details about the act of repaying the entire outstanding balance of a loan, including any principal, interest, and fees, to the lender."
        },
        "has_projected_payment": {
          "targets": [
            "projected_payment"
          ],
          "comment": "Estimate of the amount that a borrower is expected to pay each month for a loan."
        },
        "has_property": {
          "targets": [
            "property"
          ],
          "comment": "Property is a piece of land and any structures or improvements that are permanently attached to it. This includes residential, commercial, and industrial buildings, as well as natural resources such as water, minerals, and crops that are located on the land. A person can have property and be considered a property owner. If the person owns the property outright, it is a financial asset. If the person has taken out a loan to purchase the property, it is a financial debt because it represents money that they have borrowed from the lender and must repay over time."
        },
        "has_terms_of_loan": {
          "targets": [
            "terms_of_loan"
          ],
          "comment": "Terms_of_loan describes characteristics of the loan, including the behavior defined in the financial instrument."
        },
        "has_terms_of_refinance": {
          "targets": [
            "terms_of_refinance"
          ],
          "comment": "Describes details and terms associated with a refinance offer for a loan. It provides a structured way to represent the various options a borrower might consider when refinancing their existing loan."
        }
      }
    },
    {
      "type": "lot",
      "container_name": "mappings",
      "is_deprecated": false,
      "description": "The Lot class captures comprehensive information about the land parcel and exterior property characteristics surrounding a structure, including physical dimensions, surface features, and condition assessments. It documents lot sizing through multiple metrics including square footage, length, width, and categorical classifications (greater than or less than quarter-acre), along with flexible dimension descriptions. The class tracks exterior infrastructure such as driveway mateClaude can make mistakes. Please double-check responses.",
      "deprecated_properties": [
        "lot_type_other_description",
        "lot_size_dimensions",
        "lot_size_area",
        "lot_size_square_feet"
      ],
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "lot_type": {
          "enum": [
            "GreaterThanOneQuarterAcre",
            "PavedRoad",
            "LessThanOrEqualToOneQuarterAcre",
            null
          ],
          "comment": "Refers to characteristics associated with a lot and structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "lot_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the lot type.",
          "minLength": 1
        },
        "lot_size_dimensions": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture dimensions given for a lot, such as length x width.",
          "minLength": 1
        },
        "lot_size_area": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The total surface area of a piece of land on which a property is situated. It is typically measured in square feet (sq ft) or square meters (sq m) and includes the entire land parcel, regardless of whether the land is built upon or left as open space. ",
          "minimum": 1
        },
        "lot_size_square_feet": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The size of the lot in square feet.",
          "minimum": 1
        },
        "lot_length_feet": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The length of the lot in feet (typically the side parallel to the street).",
          "minimum": 1
        },
        "lot_width_feet": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The width of the lot in feet (typically the depth of the property from front to back).",
          "minimum": 1
        },
        "lot_area_sqft": {
          "type": [
            "integer",
            "null"
          ],
          "minimum": 1,
          "comment": "Total land size in square feet for a property"
        },
        "landscaping_features": {
          "enum": [
            "MatureTrees",
            "ManicuredGarden",
            "OvergrownVegetation",
            "FlowerBeds",
            "Planters",
            "Lawn",
            null
          ],
          "comment": "Features associated with the landscaping on the lot.",
          "type": [
            "string",
            "null"
          ]
        },
        "view": {
          "enum": [
            "OceanView",
            "Waterfront",
            "MountainView",
            "CitySkylineView",
            "ParkView",
            null
          ],
          "comment": "Descriptive tag of the view from the lot.",
          "type": [
            "string",
            "null"
          ]
        },
        "fencing_type": {
          "enum": [
            "Wood",
            "ChainLink",
            "Vinyl",
            "Aluminum",
            "WroughtIron",
            "Bamboo",
            "Composite",
            "Privacy",
            "Picket",
            "SplitRail",
            "Stockade",
            "Board",
            "PostAndRail",
            "Lattice",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "fence_height": {
          "enum": [
            "3ft",
            "4ft",
            "5ft",
            "6ft",
            "8ft",
            "10ft",
            "12ft",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "fence_length": {
          "enum": [
            "25ft",
            "50ft",
            "75ft",
            "100ft",
            "150ft",
            "200ft",
            "300ft",
            "500ft",
            "1000ft",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "driveway_material": {
          "enum": [
            "Concrete",
            "Asphalt",
            "Pavers",
            "Gravel",
            null
          ],
          "comment": "The material of the driveway on the lot.",
          "type": [
            "string",
            "null"
          ]
        },
        "driveway_condition": {
          "enum": [
            "Good",
            "Cracked",
            "Stained",
            "Worn",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "lot_condition_issues": {
          "enum": [
            "OvergrownWeeds",
            "Clutter",
            "TrashPiles",
            "BrokenFence",
            "CrackedDriveway",
            null
          ],
          "comment": "AI-observed lot-level maintenance or neglect issues.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "example": {
        "source_http_request": "GET /Property/Details?parcelId={{request_identifier}} HTTP/1.1\r\nHost: pbcpao.gov\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nConnection: keep-alive\r\n\r\n",
        "request_identifier": "52434205310037080",
        "lot_type": "LessThanOrEqualToOneQuarterAcre",
        "lot_length_feet": null,
        "lot_width_feet": null,
        "lot_area_sqft": 1307,
        "driveway_material": null,
        "landscaping_features": null,
        "view": null,
        "fencing_type": null,
        "driveway_condition": null,
        "lot_condition_issues": null
      }
    },
    {
      "type": "relationship",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "from": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The CID of the from class",
          "minLength": 1
        },
        "to": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The CID of to class in relationship",
          "minLength": 1
        },
        "type": {
          "enum": [
            "layout_has_appliance",
            "person_has_mortgage",
            "person_has_property",
            "company_has_person",
            "person_owns_property",
            "property_appliance",
            "property_has_address",
            "property_has_file",
            "property_has_layout",
            "property_has_lot",
            "property_has_mortgage",
            "property_has_nearby_locations",
            "property_has_sales_history",
            "property_has_structure",
            "property_has_tax",
            "property_has_utilities",
            "property_has_environmental_risk",
            "property_seed",
            "property_flood_storm_information",
            null
          ],
          "comment": "A reference to the associated schema for relashionship",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "examples": [
        {
          "from": "bafkreihafl4lemfq65qba5uw55wfzzq6xnpj2gs7ympothg573wi3zgd7i",
          "to": "bafkreichjl4lzxm5257p6jzvmm4zq4cu3s55torjiqju3crhstofeikvxm",
          "type": "property_has_address"
        },
        {
          "from": "bafkreihafl4lemfq65qba5uw55wfzzq6xnpj2gs7ympothg573wi3zgd7i",
          "to": "bafkreifgtuq23rdrns74ietfwa3665gtpmmysnpcg7zagcuemcn3hxz23m",
          "type": "property_has_tax"
        },
        {
          "from": "bafkreihafl4lemfq65qba5uw55wfzzq6xnpj2gs7ympothg573wi3zgd7i",
          "to": "bafkreig5r3ayhd6yocyqpt4hvfd2purz7o4x6lpmxikwnnk7depntizm24",
          "type": "property_has_sales_history"
        },
        {
          "from": "bafkreiehg5lxb6fwgrikpnbyj3hxouu5pmxnssbhkkx7lktrkqmlepb6li",
          "to": "bafkreihafl4lemfq65qba5uw55wfzzq6xnpj2gs7ympothg573wi3zgd7i",
          "type": "person_has_property"
        },
        {
          "from": "bafkreihafl4lemfq65qba5uw55wfzzq6xnpj2gs7ympothg573wi3zgd7i",
          "to": "bafkreiag2x7tfcnzmyz27vbrw4pglmwwz4ecgwr7bsq6y2mwnvphb3nfya",
          "type": "property_has_environmental_risk"
        },
        {
          "from": "bafkreihafl4lemfq65qba5uw55wfzzq6xnpj2gs7ympothg573wi3zgd7i",
          "to": "bafkreigxf7tgjn2g2o4bhi4vo24aro5n4jidkyrbkos53s6mvxyie644aq",
          "type": "property_has_lot"
        }
      ]
    },
    {
      "type": "mapping",
      "container_name": "mappings",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "operation": {
          "type": "string",
          "comment": "Equivalent information detail"
        }
      },
      "relationships": {
        "has_from_graph_entity": {
          "targets": [
            "graph_entity"
          ],
          "comment": "Graph entity object that holds partner information"
        },
        "has_to_graph_entity": {
          "targets": [
            "graph_entity"
          ],
          "comment": "Graph entity object that holds Staircase information"
        }
      }
    },
    {
      "type": "military_service",
      "container_name": "military_services",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "military_branch_type": {
          "enum": [
            "CoastGuard",
            "Navy",
            "ArmyNationalGuard",
            "AirNationalGuard",
            "ArmyReserves",
            "AirForce",
            "MarinesReserves",
            "NavyReserves",
            "Marines",
            "Army",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "military_branch_type_other_description": {
          "type": "string",
          "comment": "A free-form text field which contains the description of the branch of the military to which the VA borrower belongs when Other is selected as the Military Branch Type."
        },
        "military_service_classification_type": {
          "enum": [
            "NonCommissionedOfficer",
            "CommissionedOfficer",
            "Enlisted",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "military_service_classification_type_other_description": {
          "type": "string",
          "comment": "A free-form text field that specifies the enumeration when the value of Other is used for Military Service Classification Type."
        },
        "military_service_expected_completion_date": {
          "type": "string",
          "format": "date",
          "comment": "The date the active military term of service is scheduled to end."
        },
        "military_service_from_date": {
          "type": "string",
          "format": "date",
          "comment": "The date this period of service began."
        },
        "military_service_number_identifier": {
          "type": "string",
          "comment": "A unique alpahnumeric string identifying the VA military service identification number of the borrower as assigned by the VA."
        },
        "military_service_served_as_name": {
          "type": "string",
          "comment": "Name of veteran exactly as it appears on separation papers of Statement of Service."
        },
        "military_service_to_date": {
          "type": "string",
          "format": "date",
          "comment": "The date this period of service ended."
        },
        "military_status_type": {
          "enum": [
            "ActiveDuty",
            "NoMilitaryService",
            "Separated",
            "Veteran",
            "ReserveNationalGuardNeverActivated",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "military_status_type_other_description": {
          "type": "string",
          "comment": "A free-form text field which contains the military status type of the VA when Other is selected as the Military Status Type."
        },
        "separated_from_military_service_due_to_disability_indicator": {
          "type": "boolean",
          "comment": "When true, indicates veteran was discharged, retired or separated from military service due to a disability."
        },
        "va_benefit_related_indebtedness_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower has a VA benefit-related indebtedness as defined by the VA for purposes of VA Form 26-8937 - Verification of VA Benefits."
        },
        "va_claim_folder_identifier": {
          "type": "string",
          "comment": "A unique alpahnumeric string identifying the number associated with the VA claim folder as assigned by the VA."
        },
        "va_disability_benefit_claim_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the borrower has filed a claim for VA disability benefits prior to discharge from active duty service."
        },
        "va_eligibility_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that this instance of military service is used to determine VA eligibility. NOTE: Only one instance of this container/element should have this set to true."
        }
      },
      "relationships": {
        "associated_with": {
          "targets": [
            "person"
          ],
          "comment": "A person associated with."
        }
      }
    },
    {
      "type": "mortgage_plan",
      "container_name": "mortgage_plans",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "amortization_term": {
          "type": "string",
          "comment": "Mortgage plan amortization term refers to the specific conditions and schedule for paying off a mortgage loan. The amortization term typically refers to the length of time over which the borrower agrees to repay the loan."
        },
        "code": {
          "type": "string",
          "comment": "Mortgage plans can be identified by various codes or identifiers used by lenders, such as loan numbers or mortgage identification numbers (MINs). Loan numbers are typically assigned by the lender and are used to track the specific mortgage loan within the lender's system. Mortgage identification numbers (MINs) are unique nine-digit numbers assigned by the Mortgage Electronic Registration System (MERS) to identify a mortgage loan throughout its life, even if the loan is sold or transferred to another lender."
        },
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        },
        "plan_identifier": {
          "type": "string",
          "comment": "A mortgage plan identifier (MPI) is a unique identification number assigned to a mortgage plan or mortgage agreement. It is a way to track and identify individual mortgage plans, and is typically used by lenders, financial institutions, and government agencies. The MPI is usually a combination of numbers and letters, and is assigned by the lender at the time the mortgage plan is established. It serves as a reference for the lender to identify the specific mortgage plan and keep track of it throughout its life cycle."
        }
      },
      "relationships": {}
    },
    {
      "type": "offering",
      "container_name": "offerings",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "offering_amount": {
          "type": "decimal",
          "comment": "The amount related to the Offering Type."
        },
        "offering_date": {
          "type": "string",
          "format": "date",
          "comment": "The date related to the Offering Type."
        },
        "offering_type": {
          "enum": [
            "OfferPending",
            "ContractOnMarket",
            "PriceChange",
            "OnHold",
            "ContractOffMarket",
            "ContingentSale",
            "Sold",
            "OriginalOffering",
            "Cancelled",
            "TemporaryHold",
            null
          ],
          "comment": "Describes the current or historical status of a property listing in the real estate market. It can denote the property's availability, pricing adjustments, or any contractual conditions associated with it.",
          "type": [
            "string",
            "null"
          ]
        },
        "offering_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information when Other is selected for Offering Type."
        }
      },
      "relationships": {}
    },
    {
      "type": "open_house",
      "container_name": "open_houses",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        },
        "end_datetime": {
          "type": "dateTime",
          "comment": "The precise date and time at which the outage was resolved and the product became operational again. If this is not set, it could indicate an ongoing outage."
        },
        "start_datetime": {
          "type": "dateTime",
          "comment": "The precise date and time at which the outage began. This timestamp is crucial for assessing the duration and impact of the outage on users."
        }
      },
      "relationships": {}
    },
    {
      "type": "outage",
      "container_name": "outages",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "end_datetime": {
          "type": "dateTime",
          "comment": "The precise date and time at which the outage was resolved and the product became operational again. If this is not set, it could indicate an ongoing outage."
        },
        "start_datetime": {
          "type": "dateTime",
          "comment": "The precise date and time at which the outage began. This timestamp is crucial for assessing the duration and impact of the outage on users."
        }
      },
      "relationships": {
        "has_product": {
          "targets": [
            "product"
          ],
          "comment": "The 'has_product' property connects an invocation to a specific product or service that is being affected or manipulated through the invocation. This relationship can help in understanding the interaction between the invocation and the corresponding product"
        }
      }
    },
    {
      "type": "ownership",
      "container_name": "ownerships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "date_acquired": {
          "type": "string",
          "format": "date",
          "comment": "The date on which the person acquired ownership of the property."
        },
        "date_sold": {
          "type": "string",
          "format": "date",
          "comment": "The date which the ownership has ended."
        },
        "owned_by": {
          "type": "string",
          "comment": "The individual who holds the title or legal rights to the property."
        },
        "owner_occupied_indicator": {
          "type": "boolean",
          "comment": "Indicates whether the property is occupied by the owner. If true, the owner lives in the property. If false, the owner does not reside in the property, and it might be used for rental or other purposes."
        },
        "ownership_identifier": {
          "type": "string",
          "comment": "A universally unique identifier for the ownership record."
        },
        "ownership_percentage": {
          "type": "decimal",
          "comment": "In cases of joint ownership or partnerships, this denotes the percentage of ownership held by the individual."
        },
        "property_ownership_structure": {
          "enum": [
            "LifeEstate",
            "SoleOwnership",
            "TenancyByTheEntirety",
            "TenancyInCommon",
            "JointTenancyWithRightOfSurvivorship",
            null
          ],
          "comment": "Describes the manner in which the property is held, as given on the title to the property.",
          "type": [
            "string",
            "null"
          ]
        },
        "property_ownership_structure_other_description": {
          "type": "string",
          "comment": "A free-form text field to capture additional detail when 'other' is selected for the property ownership structure."
        },
        "trust_information": {
          "enum": [
            "TitleWillBeHeldByAnInterVivosLivingTrust",
            "TitleWillBeHeldByALandTrust",
            null
          ],
          "comment": "Describes the nature of the trust that holds the title.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_owner_company": {
          "targets": [
            "company"
          ],
          "comment": "The individual who holds the title or legal rights to the property."
        },
        "owned_automobile": {
          "targets": [
            "automobile"
          ],
          "comment": "The automobile that is owned."
        },
        "owned_by": {
          "targets": [
            "person"
          ],
          "comment": "The individual who holds the title or legal rights to the property."
        },
        "owned_property": {
          "targets": [
            "property"
          ],
          "comment": "The piece of real estate that is owned by the person."
        }
      }
    },
    {
      "type": "partner_revenue_record",
      "container_name": "partner_revenue_records",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "customer_CID": {
          "type": "string",
          "comment": "Customer CID refers to a unique identifier that is assigned to a customer by a cloud service provider. This identifier is used to track the customer's usage of the cloud services and may also be used for billing and invoicing purposes."
        },
        "lender_name": {
          "type": "string",
          "comment": "A lender name is a word or set of words that is used to identify a business that functions as a lender. It is the primary way in which a lender is recognized and distinguished from other entities."
        },
        "loan_identifier": {
          "type": "string",
          "comment": "A unique identifier assigned to a loan by a specific company or institution. Different companies may use different identifiers for the same loan."
        },
        "order_date": {
          "type": "string",
          "format": "date",
          "comment": "An order date is the date on which a customer places an order for a product or service from a company."
        },
        "partner_CID": {
          "type": "string",
          "comment": "Partner CID refers to a unique identifier that is assigned to a partner company by a cloud service provider. This identifier is used to track the partner's usage of the cloud services and may also be used for billing and invoicing purposes."
        },
        "partner_name": {
          "type": "string",
          "comment": "A partner name is a word or set of words that is used to identify a partnership. It is the primary way in which a partner is recognized and distinguished from other entities."
        },
        "partner_product": {
          "type": "string",
          "comment": "A partner product is a product that is developed, sold, or marketed in collaboration with a partner company or organization. Partner products are often the result of a strategic alliance or partnership between two or more companies that have complementary skills, resources, or expertise."
        },
        "partner_revenue": {
          "type": "decimal",
          "comment": "Partner revenue refers to the revenue earned by a company through its partnerships with other businesses or entities."
        },
        "payment_received": {
          "type": "decimal",
          "comment": "Payment received refers to the amount of funds received from a customer or partner as payment for goods or services provided by a business."
        },
        "reseller": {
          "type": "boolean",
          "comment": "A reseller is a company or individual that purchases software products from software companies and then sells those products to end-users or customers. Resellers act as intermediaries between the software company and the end-users, providing value-added services such as installation, configuration, training, and technical support."
        },
        "revenue_share_EM": {
          "type": "decimal",
          "comment": "Revenue share refers to an agreed-upon split of revenue between two parties who are collaborating in a revenue share business model. The revenue share may be split evenly between the parties, or it may be divided based on a predetermined percentage or formula."
        },
        "third_party_fulfillment": {
          "type": "string",
          "comment": "Third-party fulfillment (3PL) indicates if a partner is performing third party fulfillment.  Third party fulfillment is a business model in which a company outsources aspects of its operations to a third-party provider. Third-party fulfillment can be an effective way for companies to reduce costs and increase scalability. It allows companies to focus on their core competencies, while outsourcing non-core functions to specialized providers."
        },
        "transaction_identifier": {
          "type": "string",
          "comment": "A transaction identifier is a unique identifier assigned to a transaction in order to distinguish it from other transactions and track its progress throughout a product lifecycle. A Staircase transaction contains collections of data related to an instance of a transaction type, where transaction type represents a line of business in the mortgage industry."
        }
      },
      "relationships": {}
    },
    {
      "type": "payment",
      "container_name": "payments",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "days_past_due_count": {
          "type": "integer",
          "comment": "Payment days past due count is the number of days that a payment has not been received on a specific due date."
        },
        "frequency_type": {
          "enum": [
            "Quarterly",
            "Semimonthly",
            "Annual",
            "Monthly",
            "Biweekly",
            "AtMaturity",
            "Semiannual",
            "Weekly",
            null
          ],
          "comment": "Payment frequency type indicates how frequently the payment is made.",
          "type": [
            "string",
            "null"
          ]
        },
        "identifier": {
          "type": "string",
          "comment": "A payment identifier is a unique code or reference number that is used to identify and track a specific payment transaction. It helps in distinguishing one payment from another, especially in situations where multiple payments are being processed simultaneously."
        },
        "last_paid_amount": {
          "type": "decimal",
          "comment": "A last paid amount refers to the most recent date on which a payment was made or processed for a particular account or transaction. It signifies the date when the payment was successfully received and recorded by the payee or the entity managing the payment."
        },
        "last_paid_due_date": {
          "type": "string",
          "format": "date",
          "comment": "A last payment paid due date refers to the deadline or the final date by which the most recent payment should have been made to fulfill an outstanding financial obligation."
        },
        "last_paid_received_date": {
          "type": "string",
          "format": "date",
          "comment": "A last payment paid received date refers to the date on which the most recent payment was received by the payee or the entity managing the payment."
        },
        "late_charge_amount": {
          "type": "decimal",
          "comment": "A late charge amount, also known as a late fee, is an additional charge imposed on a payer when a payment is not made by the specified due date or within the grace period provided. It is a penalty or fee for late payment."
        },
        "late_charge_grace_period_days_count": {
          "type": "integer",
          "comment": "Late charge grace period days count refers to a specified number of days during which a payment can be made after the original due date without incurring a late fee or penalty. It is an allowance granted by the creditor or service provider to give the payer some additional time to submit the payment without facing immediate consequences."
        },
        "late_charge_maximum_amount": {
          "type": "decimal",
          "comment": "A late charge maximum amount refers to the maximum fee or penalty imposed by a creditor or service provider when a payment is not made by the due date or within the specified grace period. It represents the maximum additional amount that the payer is required to pay on top of the original payment due in order to cover the cost of the late payment."
        },
        "late_charge_minimum_amount": {
          "type": "decimal",
          "comment": "A late charge minimum amount refers to the minimum fee or penalty imposed by a creditor or service provider when a payment is not made by the due date or within the specified grace period. It represents the minimum additional amount that the payer is required to pay on top of the original payment due in order to cover the cost of the late payment."
        },
        "late_charge_payment_calculation_description": {
          "type": "string",
          "comment": "Late charge payment calculation description provides details on how a late charge payment is calculated."
        },
        "next_fourth_payment_amount": {
          "type": "decimal",
          "comment": "Next fourth payment amount refers to the specific value or sum of money that must be transferred or exchanged after the next third payment amount, as part of a payment transaction."
        },
        "next_payment_amount": {
          "type": "decimal",
          "comment": "Next payment amount refers to the specific value or sum of money that must next be transferred or exchanged as part of a payment transaction. It represents the monetary value or quantity that the payer will provide next to the payee."
        },
        "next_payment_due_date": {
          "type": "string",
          "format": "date",
          "comment": "A next payment due date refers to the next date by which the next payment must be made to fulfill an outstanding financial obligation."
        },
        "next_second_payment_amount": {
          "type": "decimal",
          "comment": "Next second payment amount refers to the specific value or sum of money that must be transferred or exchanged after the next payment amount, as part of a payment transaction."
        },
        "next_third_payment_amount": {
          "type": "decimal",
          "comment": "Next third payment amount refers to the specific value or sum of money that must be transferred or exchanged after the next second payment amount, as part of a payment transaction."
        },
        "payment_amount": {
          "type": "decimal",
          "comment": "A payment amount is the specific value or sum of money that is being transferred or exchanged as part of a payment transaction. It represents the monetary value or quantity that the payer is providing to the payee."
        }
      },
      "relationships": {}
    },
    {
      "type": "payoff",
      "container_name": "payoffs",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "integrated_disclosure_section_type": {
          "enum": [
            "ServicesYouCanShopFor",
            "DueFromSellerAtClosing",
            "PaidAlreadyByOrOnBehalfOfBorrowerAtClosing",
            "InitialEscrowPaymentAtClosing",
            "Prepaids",
            "ServicesYouCannotShopFor",
            "TaxesAndOtherGovernmentFees",
            "TotalOtherCosts",
            "DueFromBorrowerAtClosing",
            "OtherCosts",
            "PayoffsAndPayments",
            "TotalLoanCosts",
            "ServicesBorrowerDidNotShopFor",
            "ServicesBorrowerDidShopFor",
            "TotalClosingCosts",
            "OriginationCharges",
            "DueToSellerAtClosing",
            null
          ],
          "comment": "Refers to a specific category of closing costs such as prepaids and services you can shop for. This section type appears on a closing costs integrated disclosure.",
          "type": [
            "string",
            "null"
          ]
        },
        "integrated_disclosure_section_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to capture additional information when Other is selected for Integrated Disclosure Section Type."
        },
        "liability_account_remains_open_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the liability account will remain open after the outstanding balance is paid off."
        },
        "payoff_account_number_identifier": {
          "type": "string",
          "comment": "The account number associated with the debt that is being paid off as part of the closing transaction."
        },
        "payoff_action_type": {
          "enum": [
            "TitleCompanyOrderPayoff",
            "TitleCompanyOrderSubordinate",
            "LenderOrderBothPayoffSubordinate",
            "LenderOrderSubordinate",
            "LenderOrderPayoff",
            "TitleCompanyOrderBothPayoffSubordinate",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "payoff_action_type_other_description": {
          "type": "string",
          "comment": "Specifies the other type of action related to the liability payoff when Other is selected."
        },
        "payoff_amount": {
          "type": "decimal",
          "comment": "The dollar amount for the debt that is being paid off as part of the closing transaction."
        },
        "payoff_application_sequence_type": {
          "enum": [
            "JustPayoff",
            "NormalPaymentThenPayoff",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "payoff_ordered_datetime": {
          "type": "dateTime",
          "comment": "The date and time that a payoff order was submitted to the existing lien holder."
        },
        "payoff_partial_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the amount being paid does not fully satisfy the liability."
        },
        "payoff_per_diem_amount": {
          "type": "decimal",
          "comment": "The payoff amount as a per diem (daily) dollar amount."
        },
        "payoff_prepayment_penalty_amount": {
          "type": "decimal",
          "comment": "The dollar amount of the Prepayment Penalty charged on the account being paid in full."
        },
        "payoff_requested_by_type": {
          "type": "string"
        },
        "payoff_requested_by_type_other_description": {
          "type": "string",
          "comment": "A free-form text field that specifies the enumeration when the value of Other is used for the Payoff Requested By Type."
        },
        "payoff_requested_date": {
          "type": "string",
          "format": "date",
          "comment": "The date that the payoff was requested."
        },
        "payoff_specified_hud1_line_number_value": {
          "type": "string",
          "comment": "Payoff Specified HUD1 Line Number Value"
        },
        "payoff_through_date": {
          "type": "string",
          "format": "date",
          "comment": "The last valid date that is covered in the payoff amount."
        }
      },
      "relationships": {}
    },
    {
      "type": "person",
      "container_name": "people",
      "is_deprecated": false,
      "deprecated_properties": [
        "has_role",
        "email_address",
        "has_address",
        "home_phone_number",
        "phone_number",
        "work_phone_number",
        "has_expense",
        "has_unsubscribed",
        "earns",
        "gives_consent",
        "has_alias",
        "has_asset",
        "has_communication_method",
        "has_consumer_profile",
        "has_contract",
        "has_credit",
        "has_declaration",
        "has_dependent",
        "has_education",
        "has_employment",
        "has_expense",
        "has_finance_relation",
        "has_government_monitoring",
        "has_identity",
        "has_interest",
        "has_liability",
        "has_license",
        "has_military_service",
        "has_ownership",
        "has_residency",
        "has_saved_search",
        "has_signature",
        "owned_environments",
        "subscribes_to",
        "has_person_validation",
        "person_identifier",
        "full_name",
        "raw_name",
        "gender",
        "ssn",
        "age",
        "death_date",
        "death_indicator",
        "first_time_home_owner",
        "middle_initial",
        "marital_status_type"
      ],
      "description": "Represents an individual person with comprehensive personal information including name, demographics, identification, citizenship status, and biographical details. Used for property ownership, loan applications, and other real estate transactions.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "age": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "Age of individual based on either date of birth or other statistical data.",
          "minimum": 1
        },
        "birth_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "A birth date is the date on which a person was born. It typically includes the day, month, and year of an individual's birth and is used to determine their age.",
          "minLength": 1
        },
        "death_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "Specifies the date on which a person passed away. This can be used in records to memorialize an individual and provide clarity in historical or genealogical contexts.",
          "minLength": 1
        },
        "death_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the person has died."
        },
        "first_name": {
          "type": "string",
          "minLength": 1,
          "pattern": "^[A-Z][a-z]*([ \\-',.][A-Za-z][a-z]*)*$",
          "comment": "A person's first name is the name that they are given at birth or during infancy, and it is typically used to identify them in a personal or informal context."
        },
        "first_time_home_owner": {
          "type": "boolean",
          "comment": "First time home owner refers a person who is purchasing a house and taking out a mortgage for the first time."
        },
        "full_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A person's complete name, typically consisting of their first name, middle name (if applicable), and last name or surname.",
          "minLength": 1
        },
        "raw_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A person's complete name, typically consisting of their first name, middle name (if applicable), and last name or surname.",
          "minLength": 1
        },
        "gender": {
          "enum": [
            "InformationNotProvidedUnknown",
            "NotApplicable",
            "Female",
            "Male",
            "ApplicantSelectedBothMaleAndFemale",
            null
          ],
          "comment": "Gender refers to the social, cultural, and personal roles, expectations, and identities associated with being male, female, a blend of both, or neither, and is distinct from biological sex.",
          "type": [
            "string",
            "null"
          ]
        },
        "has_expense": {
          "type": [
            "string",
            "null"
          ],
          "comment": "An expense represents a cost incurred by an entity in the process of generating revenue.",
          "minLength": 1
        },
        "last_name": {
          "type": "string",
          "minLength": 1,
          "pattern": "^[A-Z][a-z]*([ \\-',.][A-Za-z][a-z]*)*$",
          "comment": "A person's last name, also known as surname or family name, is typically the name that is shared by all members of their immediate family."
        },
        "marital_status_type": {
          "enum": [
            "Unmarried",
            "Unknown",
            "NotProvided",
            "Separated",
            "Married",
            "Divorced",
            null
          ],
          "type": [
            "string",
            "null"
          ],
          "comment": "Marital_status_type represents an individual's current legal or social relationship status, such as married, single, divorced, or widowed."
        },
        "middle_initial": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Middle_initial is a single-letter representation of a person's middle name, often used to distinguish individuals with similar names or provide additional personal identification.",
          "minLength": 1
        },
        "middle_name": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^[A-Z][a-zA-Z\\s\\-',.]*$",
          "comment": "The middle name of the individual represented by the parent object",
          "minLength": 1
        },
        "person_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A person identifier is a unique code or string of characters assigned to a Staircase employee or other person who works in a Staircase work week. The identifier is generated remotely and used to uniquely identify that person.",
          "minLength": 1
        },
        "prefix_name": {
          "enum": [
            "Mr.",
            "Mrs.",
            "Ms.",
            "Miss",
            "Mx.",
            "Dr.",
            "Prof.",
            "Rev.",
            "Fr.",
            "Sr.",
            "Br.",
            "Capt.",
            "Col.",
            "Maj.",
            "Lt.",
            "Sgt.",
            "Hon.",
            "Judge",
            "Rabbi",
            "Imam",
            "Sheikh",
            "Sir",
            "Dame",
            null
          ],
          "type": [
            "string",
            "null"
          ],
          "comment": "Common honorifics or titles preceding names. Adjust this list based on cultural or domain-specific requirements."
        },
        "ssn": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A Social Security number (SSN) is a unique nine-digit identification number assigned to individuals in the United States by the Social Security Administration (SSA). The SSN is used primarily for tracking individuals for Social Security and tax purposes, but it is also used for a variety of other purposes, such as credit reporting, employment verification, and financial transactions.",
          "minLength": 1
        },
        "suffix_name": {
          "enum": [
            "Jr.",
            "Sr.",
            "II",
            "III",
            "IV",
            "PhD",
            "MD",
            "Esq.",
            "JD",
            "LLM",
            "MBA",
            "RN",
            "DDS",
            "DVM",
            "CFA",
            "CPA",
            "PE",
            "PMP",
            "Esq.",
            "Emeritus",
            "Ret.",
            null
          ],
          "type": [
            "string",
            "null"
          ],
          "comment": "Suffixes typically denote generational titles, academic degrees, or professional certifications."
        },
        "us_citizenship_status": {
          "enum": [
            "NonPermanentResidentAlien",
            "NonPermResidentAlien",
            "PermResidentAlien",
            "PermanentResidentAlien",
            "USCitizenAbroad",
            "USCitizen",
            "ForeignNational",
            null
          ],
          "type": [
            "string",
            "null"
          ],
          "comment": "Citizenship status refers to an individual's legal status as a citizen or non-citizen of a country. In the United States, citizenship status is determined by birthright, naturalization, or other legal means."
        },
        "veteran_status": {
          "type": [
            "boolean",
            "null"
          ],
          "comment": "Veteran status refers to an individual's status as a former member of the armed forces. In the United States, a person is considered a veteran if they have served in the active military, naval, or air service and were discharged or released from that service under conditions other than dishonorable."
        }
      },
      "example": {
        "source_http_request": "GET /Property/Details?parcelId={{request_identifier}} HTTP/1.1\r\nHost: pbcpao.gov\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nConnection: keep-alive\r\n\r\n",
        "request_identifier": "52434205310037080",
        "prefix_name": null,
        "first_name": "Soofi",
        "middle_name": null,
        "last_name": "Safavi",
        "suffix_name": null,
        "birth_date": null,
        "us_citizenship_status": null,
        "veteran_status": null
      },
      "relationships": {
        "has_unsubscribed": {
          "targets": [
            "unsubscribe"
          ]
        },
        "earns": {
          "targets": [
            "income"
          ],
          "comment": "A person has income. Income is information about the money that a person or organization earns or receives on a regular basis from various sources. For a person, income typically comes from wages or salaries earned from employment, as well as from investments, rental properties, or other sources of passive income. Income for organizations can come from sales of products or services, investments, grants, donations, or other sources."
        },
        "gives_consent": {
          "targets": [
            "consent"
          ],
          "comment": "Establishes that the consent has been provided by a particular individual, linking the person to the consent they have granted."
        },
        "has_alias": {
          "targets": [
            "person"
          ],
          "comment": "Refers to an alternative name or pseudonym used by a person apart from their original or legal name. Alias names can be used for various reasons, ranging from personal preferences to professional or legal necessities."
        },
        "has_asset": {
          "targets": [
            "asset"
          ],
          "comment": "Relates to valuable resources or possessions."
        },
        "has_communication_method": {
          "targets": [
            "communication"
          ],
          "comment": "The method of communication."
        },
        "has_consumer_profile": {
          "targets": [
            "consumer_profile"
          ],
          "comment": "Associates a person with their detailed consumer profile, capturing their interests, purchasing behaviors, and other related preferences. This relationship enables a deeper understanding of the individual's consumer habits and potential buying tendencies."
        },
        "has_contract": {
          "targets": [
            "contract"
          ],
          "comment": "A relationship indicating that a person or entity is associated with, or bound by, a particular contract."
        },
        "has_credit": {
          "targets": [
            "credit"
          ],
          "comment": "Credit refers to information about an individual's or organization's creditworthiness: their ability to borrow money with the promise of repaying the debt later, the amount of money they've borrowed but haven't repaid, and their history of repaying debt according to credit agreements."
        },
        "has_declaration": {
          "targets": [
            "declaration"
          ],
          "comment": "Indicates the association to declaration have been made or are associated with."
        },
        "has_dependent": {
          "targets": [
            "person"
          ],
          "comment": "Information about the person's dependents."
        },
        "has_education": {
          "targets": [
            "education"
          ],
          "comment": "Indicates the academic or professional educational background and achievements of the person."
        },
        "has_employment": {
          "targets": [
            "employment",
            "employment"
          ],
          "comment": "Employment refers to the state of being employed, meaning a person has a job or occupation and is receiving compensation for their work."
        },
        "has_expense": {
          "targets": [
            "expense"
          ],
          "comment": "A cost incurred by the property as part of maintenance, rental, or another process."
        },
        "has_finance_relation": {
          "targets": [
            "finance_relation"
          ],
          "comment": "Links to financial relationships or transactions."
        },
        "has_government_monitoring": {
          "targets": [
            "government_monitoring"
          ],
          "comment": "Indicates oversight or surveillance by governmental entities."
        },
        "has_identity": {
          "targets": [
            "identity"
          ],
          "comment": "Identity refers to unique identification or credentials assigned to an individual."
        },
        "has_interest": {
          "targets": [
            "interest"
          ],
          "comment": "A property that associates a person with their specific areas of liking or enthusiasm, represented by the 'interest' entity."
        },
        "has_liability": {
          "targets": [
            "liability"
          ],
          "comment": "Represents the financial obligations or debts that an individual or entity has, typically arising from borrowed funds, owed services, or other commitments. This relationship highlights the indebtedness and the financial responsibilities that need to be met"
        },
        "has_license": {
          "targets": [
            "license"
          ],
          "comment": "Indicates the licenses possessed or required."
        },
        "has_military_service": {
          "targets": [
            "military_service"
          ],
          "comment": "A relationship indicating that a person is associated with military service"
        },
        "has_ownership": {
          "targets": [
            "ownership"
          ],
          "comment": "The ownership record associated with a person."
        },
        "has_residency": {
          "targets": [
            "residence"
          ],
          "comment": "Represents the place or location where the person currently lives or has lived."
        },
        "has_saved_search": {
          "targets": [
            "saved_search"
          ],
          "comment": "Links a person to a saved search instance, indicating that the person has saved this particular search."
        },
        "has_signature": {
          "targets": [
            "signature"
          ],
          "comment": "Refers to signatures associated with the document."
        },
        "owned_environments": {
          "targets": [
            "environment"
          ],
          "comment": "Owned environment refers to a computing environment that is fully controlled by a particular person or organization. In an owned environment, the person or organization has complete control over the configuration, management, and security of the computing resources. This allows them to customize the environment to their specific needs and requirements, and to ensure that it is optimized for the application or service they are running."
        },
        "subscribes_to": {
          "targets": [
            "subscription"
          ],
          "comment": "Denotes the subscription that customer is currently signed up for or associated with."
        },
        "has_person_validation": {
          "targets": [
            "person_validation"
          ],
          "comment": "Indicates the validation status of the person."
        }
      },
      "required": [
        "first_name",
        "last_name"
      ]
    },
    {
      "type": "communication_validation",
      "container_name": "communication_validations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "validation_status": {
          "type": "boolean",
          "comment": "Indicates the validation status of the communication."
        },
        "validation_provider": {
          "type": "string",
          "comment": "The entity that provided the validation."
        },
        "validation_provider_status": {
          "type": "string",
          "comment": "The status of the validation provider."
        },
        "validation_provider_sub_status": {
          "type": "string",
          "comment": "The sub status of the validation provider."
        },
        "validation_datetime": {
          "type": "dateTime",
          "comment": "The date and time that the name was validated."
        }
      },
      "relationships": {}
    },
    {
      "type": "person_validation",
      "container_name": "people_validations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "name_validation": {
          "type": "boolean",
          "comment": "Indicates the validation status of the person's name."
        },
        "name_swap_validation": {
          "type": "boolean",
          "comment": "Indicates the validation status of the person's first name and last name when they are swapped."
        },
        "validation_datetime": {
          "type": "dateTime",
          "comment": "The date and time that the name was validated."
        }
      },
      "relationships": {}
    },
    {
      "type": "permission",
      "container_name": "permissions",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "company_contact_role_type": {
          "enum": [
            "ProductManager",
            "CMO",
            "HumanResourcesManager",
            "VicePresident",
            "CTO",
            "CFO",
            "MarketingManager",
            "President",
            "Lawyer",
            "COO",
            "BillingContact",
            "CEO",
            null
          ],
          "comment": "A company contact role type refers to the specific role or position that an individual holds within a company or organization.",
          "type": [
            "string",
            "null"
          ]
        },
        "permission_identifier": {
          "type": "string",
          "comment": "A permission identifier is a unique code or number assigned to a permission for identification purposes. It is often used in various administrative and legal systems to ensure accuracy and consistency in record-keeping and data management."
        }
      },
      "relationships": {
        "has_company": {
          "targets": [
            "company"
          ],
          "comment": "A company is a legal entity formed by a group of people or individuals for the purpose of carrying out a business or commercial activity."
        }
      }
    },
    {
      "type": "prepaid_item",
      "container_name": "prepaid_items",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "prepaid_item_estimated_total_amount": {
          "type": "decimal",
          "comment": "Estimate of the total cost amount of prepaid item."
        },
        "prepaid_item_number_of_days_count": {
          "type": "integer",
          "comment": "A number representing the number of days for which an item has been prepaid."
        },
        "prepaid_item_number_of_months_count": {
          "type": "integer",
          "comment": "A number representing the number of months for which an item has been prepaid."
        },
        "prepaid_item_per_diem_amount": {
          "type": "decimal",
          "comment": "Estimate of the cost per day that has been prepaid."
        },
        "prepaid_item_per_diem_percent": {
          "type": "decimal",
          "comment": "The percentage rate used to calculate the per diem amount of cost prepaid."
        },
        "prepaid_item_type": {
          "enum": [
            "HomeownersAssociationSpecialAssessment",
            "MortgageInsurancePremium",
            "BoroughPropertyTax",
            "CooperativeAssociationSpecialAssessment",
            "CountyPropertyTax",
            "EarthquakeInsurancePremium",
            "HailInsurancePremium",
            "VolcanoInsurancePremium",
            "CityPropertyTax",
            "DistrictPropertyTax",
            "HazardInsurancePremium",
            "PrepaidInterest",
            "CondominiumAssociationSpecialAssessment",
            "TownPropertyTax",
            "HomeownersAssociationDues",
            "StatePropertyTax",
            "FloodInsurancePremium",
            "WindAndStormInsurancePremium",
            "CooperativeAssociationDues",
            "HomeownersInsurancePremium",
            "CondominiumAssociationDues",
            null
          ],
          "comment": "The type of item that the borrower prepaid.",
          "type": [
            "string",
            "null"
          ]
        },
        "prepaid_item_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional detail when 'other' is selected as the prepaid item type."
        }
      },
      "relationships": {}
    },
    {
      "type": "pricing_schema",
      "container_name": "pricing_schemas",
      "is_deprecated": true,
      "deprecated_properties": [
        "apr",
        "closing_cost",
        "discount",
        "first_year_monthly_payment",
        "monthly_insurance",
        "piti",
        "price",
        "pricing_schema_identifier",
        "principal_and_interest",
        "rate",
        "rebate",
        "second_year_monthly_payment",
        "third_year_monthly_payment",
        "total_monthly_payment"
      ],
      "properties": {
        "apr": {
          "type": "decimal",
          "comment": "Annual Percentage Rate (APR) represents the total cost of borrowing money over the life of the loan and is expressed as a percentage. The APR includes not only the interest rate, but also any points, origination fees, closing costs, and other charges associated with the loan. In general, the APR will be higher than the interest rate, since it includes the additional fees and charges associated with the loan. "
        },
        "closing_cost": {
          "type": "decimal",
          "comment": "Pricing schema closing costs define how much money a borrower will need to close on a mortgage. Closing costs refer to the fees and expenses that a borrower must pay at the closing of a mortgage loan."
        },
        "discount": {
          "type": "decimal",
          "comment": "A pricing schema discount is a reduction in the interest rate offered on a mortgage loan, typically in exchange for paying an upfront fee known as a discount point. Discount points are a form of prepaid interest that a borrower can pay at closing to reduce the interest rate on the mortgage loan. One discount point typically equals 1% of the loan amount and can reduce the interest rate by 0.125% to 0.25%, although the exact reduction may vary depending on the lender and loan program."
        },
        "first_year_monthly_payment": {
          "type": "decimal",
          "comment": "First year monthly payment refers to the amount of money that a borrower must pay each month during the first year of their mortgage loan. The first-year monthly payment will depend on several factors, including the loan amount, interest rate, term, and any upfront costs, such as closing costs or prepaid expenses for property taxes and insurance. In some cases, lenders may offer a lower introductory interest rate or other incentives during the first year of the loan, which can result in a lower first-year monthly payment."
        },
        "monthly_insurance": {
          "type": "decimal",
          "comment": "Monthly insurance refers to the cost of mortgage insurance, which is an insurance policy that protects the lender in case the borrower defaults on the loan. Mortgage insurance is typically required when the borrower has a down payment of less than 20% of the home's purchase price. The monthly mortgage insurance premium is typically added to the borrower's monthly mortgage payment."
        },
        "piti": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "PITI stands for Principal, Interest, Taxes, and Insurance. PITI is a commonly used pricing schema in the mortgage industry to calculate the total monthly payment that a borrower will need to make on a mortgage loan."
        },
        "price": {
          "type": "decimal",
          "comment": "Price refers to the total cost of borrowing money for a mortgage loan. The price includes not only the interest rate charged on the loan but also any fees and charges associated with the loan, such as points, origination fees, and closing costs."
        },
        "pricing_schema_identifier": {
          "type": "string",
          "comment": "A pricing schema identifier is a unique identification number assigned to a mortgage pricing schema."
        },
        "principal_and_interest": {
          "type": "decimal",
          "comment": "A mortgage pricing schema that separates the mortgage payment into principal and interest is a way of structuring the payment so that a portion of the payment goes toward paying off the principal balance of the loan, and another portion goes toward paying the interest charged on the outstanding balance. In this schema, the principal is the original amount borrowed, and the interest is the fee charged by the lender for the use of the borrowed money. The mortgage payment is typically structured to pay off both the principal and interest over the life of the loan, with a greater proportion of the payment going towards interest at the beginning of the loan term and a greater proportion going towards principal as the loan matures."
        },
        "rate": {
          "type": "decimal",
          "comment": "Rate refers to the interest rate at which the borrower will be charged interest on the outstanding balance of the loan. The interest rate does not take into account any fees or charges associated with the loan. In general, the interest rate will be lower than the annual percentage rate (APR) will be higher than the interest rate, since it does not include the additional fees and charges associated with the loan."
        },
        "rebate": {
          "type": "decimal",
          "comment": "Rebate refers to a discount or credit that a lender offers to a borrower as an incentive to select a particular mortgage pricing option. It allows lenders to offer borrowers lower interest rates or fees in exchange for selecting a particular mortgage pricing structure."
        },
        "second_year_monthly_payment": {
          "type": "decimal",
          "comment": "Second year monthly payment refers to the amount of money that a borrower must pay each month starting from the second year of the mortgage loan term. For fixed-rate mortgages, the monthly payment for a mortgage loan will remain the same throughout the entire term of the loan. However, some adjustable-rate mortgages (ARMs) have an initial fixed-rate period, after which the interest rate and monthly payment can change based on market conditions. Therefore, if a mortgage loan has an adjustable interest rate with an initial fixed-rate period of one year, the second-year monthly payment will depend on the current market interest rate at the end of the initial fixed period. The monthly payment may increase or decrease based on the interest rate at that time, which can result in a higher or lower payment amount for the borrower."
        },
        "third_year_monthly_payment": {
          "type": "decimal",
          "comment": "Third year monthly payment refers to the amount a money that a borrower must pay each month to repay a mortgage loan during the third year of the loan term. The third year monthly payment can be calculated based on the loan amount, interest rate, and amortization term of the mortgage loan. However, the interest rate and other terms of the loan may change over time, particularly if the loan has an adjustable-rate mortgage (ARM) feature. In this case, the third year monthly payment would depend on the interest rate at that time, which may be higher or lower than the initial rate."
        },
        "total_monthly_payment": {
          "type": "decimal",
          "comment": "Total monthly payment refers to the amount of money a borrower must pay each month to repay a mortgage loan, including principal and interest, as well as any escrow payments for property taxes and homeowners insurance."
        }
      },
      "relationships": {}
    },
    {
      "type": "process",
      "container_name": "process",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {},
      "relationships": {
        "has_loan_application_process": {
          "targets": [
            "loan_application_process"
          ],
          "comment": "loan_application_process encapsulates the sequence of processes needed to achieve tha goal of loan origination."
        }
      }
    },
    {
      "type": "product_api",
      "container_name": "product_apis",
      "is_deprecated": false,
      "deprecated_properties": [
        "has_example",
        "has_request_sample",
        "has_response_sample"
      ],
      "properties": {
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        },
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        },
        "product_api_identifier": {
          "type": "string",
          "comment": "A product API identifier is a unique code or string of characters assigned to a specific product API that is used to uniquely identify and access that product API. Product API identifiers are often used in conjunction with other authentication mechanisms, such as API keys or OAuth tokens, to ensure secure and authorized access to the product API."
        },
        "product_api_invocation_type": {
          "enum": [
            "Analytics",
            "SinglePartner",
            "Operation",
            "AggregatedPartner",
            "Notification",
            "Proxy",
            null
          ],
          "comment": "Product API invocation type refers to the method in which a product API is invoked to perform a specific operation or access a particular functionality.",
          "type": [
            "string",
            "null"
          ]
        },
        "product_api_type": {
          "enum": [
            "Configuration",
            "Function",
            "Platform",
            null
          ],
          "comment": "A product API type is a classification or categorization of a product Application Programming Interface (API) based on its characteristics, purpose, or functionality.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_api": {
          "targets": [
            "api"
          ]
        },
        "has_api_schema": {
          "targets": [
            "api_schema"
          ],
          "comment": "An API schema describes the authorization rules, data format, expected data types, parameters, field names, and validation rules for an API endpoint."
        },
        "has_example": {
          "targets": [
            "example"
          ],
          "comment": "The 'has_example' property links a product API to specific examples that illustrate how the API can be used. These examples may include code snippets, request and response samples, or other practical demonstrations that help developers understand how to interact with the API."
        },
        "has_price": {
          "targets": [
            "product_price"
          ],
          "comment": "A product price amount is the numerical value of the price that a customer must pay to purchase a Staircase unit, such as a transaction or subscription."
        },
        "has_product": {
          "targets": [
            "product"
          ],
          "comment": "The 'has_product' property connects an invocation to a specific product or service that is being affected or manipulated through the invocation. This relationship can help in understanding the interaction between the invocation and the corresponding product"
        },
        "has_product_api_example": {
          "targets": [
            "example"
          ],
          "comment": "The 'has_example' property links a product API to specific examples that illustrate how the API can be used. These examples may include code snippets, request and response samples, or other practical demonstrations that help developers understand how to interact with the API."
        },
        "has_product_configuration": {
          "targets": [
            "product_configuration"
          ],
          "comment": "Product configuration refers to the process of customizing a product to meet specific customer needs and requirements."
        },
        "has_request_sample": {
          "targets": [
            "collection"
          ],
          "comment": "A request sample provides an example request as required by an API. It helps developers by offering a practical demonstration on how to send a request to the API. API requests are the primary means by which developers interact with APIs to retrieve data, send data, or perform actions."
        },
        "has_response_sample": {
          "targets": [
            "collection"
          ],
          "comment": "A response sample provides an example response as returned by an API. It offers developers a clear understanding of the structure and format of the data that will be returned by the API."
        }
      }
    },
    {
      "type": "product_category",
      "container_name": "product_categories",
      "is_deprecated": true,
      "deprecated_properties": [],
      "properties": {
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        },
        "icon_url": {
          "type": "string",
          "comment": "An icon URL is a string of characters that provides a unique internet address for an icon that represents the product. The URL is used to locate and retrieve the icon."
        },
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        },
        "product_category_identifier": {
          "type": "string"
        }
      },
      "relationships": {}
    },
    {
      "type": "product_configuration",
      "container_name": "product_configurations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        },
        "product_configuration_identifier": {
          "type": "string",
          "comment": "A product configuration identifier is a unique code or string of characters assigned to a specific product configuration that is used to uniquely identify and access that product configuration."
        }
      },
      "relationships": {
        "configured_for_api": {
          "targets": [
            "product_api"
          ],
          "comment": "Configured_for_api indicates the product_api that the configuration is associated with."
        },
        "configured_for_company": {
          "targets": [
            "company"
          ],
          "comment": "Configured_for indicates the company that the configuration has been created for."
        },
        "configured_for_product": {
          "targets": [
            "product"
          ],
          "comment": "Configured_for indicates the product that the configuration is associated with."
        },
        "has_configuration": {
          "targets": [
            "configuration",
            "product_configuration"
          ],
          "comment": "Configuration is a type of filter that narrows down a dataset to display only specific data related to the given configuration."
        },
        "has_product": {
          "targets": [
            "product"
          ],
          "comment": "The 'has_product' property connects an invocation to a specific product or service that is being affected or manipulated through the invocation. This relationship can help in understanding the interaction between the invocation and the corresponding product"
        },
        "has_product_api": {
          "targets": [
            "product_api"
          ],
          "comment": "The 'has_product_api' property links an invocation to a specific product API that is being accessed or utilized during the invocation. This connection provides details about the API and its role in the invocation process"
        },
        "owned_by_company": {
          "targets": [
            "company"
          ],
          "comment": "Owned_by indicates the company that owns the configuration."
        }
      }
    },
    {
      "type": "product_family",
      "container_name": "product_families",
      "is_deprecated": true,
      "deprecated_properties": [],
      "properties": {
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        },
        "icon_url": {
          "type": "string",
          "comment": "An icon URL is a string of characters that provides a unique internet address for an icon that represents the product. The URL is used to locate and retrieve the icon."
        },
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        },
        "product_family_identifier": {
          "type": "string"
        }
      },
      "relationships": {}
    },
    {
      "type": "product_price",
      "container_name": "product_prices",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "product_price_amount": {
          "type": "decimal",
          "comment": "A product price amount is the amount of money that a customer is required to pay to purchase a Staircase unit, such as a transaction or subscription."
        },
        "product_price_amount_unit_type": {
          "enum": [
            "Cent",
            null
          ],
          "comment": "Price amount unit type refers to the monetary denomination that is used to express the price of a Staircase unit, such as a transaction or subscription.",
          "type": [
            "string",
            "null"
          ]
        },
        "product_price_calculation_type": {
          "enum": [
            "Maturity",
            "CostOfGoodsSold",
            "AverageSupplier",
            "EquivalentLaborCost",
            null
          ],
          "comment": "A product price calculation type refers to the method or approach used to determine the price of a Staircase unit, such as a transaction or subscription.",
          "type": [
            "string",
            "null"
          ]
        },
        "product_price_identifier": {
          "type": "string",
          "comment": "A product price identifier is a unique code or string of characters assigned to a specific product price that is used to uniquely identify and track the use of that product price."
        },
        "product_price_timing_type": {
          "enum": [
            "Monthly",
            "Completion",
            null
          ],
          "comment": "Price timing type describes when a customer will be billed and is based on a defined bulling schedule.",
          "type": [
            "string",
            "null"
          ]
        },
        "product_price_unit_type": {
          "enum": [
            "ApiCall",
            "Image",
            "Datapoint",
            "Transaction",
            "PersonHour",
            "Subscription",
            "Document",
            "Page",
            "PM",
            "Person",
            "PMHour",
            "Product",
            "Hour",
            "Seat",
            "Environment",
            null
          ],
          "comment": "Product price unit type refers to the unit of the platform where the price evaluation can be determined as relevant. Some examples of product price unit types include environment, product, transaction and subscription.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {}
    },
    {
      "type": "product",
      "container_name": "products",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        },
        "domain": {
          "type": "string",
          "comment": "An attribute representing the specific area, category, or field to which the product belongs. This classification helps in organizing products within a particular context or industry"
        },
        "function": {
          "enum": [
            "Contract",
            "Customer",
            "Validation",
            "Information",
            "Lead",
            "Legal",
            "Assessment",
            "Eligibility",
            "Integration",
            "Marketing",
            "Shipping",
            "Tool",
            "Verification",
            "Resource",
            "Automation",
            "Distribution",
            null
          ],
          "comment": "An attribute defining the specific function or purpose of the product. This might describe what the product is designed to achieve or its role within a system.",
          "type": [
            "string",
            "null"
          ]
        },
        "icon_url": {
          "type": "string",
          "comment": "An icon URL is a string of characters that provides a unique internet address for an icon that represents the product. The URL is used to locate and retrieve the icon."
        },
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        },
        "owned_by": {
          "type": "string",
          "comment": "The individual who holds the title or legal rights to the property."
        },
        "product_capability": {
          "enum": [
            "Unskilled",
            "Verified",
            "Web",
            "Rule",
            "Skilled",
            "Workflow",
            "No-code",
            "AGI",
            "DevOps",
            "Storage",
            "Authentication",
            null
          ],
          "comment": "A description of the capabilities or features of a product. This can include specific functions, abilities, or competencies that the product possesses.",
          "type": [
            "string",
            "null"
          ]
        },
        "product_identifier": {
          "type": "string",
          "comment": "A product identifier is a unique code or string of characters assigned to a specific product that is used to uniquely identify and access that product. Product identifiers are often used in conjunction with other authentication mechanisms, such as API keys or OAuth tokens, to ensure secure and authorized access to the product."
        },
        "product_type": {
          "enum": [
            "Labor",
            "Application",
            "API",
            "Data",
            null
          ],
          "comment": "A classification that describes the general category or type of the product. This can help in sorting or filtering products into meaningful groups.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_outage": {
          "targets": [
            "outage"
          ],
          "comment": "A reference to any disruptions, interruptions, or downtimes associated with the product. An outage denotes periods when the product is not operational due to technical issues, maintenance, or other factors. This property provides insights into the product's reliability and availability for users."
        },
        "has_product_api": {
          "targets": [
            "product_api"
          ],
          "comment": "The 'has_product_api' property links an invocation to a specific product API that is being accessed or utilized during the invocation. This connection provides details about the API and its role in the invocation process"
        },
        "has_product_configuration": {
          "targets": [
            "product_configuration"
          ],
          "comment": "Product configuration refers to the process of customizing a product to meet specific customer needs and requirements."
        },
        "has_task_project": {
          "targets": [
            "task_project"
          ],
          "comment": "Task management system of the product"
        },
        "integrated_with": {
          "targets": [
            "product"
          ],
          "comment": "This property signifies that a particular product is integrated with another product, possibly leveraging its functionalities or features. Such integrations might be for enhanced capabilities, interoperability, or collaborative functions between products."
        },
        "owned_by": {
          "targets": [
            "company",
            "person"
          ],
          "comment": "The individual who holds the title or legal rights to the property."
        },
        "using_product": {
          "targets": [
            "product"
          ]
        }
      }
    },
    {
      "type": "projected_payment",
      "container_name": "projected_payments",
      "is_deprecated": false,
      "deprecated_properties": [
        "calculation_period_type_enumerations"
      ],
      "properties": {
        "calculation_period_start_number": {
          "type": "integer",
          "comment": "A number representing the time on which a period starts (e.g. the 1 in Year 1)."
        },
        "calculation_period_type": {
          "enum": [
            "Day",
            "Quarterly",
            "Month",
            "Yearly",
            "Annually",
            "Semimonthly",
            "Daily",
            "Annual",
            "Monthly",
            "Year",
            "Biweekly",
            "Week",
            "Weekly",
            "Semiannually",
            null
          ],
          "comment": "Indicates a period of time such as day, month and year.",
          "type": [
            "string",
            "null"
          ]
        },
        "projected_payment_estimated_escrow_amount_can_increase_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the estimated monthly escrow payment that a borrower can expect to make on a loan might increase."
        },
        "projected_payment_estimated_escrow_payment_amount": {
          "type": "decimal",
          "comment": "Estimate of the monthly escrow payment that a borrower can expect to make on a loan."
        },
        "projected_payment_estimated_total_payment_amount": {
          "type": "decimal",
          "comment": "Estimate of the total monthly payment that a borrower can expect to make on a loan."
        },
        "projected_payment_mi_payment_amount": {
          "type": "decimal",
          "comment": "Estimate of the monthly mortgage insurance payment that a borrower can expect to make on a loan."
        },
        "projected_payment_principal_and_interest_payment_amount": {
          "type": "decimal",
          "comment": "Estimate of the monthly principal and interest payment that a borrower can expect to make on a loan."
        }
      },
      "relationships": {}
    },
    {
      "type": "project",
      "container_name": "projects",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "remote_project_identifier": {
          "type": "string",
          "comment": "A remote project identifier is a unique code or string of characters assigned to a specific project that is used to uniquely identify and access that project."
        },
        "title": {
          "type": "string",
          "comment": "A title is a unique label given to a ticket that is used to distinguish it from other tickets in the Staircase ticket management system. A title typically reflects the purpose of the ticket, and is often designed to be easy to remember and to quickly communicate support needs."
        }
      },
      "relationships": {
        "has_member": {
          "targets": [
            "member"
          ],
          "comment": "A member is a person who is assigned to support an object (e.g. ticket, project) in the Staircase platform."
        },
        "has_ticket": {
          "targets": [
            "ticket"
          ],
          "comment": "A ticket is a record of a customer's or engineer's question, request, or issue that needs to be addressed by a support team."
        }
      }
    },
    {
      "type": "property_seed",
      "container_name": "property_seed",
      "description": "A minimum set of house property seed data containing essential identifying information for property records.",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "parcel_id": {
          "type": "string",
          "minLength": 1,
          "comment": "A unique identifier for the property parcel as assigned by the local assessor or jurisdiction."
        }
      },
      "example": {
        "parcel_id": "52434205310037080",
        "source_http_request": {
          "method": "GET",
          "url": "https://pbcpao.gov/Property/Details",
          "multiValueQueryString": {
            "parcelId": [
              "52434205310037080"
            ]
          }
        },
        "request_identifier": "52434205310037080"
      }
    },
    {
      "type": "property",
      "description": "The Property class serves as the foundational data structure for capturing essential characteristics and legal identifiers of real estate properties, providing comprehensive documentation for financing, legal, and classification purposes. It defines physical attachment relationships through attachment types (attached, detached, semi-detached) and categorizes properties by unit count for mortgage banking purposes, ranging from single-family homes to multi-unit properties up to fourplexes, which directly impacts loan-to-value ratios, debt-to-income requirements, and lending risk assessments. The class maintains critical legal documentation including unique parcel identifiers that distinguish properties within jurisdictions and detailed legal descriptions outlining exact boundaries, dimensions, and governmental recognition for contracts and legal documents. It captures construction timeline data through built year information and provides extensive property type classifications spanning residential options from single-family detached homes and condominiums to manufactured housing, cooperatives, timeshares, and multi-family units. This comprehensive property classification system is essential for mortgage underwriting, legal documentation, zoning compliance, insurance purposes, and real estate market analysis, ensuring accurate property categorization across various real estate transactions and regulatory requirements.",
      "container_name": "properties",
      "is_deprecated": false,
      "deprecated_properties": [
        "area",
        "geo_area",
        "full_address_txt",
        "has_room",
        "has_homeowners_association",
        "has_appliance",
        "bedroom_count",
        "unit",
        "has_exterior",
        "city_name",
        "county_name",
        "postal_code",
        "state_code",
        "state_name",
        "street_name",
        "builder_model",
        "lot_size_number",
        "gross_living_area_square_feet_number",
        "has_comparable",
        "has_address",
        "has_appliance",
        "has_development",
        "has_subdivision",
        "has_school",
        "has_expense",
        "has_exterior",
        "has_finance_relation",
        "has_homeowners_association",
        "has_lot",
        "has_photos",
        "has_property_valuation",
        "has_rental_income",
        "has_room",
        "has_section",
        "has_structure",
        "has_tax",
        "has_utility",
        "township",
        "range",
        "section",
        "block",
        "lot",
        "purchase_price_amount",
        "rental_estimated_gross_monthly_rent_amount",
        "rental_estimated_net_monthly_rent_amount",
        "rural_underserved_county_indicator",
        "stories_count",
        "total_room_count",
        "undefined_property_type",
        "accessory_unit_count",
        "accessory_unit_monthly_rent_amount",
        "affordable_units_count",
        "assignment_of_rents_indicator",
        "borrower_continues_to_own_property_indicator",
        "complex_name",
        "covered_spaces",
        "deed_restriction_indicator",
        "disaster_indicator",
        "existing_clean_energy_lien_indicator",
        "fha_secondary_residence_indicator",
        "financed_unit_count",
        "full_bathroom_count",
        "furnished_indicator",
        "ground_rent_indicator",
        "group_home_indicator",
        "half_bathroom_count",
        "home_owners_insurance_required_indicator",
        "housing_older_persons_act_indicator",
        "investment_rental_income_present_indicator",
        "pets_allowed_indicator",
        "water_front_indicator",
        "school_indicator",
        "gated_community_indicator",
        "private_pool_indicator",
        "planned_unit_development_pud_indicator",
        "prior_sale_in_last_twelve_months_indicator",
        "project_attachment_type",
        "project_design_type",
        "project_type",
        "project_usage_type",
        "property_acquired_date",
        "property_acquired_year",
        "lease_expiration_date",
        "lien_type",
        "lot_original_cost_amount",
        "market_value_improvement_amount",
        "metropolitan_division_indicator",
        "msa_indicator",
        "property_estimated_value_amount",
        "property_assessed_value_amount",
        "property_exemption_amount",
        "property_taxable_value_amount",
        "property_current_usage_type",
        "property_current_usage_type_other_description",
        "property_vacancy_date",
        "property_disposition_status_type",
        "property_disposition_status_type_other_description",
        "property_usage_type",
        "property_usage_type_other_description",
        "borrower_continues_to_own_property_indicator",
        "property_estimated_value_amount",
        "property_estimated_value_census_amount",
        "property_original_cost_amount",
        "property_existing_lien_amount",
        "owned_property_lien_upb_amount",
        "owned_property_lien_installment_amount",
        "owned_property_maintenance_expense_amount",
        "owned_property_rental_income_gross_amount",
        "owned_property_rental_income_net_amount",
        "owned_property_subject_indicator",
        "owned_property_disposition_status_type",
        "owned_property_owned_unit_count",
        "purchase_price_amount",
        "lot_original_cost_amount",
        "market_value_improvement_amount",
        "construction_improvement_cost_amount",
        "investment_rental_income_present_indicator",
        "lease_expiration_date",
        "property_ground_lease_expiration_date",
        "property_ground_lease_perpetual_indicator",
        "assignment_of_rents_indicator",
        "property_acquired_date",
        "property_acquired_year",
        "rental_estimated_gross_monthly_rent_amount",
        "rental_estimated_net_monthly_rent_amount",
        "accessory_unit_monthly_rent_amount",
        "furnished_indicator",
        "home_owners_insurance_required_indicator",
        "property_earthquake_insurance_indicator",
        "property_flood_insurance_indicator",
        "windstorm_insurance_required_indicator",
        "private_pool_indicator",
        "homeowners_association_indicator",
        "planned_unit_development_pud_indicator",
        "pud_indicator",
        "gated_community_indicator",
        "deed_restriction_indicator",
        "housing_older_persons_act_indicator",
        "project_attachment_type",
        "project_design_type",
        "project_type",
        "project_usage_type",
        "non_warrantable_project_indicator",
        "property_in_project_indicator",
        "property_inclusionary_zoning_indicator",
        "spa_indicator",
        "stories_count",
        "covered_spaces",
        "complex_name",
        "group_home_indicator",
        "builder_model",
        "accessory_unit_count",
        "affordable_units_count",
        "total_room_count",
        "rural_underserved_county_indicator",
        "prior_sale_in_last_twelve_months_indicator",
        "historic_indicator",
        "property_structure_built_year_estimated_indicator",
        "property_structure_habitable_year_round_indicator",
        "property_estate_type",
        "property_estate_type_other_description",
        "metropolitan_division_indicator",
        "fha_secondary_residence_indicator",
        "existing_clean_energy_lien_indicator",
        "community_land_trust_indicator",
        "community_property_state_indicator",
        "community_reinvestment_act_delineated_community_indicator",
        "property_taxable_value_amount",
        "lot_size_square_feet",
        "lot_living_size_square_feet",
        "land_trust_type_other_description",
        "construction_status_type_other_description",
        "construction_method_type_other_description",
        "land_use_type_other_description",
        "native_american_lands_type_other_description",
        "unique_dwelling_type_other_description",
        "property_identifier",
        "property_condition",
        "unique_dwelling_type",
        "property_previously_occupied_indicator",
        "property_mixed_usage_indicator",
        "construction_method_type",
        "construction_status_type",
        "garage_spaces",
        "land_trust_type",
        "land_use_description",
        "land_use_description",
        "lender_designated_declining_market_identifier",
        "manufactured_home_indicator",
        "manufactured_home_width_type",
        "property_current_occupant_name",
        "property_current_occupancy_type",
        "property_condition_description",
        "property_acreage_number",
        "native_american_lands_type",
        "land_use_type"
      ],
      "properties": {
        "source_http_request": {
          "type": "object",
          "minProperties": 1,
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data."
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "accessory_unit_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "Describes the number of accessory units associated with the structure",
          "minimum": 1
        },
        "accessory_unit_monthly_rent_amount": {
          "type": "decimal",
          "comment": "Amount of money received as rent from an accessory dwelling unit."
        },
        "affordable_units_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The number of individual dwelling units related to the property securing the loan or, in the case of an application, proposed to secure the loan that are income-restricted pursuant to Federal, State, or local affordable housing programs.",
          "minimum": 1
        },
        "assignment_of_rents_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that a signed Assignment of Rents associated with the property is in effect."
        },
        "bedroom_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The total number of bedrooms in a property.",
          "minimum": 1
        },
        "borrower_continues_to_own_property_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the property associated with the loan is still owned by the borrower(s)."
        },
        "builder_model": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Builder model refers to a specific design or floor plan offered by a home builder. This model represents a standardized layout and set of features that can be replicated in different homes within a development or community.",
          "minLength": 1
        },
        "community_land_trust_indicator": {
          "type": "boolean",
          "comment": "Indicates that the property is located in a community land trust."
        },
        "community_property_state_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the property is located in a community property state."
        },
        "community_reinvestment_act_delineated_community_indicator": {
          "type": "boolean",
          "comment": "Indicates that the property is in an area defined by the Community Reinvestment Act."
        },
        "complex_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Complex name refers to the official name of a residential or commercial development that consists of multiple units or buildings.",
          "minLength": 1
        },
        "construction_improvement_cost_amount": {
          "type": "decimal",
          "comment": "Expenses incurred in enhancing or upgrading an existing structure or property."
        },
        "construction_method_type": {
          "enum": [
            "Manufactured",
            "Modular",
            "SiteBuilt",
            "MobileHome",
            "OnFrameModular",
            null
          ],
          "comment": "Describes the construction process for the main dwelling unit of the subject property.",
          "type": [
            "string",
            "null"
          ]
        },
        "construction_method_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Construction Method Type.",
          "minLength": 1
        },
        "construction_status_type": {
          "enum": [
            "Existing",
            "SubjectToAlteration",
            "SubstantiallyRehabilitated",
            "Proposed",
            "Planned",
            "SubjectToAlterationImprovementRepairAndRehabilitation",
            "UnderConstruction",
            null
          ],
          "comment": "Specifies the physical status of the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "construction_status_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Construction Status Type.",
          "minLength": 1
        },
        "covered_spaces": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "Refers to the number of areas on the property that are protected from the elements by a roof or overhead structure.",
          "minimum": 1
        },
        "deed_restriction_indicator": {
          "type": "boolean",
          "comment": "If true, indicates that the deed has associated restrictions."
        },
        "disaster_indicator": {
          "type": "boolean",
          "comment": "Indicates that the property is damaged as a result of a natural disaster, such as a hurricane, tornado, or earthquake."
        },
        "existing_clean_energy_lien_indicator": {
          "type": "boolean",
          "comment": "existing clean energy lien indicator refers to the presence of a lien on the property related to clean energy upgrades or installations.\n\nThis lien is created when the homeowner finances their clean energy project through rdf:type loan, and the lender places rdf:type lien on the property as collateral for the loan. The \"existing clean energy lien indicator\" would indicate whether such a lien is present on the property, which could impact its value or future financing options."
        },
        "fha_secondary_residence_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the property usage falls under the FHA Secondary Residence policy and guidelines."
        },
        "financed_unit_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The number of individual family dwelling units being financed in the subject property.",
          "minimum": 1
        },
        "full_bathroom_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The total number of full bathrooms in a property.",
          "minimum": 1
        },
        "furnished_indicator": {
          "type": "boolean",
          "comment": "When true, refers to a property that comes equipped with furniture and often other necessary household items."
        },
        "garage_spaces": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "Refers to the number of parking spaces available within a garage on the property.",
          "minimum": 1
        },
        "ground_rent_indicator": {
          "type": "boolean",
          "comment": "When true indicates the property's title is held in a leasehold estate for which ground rent is paid."
        },
        "group_home_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the property will be used as a group home. A group home is used for individuals with special needs, including the frail elderly, developmentally and/or physically disabled."
        },
        "half_bathroom_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The total number of half bathrooms in a property.",
          "minimum": 1
        },
        "home_owners_insurance_required_indicator": {
          "type": "boolean",
          "comment": "Indicates if there's a requirement for the homeowner to have homeowners' insurance for the property. This is often a condition set by lenders to ensure the collateral (property) remains protected against potential damages."
        },
        "housing_older_persons_act_indicator": {
          "type": "boolean",
          "comment": "A property that is subject to the Housing for Older Persons Act (HOPA) refers to housing communities or developments that are specifically designed and operated to accommodate older adults, typically age 55 or older."
        },
        "investment_rental_income_present_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that an investment property is currently generating rental income on behalf of the owner."
        },
        "land_trust_type": {
          "enum": [
            "LandTrust",
            "IllinoisLandTrust",
            "CommunityLandTrust",
            null
          ],
          "comment": "A value from a MISMO prescribed list that specifies the type of land trust associated with the title.",
          "type": [
            "string",
            "null"
          ]
        },
        "land_trust_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Land Trust Type.",
          "minLength": 1
        },
        "land_use_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to further describe the land use of the property as defined by Land Use Type.Renamed from \"Land Use Comment\".",
          "minLength": 1
        },
        "land_use_type": {
          "enum": [
            "Commercial",
            "Agricultural",
            "TransportationAndUtility",
            "PublicAndSemipublic",
            "Vacant",
            "Recreational",
            "Residential",
            "Income",
            null
          ],
          "comment": "Identifies the designation of land use by a governmental authority described by Land Used Description.",
          "type": [
            "string",
            "null"
          ]
        },
        "land_use_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to describe the land use designation if Other is selected as the Property Land Use Type.",
          "minLength": 1
        },
        "lease_expiration_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "Specific date on which a lease agreement between a landlord and a tenant comes to an end.",
          "minLength": 1
        },
        "lender_designated_declining_market_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifies the type of declining market based on lender analysis.",
          "minLength": 1
        },
        "livable_floor_area": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The total square footage of attached, livable area excluding balconies, porches, garages, car ports, elevators, and utility rooms.",
          "minLength": 1,
          "pattern": ".*\\d{2,}.*"
        },
        "area_under_area": {
          "type":  "string",
          "optional": true,
          "comment": "Also called “Living Area Under Air” or “Heated Living Area,” this refers to the total finished square footage of a building that is served by a permanent heating and/or cooling system (HVAC).",
          "pattern": ".*\\d{2,}.*"
        },
        "total_area": {
          "type": "string",
          "optional": true,
          "comment": "The total square footage of the property, including all areas, such as the living area, garage, and basement.",
          "pattern": ".*\\d{2,}.*"
        },

        "lien_type": {
          "enum": [
            "Judgement",
            "Tax",
            "Mortgage",
            "Mechanics",
            null
          ],
          "comment": "A property lien is a legal claim against a property that gives a creditor the right to take possession of the property if the borrower fails to repay a debt. There are several lien types, such as mortgage, tax and judgment.Typically a lien gives its holder the right to seize property or money from the borrower if the borrower does not fulfill the terms of a contract.",
          "type": [
            "string",
            "null"
          ]
        },
        "lot_original_cost_amount": {
          "type": "decimal",
          "comment": "Purchase price or acquisition cost of a piece of land or a lot of property."
        },
        "lot_size_number": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The size or area of the plot of land, usually measured in square feet or square meters, on which a property is situated",
          "minimum": 1
        },
        "manufactured_home_indicator": {
          "type": "boolean",
          "comment": "Indicates if the property is a manufactured or mobile home, which is a type of housing unit that is largely assembled in factories and then transported to sites where it's either attached to a permanent foundation or left on its trailer chassis."
        },
        "manufactured_home_width_type": {
          "enum": [
            "SingleWide",
            "MultiWide",
            null
          ],
          "comment": "Specifies the common size (width) designation of a Manufactured home.",
          "type": [
            "string",
            "null"
          ]
        },
        "market_value_improvement_amount": {
          "type": "decimal",
          "comment": "The monetary increase in a property's market value resulting from improvements, renovations, or other enhancements made to the property."
        },
        "metropolitan_division_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the property is located in a Metropolitan Division."
        },
        "msa_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the property is located in a Metropolitan Statistical Area."
        },
        "native_american_lands_type": {
          "enum": [
            "IndividualTrustLand",
            "HawaiianHomeLands",
            "FeeSimple",
            "AlaskaNativeCorporationLand",
            "TribalTrustLandOffReservation",
            "TribalTrustLandOnAReservation",
            "TribalTrustLand",
            null
          ],
          "comment": "A value from a MISMO prescribed list that categorizes the legal means by which Native American land may be owned. AUS Enumerated AUS Native American Lands Type.",
          "type": [
            "string",
            "null"
          ]
        },
        "native_american_lands_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Native American Lands Type.",
          "minLength": 1
        },
        "non_warrantable_project_indicator": {
          "type": "boolean",
          "comment": "non-warrantable project indicator in mortgage banking refers to a designation given to a property that is part of a condominium or planned unit development (PUD) that does not meet the eligibility requirements for conventional financing.\n\nThese requirements are set by the government-sponsored enterprises (GSEs), such as Fannie Mae and Freddie Mac, which purchase the majority of residential mortgage loans in the United States.\n\nProperties in non-warrantable projects may have issues such as high levels of commercial space, inadequate financial reserves, or legal disputes that make them too risky for the GSEs to finance. As rdf:type result, these properties may be more difficult to finance, and buyers and owners may have limited options for securing rdf:type mortgage. The \"non-warrantable project indicator\" is a designation that helps lenders and mortgage underwriters understand the limitations and risks associated with a property."
        },
        "number_of_units_type": {
          "enum": [
            "One",
            "Two",
            "OneToFour",
            "Three",
            "Four",
            "TwoToFour",
            null
          ],
          "comment": "number of units type in mortgage banking refers to the classification of a property based on the number of units it contains.\n\nThis classification is important for determining the type of loan that can be used to finance the property, as well as the underwriting requirements and guidelines that must be followed.\n\nTypically, properties are classified into one of three categories: single-family homes, multi-family homes (e.g. duplexes, triplexes, fourplexes), and larger multi-unit properties (e.g. apartment buildings). The number of units type is used to determine the loan-to-value (LTV) ratio, debt-to-income (DTI) ratio, and other loan requirements, as well as the risk associated with the property.\n\nFor example, rdf:type single-family home may have more favorable lending terms than rdf:type multi-unit property, as the latter may be seen as rdf:type higher risk due to the potential for multiple tenants and increased maintenance costs.",
          "type": [
            "string",
            "null"
          ]
        },
        "owned_property_disposition_status_type": {
          "enum": [
            "Retain",
            "Sold",
            "PendingSale",
            null
          ],
          "comment": "A value from a MISMO prescribed list that specifies the intended disposition of an owned real property.",
          "type": [
            "string",
            "null"
          ]
        },
        "owned_property_lien_installment_amount": {
          "type": "decimal",
          "comment": "The total monthly payment made on outstanding mortgages and liens against the owned real property."
        },
        "owned_property_lien_upb_amount": {
          "type": "decimal",
          "comment": "The total amount of all remaining mortgages and liens against the owned real property."
        },
        "owned_property_maintenance_expense_amount": {
          "type": "decimal",
          "comment": "The total monthly amount for insurance, property taxes, association dues and other housing expenses on the owned real property."
        },
        "owned_property_owned_unit_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The number of individual family dwelling units that are in the owned property.",
          "minimum": 1
        },
        "owned_property_rental_income_gross_amount": {
          "type": "decimal",
          "comment": "The amount of revenue generated by the owned property from rent on a monthly basis."
        },
        "owned_property_rental_income_net_amount": {
          "type": "decimal",
          "comment": "The amount of the rental income that is net of mortgage payments, insurance, maintenance, taxes, and miscellaneous expenses that is generated by the owned property on a monthly basis."
        },
        "owned_property_subject_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the owned property is the subject property."
        },
        "parcel_identifier": {
          "type": "string",
          "minLength": 1,
          "comment": "Each parcel of land has a unique Parcel ID that distinguishes it from all other parcels within the jurisdiction."
        },
        "pets_allowed_indicator": {
          "type": "boolean",
          "comment": "Pets allowed indicates that the property owner or management permits residents to have pets, such as dogs, cats, or other domestic animals."
        },
        "water_front_indicator": {
          "type": "boolean",
          "comment": "waterfront indicates that the property has direct access to or is located near a body of water, such as a lake, river, ocean, or canal."
        },
        "school_indicator": {
          "type": "boolean",
          "comment": "school indicates that the property is located near a elementary, middle or high school"
        },
        "gated_community_indicator": {
          "type": "boolean",
          "comment": "gated community indicates that the property is enclosed by gates or walls and restricts access to residents and their guests"
        },
        "private_pool_indicator": {
          "type": "boolean",
          "comment": "private pool indicates that the property have a private pool"
        },
        "planned_unit_development_pud_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the subject property is located is a Planned Unit Development (PUD). A PUD is a project or subdivision that consists of common property and / or improvements that are owned and maintained by an owners� association for the benefit and use of the individual unit owners."
        },
        "prior_sale_in_last_twelve_months_indicator": {
          "type": "boolean",
          "comment": "Indicates that property has been sold in the twelve months prior to origination of the delivery loan."
        },
        "project_attachment_type": {
          "enum": [
            "Attached",
            "Detached",
            null
          ],
          "comment": "Specifies the type of physical attachment, if any, between the dwelling units in the project.",
          "type": [
            "string",
            "null"
          ]
        },
        "project_design_type": {
          "enum": [
            "TownhouseRowhouse",
            "MidriseProject",
            "HighriseProject",
            "GardenProject",
            null
          ],
          "comment": "This field specifies the type of design for the multiple unit buildings in a project. Enumerated Project Appraisal AUS Project Design Type.",
          "type": [
            "string",
            "null"
          ]
        },
        "project_type": {
          "enum": [
            "OtherPhase",
            "SubjectPhase",
            null
          ],
          "comment": "Specifies whether the referenced project is associated with the subject or other property.",
          "type": [
            "string",
            "null"
          ]
        },
        "project_usage_type": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Refers to the intended use or purpose of a project associated with a property. This might encompass residential, commercial, industrial, recreational, or other specialized purposes.",
          "minLength": 1
        },
        "property_acquired_date": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The date the property was acquired.",
          "minLength": 1
        },
        "property_acquired_year": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The year in which the land and buildings of the property were acquired by the borrower.",
          "minimum": 1
        },
        "property_acreage_number": {
          "type": "decimal",
          "comment": "Number of acres of the subject property."
        },
        "property_condition_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field describing the condition of the property.",
          "minLength": 1
        },
        "property_current_occupancy_type": {
          "enum": [
            "Unknown",
            "TenantOccupied",
            "Vacant",
            "PartiallyVacant",
            "OccupiedByUnknown",
            "Abandoned",
            "OwnerOccupied",
            "AdverseOccupied",
            null
          ],
          "comment": "Specifies the property occupancy status of a subject property.",
          "type": [
            "string",
            "null"
          ]
        },
        "property_current_occupant_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The unparsed name of the current occupant of the property.",
          "minLength": 1
        },
        "property_current_usage_type": {
          "enum": [
            "SecondHome",
            "PrimaryResidence",
            "Investment",
            null
          ],
          "comment": "A value from a MISMO prescribed list that specifies the current usage of the property by the borrower.",
          "type": [
            "string",
            "null"
          ]
        },
        "property_current_usage_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Property Current Usage Type.",
          "minLength": 1
        },
        "property_disposition_status_type": {
          "enum": [
            "Sell",
            "Vacate",
            "Unknown",
            "Undecided",
            "Retain",
            null
          ],
          "comment": "The intended disposition of the property.",
          "type": [
            "string",
            "null"
          ]
        },
        "property_disposition_status_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Property Disposition Status Type.",
          "minLength": 1
        },
        "property_earthquake_insurance_indicator": {
          "type": "boolean",
          "comment": "An indicator denoting whether the property securing the mortgage has earthquake insurance."
        },
        "property_estate_type": {
          "enum": [
            "Fractional",
            "FeeSimple",
            "Leasehold",
            null
          ],
          "comment": "A value from a MISMO prescribed list that specifies the ownership interest in the property.",
          "type": [
            "string",
            "null"
          ]
        },
        "property_estate_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Property Estate Type.",
          "minLength": 1
        },
        "property_estimated_value_amount": {
          "type": "decimal",
          "comment": "A statement of the estimated present market value of the property that is from the borrower or loan originator."
        },
        "property_estimated_value_census_amount": {
          "type": "decimal",
          "comment": "Property estimated value census amount refers to the estimated value of the property based on census data."
        },
        "property_existing_lien_amount": {
          "type": "decimal",
          "comment": "The total amount of liens against the property at time of application for a loan. Used for Construction or Refinance loans."
        },
        "property_flood_insurance_indicator": {
          "type": "boolean",
          "comment": "An indicator denoting whether the property securing the mortgage has flood insurance."
        },
        "property_ground_lease_expiration_date": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The final expiration date of the ground lease.",
          "minLength": 1
        },
        "property_ground_lease_perpetual_indicator": {
          "type": "boolean",
          "comment": "Indicates that the ground lease is renewable in perpetuity."
        },
        "property_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A property identifier is a unique code or number assigned to a specific real estate property by a government agency or other organization. Property identifiers are used to identify and track individual properties for various purposes, such as taxation, land use planning, and real estate transactions.",
          "minLength": 1
        },
        "property_in_project_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the property is located in a project per trading partner guidelines."
        },
        "property_inclusionary_zoning_indicator": {
          "type": "boolean",
          "comment": "Indicates that the subject property is subject to Inclusionary zoning, a land-use concept in which builders include a certain amount of housing for eligible borrowers, usually low- and moderate-income households in exchange for considerations, such as low."
        },
        "property_legal_description_text": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "A detailed legal description of the property, often used in legal documents and contracts. This typically outlines the exact boundaries, dimensions, and location of the property as recognized by local or state governments."
        },
        "property_mixed_usage_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the subject property includes commercial space set aside to operate a business."
        },
        "property_original_cost_amount": {
          "type": "decimal",
          "comment": "The original cost of acquiring the entire property - land and structure. This is used for refinance loans."
        },
        "property_previously_occupied_indicator": {
          "type": "boolean",
          "comment": "Indicates that the property has been previously occupied."
        },
        "property_structure_built_year": {
          "type": [
            "integer",
            "null"
          ],
          "pattern": "^[0-9]{4}$",
          "comment": "The year in which the dwelling on the property was completed.",
          "minimum": 1
        },
        "property_structure_built_year_estimated_indicator": {
          "type": "boolean",
          "comment": "Indicates that the structure year built referenced is an estimate."
        },
        "property_structure_habitable_year_round_indicator": {
          "type": "boolean",
          "comment": "Indicates that the structure or improvement is habitable year round."
        },
        "property_type": {
          "enum": [
            "Cooperative",
            "Condominium",
            "Modular",
            "ManufacturedHousingMultiWide",
            "Pud",
            "Timeshare",
            "2Units",
            "DetachedCondominium",
            "Duplex",
            "SingleFamily",
            "TwoToFourFamily",
            "MultipleFamily",
            "3Units",
            "ManufacturedHousing",
            "ManufacturedHousingSingleWide",
            "4Units",
            "Townhouse",
            "NonWarrantableCondo",
            "VacantLand",
            "Retirement",
            "MiscellaneousResidential",
            "ResidentialCommonElementsAreas"
          ],
          "comment": "Property type refers to the classification of a real estate property based on its characteristics, usage, and zoning designation. Property types can include residential, commercial, industrial, agricultural, and mixed-use properties.",
          "type": [
            "string"
          ]
        },
        "property_usage_type": {
          "enum": [
            "SecondHome",
            "PrimaryResidence",
            "Investment",
            null
          ],
          "comment": "A value from a MISMO prescribed list that specifies the intended usage of the property by the borrower.",
          "type": [
            "string",
            "null"
          ]
        },
        "property_usage_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Property Usage Type.",
          "minLength": 1
        },
        "property_vacancy_date": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The date the property was first determined to be vacant as determined by the date reported on an inspection report.",
          "minLength": 1
        },
        "pud_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the subject property is located is a Planned Unit Development (PUD). A PUD is a project or subdivision that consists of common property and / or improvements that are owned and maintained by an owners’ association for the benefit and use of the individual unit owners."
        },
        "historic_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that property has been officially recognized for its historical, architectural, or cultural significance, ensuring its preservation and heritage value"
        },
        "township": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "A township is a 6-mile by 6-mile square of land, covering 36 square miles. Townships are numbered north or south from a designated baseline. In this case, Township 45 refers to the 45th tier of townships from the baseline."
        },
        "range": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": " A range describes the east-west position of a township relative to a principal meridian. Range 24E means the township is located 24 tiers east of the principal meridian"
        },
        "section": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "Each township is divided into 36 sections, with each section being 1 square mile (640 acres). Section 03 refers to the third section within its township"
        },
        "block": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "A block is a further subdivision within a plat (a recorded land division), often used in urban or planned developments. Block 0000G refers to a specific block within that recorded subdivision"
        },
        "lot": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "A lot is an individually designated parcel within a block. Lot 0190 identifies the specific plot of land within Block 0000G"
        },
        "purchase_price_amount": {
          "type": "decimal",
          "comment": "The total dollar amount paid by the borrower for the property. The purchase price is presented on the offer to purchase."
        },
        "rental_estimated_gross_monthly_rent_amount": {
          "type": "decimal",
          "comment": "The amount of the estimated gross monthly rental income derived from a single rental unit or property."
        },
        "rental_estimated_net_monthly_rent_amount": {
          "type": "decimal",
          "comment": "The amount of the estimated net monthly rental income derived from a single rental unit or property."
        },
        "rural_underserved_county_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the subject property county has been identified by the Bureau of Consumer Financial Protection as Rural or Underserved."
        },
        "stories_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "Specifies the number of habitable levels above grade in a structure such as in a 2 story house, a cape cod with 1.5 stories or a 2 story condominium unit in a multi-level building.",
          "minimum": 1
        },
        "total_room_count": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The total number of rooms in the property.",
          "minimum": 1
        },
        "subdivision": {
          "type": "string",
          "optional": true,
          "comment": "Subdivision is the term used to describe a defined area within a city or community that has been divided into individual plots or lots, usually intended for residential or commercial development. It is often formally designated by the township or municipality."
        },
        "zoning": {
          "type": "string",
          "optional": true,
          "comment": "Zoning is a system of land-use regulation created by local governments to control how property and land within a community can be used."
        },
        "undefined_property_type": {
          "enum": [
            "Unavailable",
            "NonDescriptive",
            "Unknown",
            null
          ],
          "comment": "A value from a MISMO prescribed list that represents a type of property that does not meet a uniform set of characteristics for defining the components used to classify a property type.",
          "type": [
            "string",
            "null"
          ]
        },
        "unique_dwelling_type": {
          "enum": [
            "Houseboat",
            "GeodesicDome",
            "EarthShelterHome",
            "LogHome",
            null
          ],
          "comment": "A dwelling that does not conform to a conventional building structure type or method.",
          "type": [
            "string",
            "null"
          ]
        },
        "unique_dwelling_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A text field used to describe the Unique Dwelling when \"Other\" is selected from the enumerated list.",
          "minLength": 1
        },
        "windstorm_insurance_required_indicator": {
          "type": "boolean",
          "comment": "Indicates whether windstorm insurance is required for a given property or situation. If set to true, insurance is required; if set to false, it is not."
        },
        "property_assessed_value_amount": {
          "type": "decimal",
          "comment": "The estimated value of the property used as the basis for property tax calculations for a given tax year."
        },
        "property_exemption_amount": {
          "type": "decimal",
          "comment": "The reduction amount applied to the assessed value, often based on exemptions like homestead, to determine the taxable value."
        },
        "property_taxable_value_amount": {
          "type": "decimal",
          "comment": "The final property value on which tax is calculated, derived by subtracting the exemption amount from the assessed value."
        },
        "spa_indicator": {
          "type": "boolean",
          "comment": "Spa indicates that the property has a spa or hot tub."
        },
        "homeowners_association_indicator": {
          "type": "boolean",
          "comment": "Homeowners association indicates that the property is part of a community association that enforces rules and regulations for the neighborhood."
        },
        "area": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Four digit search code used to narrow down the geographic area of the subject property.",
          "minLength": 1
        },
        "geo_area": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Larger Geographical area containing two or more Area numbers.",
          "minLength": 1
        },
        "property_condition": {
          "enum": [
            "Resale",
            "New",
            "UnderConstruction",
            "CondoConversion",
            "CondoHotel",
            "NewlyUpdatedRenovated",
            "EffectiveYearBuilt",
            "PreConstruction",
            null
          ],
          "comment": "The condition of the property.",
          "type": [
            "string",
            "null"
          ]
        },
        "lot_size_square_feet": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The size of the lot in square feet.",
          "minimum": 1
        },
        "lot_living_size_square_feet": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The size of the living area in square feet.",
          "minimum": 1
        }
      },
      "example": {
        "source_http_request": "GET /Property/Details?parcelId={{request_identifier}} HTTP/1.1\r\nHost: pbcpao.gov\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nConnection: keep-alive\r\n\r\n",
        "request_identifier": "52434205310037080",
        "attachment_type": "Attached",
        "number_of_units_type": "One",
        "parcel_identifier": "52-43-42-05-31-003-7080",
        "property_legal_description_text": "HARBOUR OAKS  LT 3708",
        "property_structure_built_year": 2005,
        "property_type": "Townhouse"
      },
      "relationships": {
        "has_comparable": {
          "targets": [
            "property"
          ],
          "comment": "Indicates that a property is similar in characteristics to another property (the original property). These comparable properties are often used for valuation or market analysis purposes."
        },
        "has_address": {
          "targets": [
            "address"
          ],
          "comment": "Indicates a specific location or postal information."
        },
        "has_appliance": {
          "targets": [
            "appliance"
          ],
          "comment": "An appliance is a device or machine designed to perform a specific function, typically used in households or businesses to aid in daily tasks."
        },
        "has_development": {
          "targets": [
            "development"
          ],
          "comment": "Refers to a planned and often coordinated area of real estate that is designated for a particular type of use, such as residential, commercial, or mixed-use purposes."
        },
        "has_subdivision": {
          "targets": [
            "subdivision"
          ],
          "comment": "Subdivision refers to the name for a specific, delineated area within a larger community or city that has been divided into individual plots or lots, typically for the purpose of residential or commercial development."
        },
        "has_school": {
          "targets": [
            "school"
          ],
          "comment": "A school is an educational institution that provides instruction and training to students of all ages. Schools can be public or private, and they offer a variety of programs and services, such as elementary, middle, and high school education, vocational training, and adult education."
        },
        "has_expense": {
          "targets": [
            "expense"
          ],
          "comment": "A cost incurred by the property as part of maintenance, rental, or another process."
        },
        "has_exterior": {
          "targets": [
            "exterior"
          ],
          "comment": "Exterior refers to the outdoor living spaces, view types and features on the outside of the structure."
        },
        "has_finance_relation": {
          "targets": [
            "finance_relation"
          ],
          "comment": "Links to financial relationships or transactions."
        },
        "has_homeowners_association": {
          "targets": [
            "homeowners_association"
          ],
          "comment": "A homeowners association (HOA) is an organization in a residential community that creates and enforces rules and regulations for properties and residents within its jurisdiction."
        },
        "has_lot": {
          "targets": [
            "lot"
          ],
          "comment": "Refers to a specific parcel or piece of land that is designated or allocated for a particular purpose."
        },
        "has_photos": {
          "targets": [
            "document"
          ],
          "comment": "Photos of the property."
        },
        "has_property_valuation": {
          "targets": [
            "property_valuation"
          ],
          "comment": "A reference to the property valuation information associated with a given real estate asset. This object property links to a 'property_valuation' instance that contains detailed valuation data, including estimated value, confidence score, and other relevant valuation metrics."
        },
        "has_rental_income": {
          "targets": [
            "income"
          ],
          "comment": "A relationship that indicates a specific property generates a rental income. The relationship connects a property to its associated income derived from renting it out."
        },
        "has_room": {
          "targets": [
            "room"
          ],
          "comment": "A room in a house is a distinct, enclosed space within a residential structure that serves specific functions and purposes."
        },
        "has_section": {
          "targets": [
            "section"
          ],
          "comment": "Section refers to an area of a property that is categorized based on its function or location. Each section can be thought of as a distinct part of the property that serves a specific purpose."
        },
        "has_structure": {
          "targets": [
            "structure"
          ],
          "comment": "Structure refers to the characteristics of the buildings on the property. It encompasses all physical aspects of the buildings, such as their size, style, and the materials used in their construction."
        },
        "has_tax": {
          "targets": [
            "tax"
          ],
          "comment": "Property can have tax. Property tax is a type of tax that is levied on the value of real estate or other types of property, such as land, buildings, and homes. The tax is usually assessed and collected by local governments, such as cities or counties, and is used to fund local services such as schools, police and fire departments, road maintenance, and other community services."
        },
        "has_utility": {
          "targets": [
            "utility"
          ],
          "comment": "A utility is a service that is essential for daily living and typically provided by public or private entities."
        }
      }
    },
    {
      "type": "layout",
      "container_name": "layouts",
      "is_deprecated": false,
      "deprecated_properties": [
        "space_type_other_description",
        "window_material_type_other_description",
        "window_treatment_type_other_description",
        "design_style_other_description",
        "decor_elements_other_description",
        "view_type_other_description",
        "level",
        "special_features"
      ],
      "description": "The Layout class provides comprehensive documentation of individual rooms and spaces within a property, capturing detailed physical characteristics, design elements, and condition assessments. It categorizes spaces from basic residential rooms (living rooms, bedrooms, bathrooms) to specialized areas (wine cellars, safe rooms, pool houses) and exterior spaces (decks, patios, outdoor kitchens). The class documents physical attributes including flooring materials, square footage, floor levels, and window specifications with various design types and treatments. It captures aesthetic elements such as design style, decor features, lighting fixtures, countertop materials, and cabinet styles, while also assessing condition factors like paint quality, flooring wear, clutter levels, and visible damage. For pool and spa areas, it includes specialized properties for equipment, safety features, surface types, and water quality. The class also evaluates environmental factors such as natural light quality, views, and furnishing status, making it essential for property appraisals, virtual tours, maintenance planning, and detailed property marketing descriptions.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "space_type": {
          "enum": [
            "Living Room",
            "Family Room",
            "Great Room",
            "Dining Room",
            "Kitchen",
            "Breakfast Nook",
            "Pantry",
            "Primary Bedroom",
            "Secondary Bedroom",
            "Guest Bedroom",
            "Children’s Bedroom",
            "Nursery",
            "Full Bathroom",
            "Three-Quarter Bathroom",
            "Half Bathroom / Powder Room",
            "En-Suite Bathroom",
            "Jack-and-Jill Bathroom",
            "Primary Bathroom",
            "Laundry Room",
            "Mudroom",
            "Closet",
            "Bedroom",
            "Walk-in Closet",
            "Mechanical Room",
            "Storage Room",
            "Server/IT Closet",
            "Home Office",
            "Library",
            "Den",
            "Study",
            "Media Room / Home Theater",
            "Game Room",
            "Home Gym",
            "Music Room",
            "Craft Room / Hobby Room",
            "Prayer Room / Meditation Room",
            "Safe Room / Panic Room",
            "Wine Cellar",
            "Bar Area",
            "Greenhouse",
            "Attached Garage",
            "Detached Garage",
            "Carport",
            "Workshop",
            "Storage Loft",
            "Porch",
            "Screened Porch",
            "Sunroom",
            "Deck",
            "Patio",
            "Pergola",
            "Balcony",
            "Terrace",
            "Gazebo",
            "Pool House",
            "Outdoor Kitchen",
            "Lobby / Entry Hall",
            "Common Room",
            "Utility Closet",
            "Elevator Lobby",
            "Mail Room",
            "Janitor’s Closet",
            "Pool Area",
            "Indoor Pool",
            "Outdoor Pool",
            "Hot Tub / Spa Area",
            "Shed",
            null
          ],
          "comment": "The function or designation of the room.",
          "type": [
            "string",
            "null"
          ]
        },
        "space_index": {
          "type": "integer",
          "comment": "An index number representing the order of each space type in the property layout.",
          "minimum": 1
        },
        "space_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when 'Other' is selected for room_type.",
          "minLength": 1
        },
        "flooring_material_type": {
          "enum": [
            "Manufactured",
            "EngineeredWood",
            "Terazzo",
            "Brick",
            "Wood",
            "CinderBlock",
            "Concrete",
            "Shingle",
            "Composition",
            "Linoleum",
            "Stone",
            "CeramicTile",
            "Block",
            "WoodSiding",
            "ImpactGlass",
            "Carpet",
            "Marble",
            "Vinyl",
            "Tile",
            "PouredConcrete",
            "Metal",
            "Glass",
            "Laminate",
            null
          ],
          "comment": "Refers to the type of material used for a floor.",
          "type": [
            "string",
            "null"
          ]
        },
        "size_square_feet": {
          "type": [
            "number",
            "null"
          ],
          "comment": "Room area in square feet."
        },
        "special_features": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A list of distinctive room-level or space-level elements that do not fall under other structured categories like lighting, appliances, flooring, or decor. Examples include: 'Fireplace', 'Skylight', 'Built-in Bookshelf', 'Loft Access', 'Exposed Beams', 'Secret Storage', 'Vaulted Ceiling', 'Murphy Bed', 'Wall Niche'. These are visually notable features unique to the space's function, layout, or design.",
          "minLength": 1
        },
        "level": {
          "enum": [
            "Basement",
            "Lower",
            "Main",
            "Upper",
            "Attic",
            "Loft",
            "Mezzanine",
            null
          ],
          "comment": "The floor or level the room is on, useful for multi-story properties.",
          "type": [
            "string",
            "null"
          ]
        },
        "floor_level": {
          "enum": [
            "1st Floor",
            "2nd Floor",
            "3rd Floor",
            "4th Floor",
            null
          ],
          "comment": "The floor level the room is on, useful for multi-story properties.",
          "type": [
            "string",
            "null"
          ]
        },
        "has_windows": {
          "type": [
            "boolean",
            "null"
          ],
          "comment": "Whether the room has windows or not (relevant for egress and lighting)."
        },
        "window_design_type": {
          "enum": [
            "Skylights",
            "Transom",
            "Egress",
            "Garden",
            "Awning",
            "DoubleHung",
            "Jalousie",
            "SingleHung",
            "Sliding",
            "Bay",
            "Bow",
            "Greenhouse",
            "Picture",
            "Casement",
            null
          ],
          "comment": "Refers to the window design.",
          "type": [
            "string",
            "null"
          ]
        },
        "window_material_type": {
          "enum": [
            "Manufactured",
            "EngineeredWood",
            "Terazzo",
            "Brick",
            "Wood",
            "CinderBlock",
            "Concrete",
            "Shingle",
            "Composition",
            "Linoleum",
            "Stone",
            "CeramicTile",
            "Block",
            "WoodSiding",
            "ImpactGlass",
            "Carpet",
            "Marble",
            "Vinyl",
            "Tile",
            "PouredConcrete",
            "Metal",
            "Glass",
            "Laminate",
            null
          ],
          "comment": "Refers to the type of material a window is made from.",
          "type": [
            "string",
            "null"
          ]
        },
        "window_material_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the window type.",
          "minLength": 1
        },
        "window_treatment_type": {
          "enum": [
            "Blinds",
            "Drapes",
            "VerticalBlinds",
            "HorizontalBlinds",
            "Shades",
            "PlantationShutters",
            "CafeShutters",
            "RollerShades",
            "RomanShades",
            "CellularHoneycombShades",
            "SolarShades",
            "PleatedShades",
            "Curtains",
            "BlackoutCurtains",
            "ThermalCurtains",
            "Valances",
            "Cornices",
            "WindowFilm",
            "StainedGlass",
            "BambooShades",
            "WoodShades",
            "WovenShades",
            null
          ],
          "comment": "Refers to the type of window treatment that covers the windows.",
          "type": [
            "string",
            "null"
          ]
        },
        "window_treatment_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the window treatment type.",
          "minLength": 1
        },
        "is_finished": {
          "type": "boolean",
          "comment": "Whether the room is finished (especially important for basements, attics, garages)."
        },
        "furnished": {
          "enum": [
            "Furnished",
            "Unfurnished",
            "Partially Furnished",
            null
          ],
          "comment": "Indicates whether the room is furnished and to what extent.",
          "type": [
            "string",
            "null"
          ]
        },
        "paint_condition": {
          "enum": [
            "New",
            "Good",
            "Worn",
            "Peeling",
            null
          ],
          "comment": "Visual state of paint within the room.",
          "type": [
            "string",
            "null"
          ]
        },
        "flooring_wear": {
          "enum": [
            "Pristine",
            "Good",
            "Moderate",
            "Worn",
            "Damaged",
            null
          ],
          "comment": "Observed condition of the flooring.",
          "type": [
            "string",
            "null"
          ]
        },
        "clutter_level": {
          "enum": [
            "Staged",
            "Moderate",
            "Heavy",
            null
          ],
          "comment": "Amount of visible clutter or personal items in the room.",
          "type": [
            "string",
            "null"
          ]
        },
        "visible_damage": {
          "type": [
            "string",
            "null"
          ],
          "comment": "List of visible damage types (e.g. mold, stains, cracks, broken fixtures).",
          "minLength": 1
        },
        "countertop_material": {
          "enum": [
            "Granite",
            "Quartz",
            "Marble",
            "Laminate",
            "Wood",
            "Tile",
            "Concrete",
            null
          ],
          "comment": "Material of visible countertops, if present.",
          "type": [
            "string",
            "null"
          ]
        },
        "cabinet_style": {
          "enum": [
            "Modern",
            "Shaker",
            "Traditional",
            "Flat Panel",
            "Glass Front",
            null
          ],
          "comment": "Visual cabinet style present in the room, if any.",
          "type": [
            "string",
            "null"
          ]
        },
        "fixture_finish_quality": {
          "enum": [
            "Basic",
            "Mid-range",
            "Luxury",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "design_style": {
          "enum": [
            "Modern",
            "Traditional",
            "Rustic",
            "Eclectic",
            "Minimalist",
            "Transitional",
            null
          ],
          "comment": "Dominant design style observed in the room.",
          "type": [
            "string",
            "null"
          ]
        },
        "design_style_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to describe design style when 'Other' is selected.",
          "minLength": 1
        },
        "natural_light_quality": {
          "enum": [
            "Abundant",
            "Moderate",
            "Limited",
            null
          ],
          "comment": "Assessment of natural light availability.",
          "type": [
            "string",
            "null"
          ]
        },
        "decor_elements": {
          "enum": [
            "Vaulted Ceiling",
            "Coffered Ceiling",
            "Beamed Ceiling",
            "Tray Ceiling",
            "Accent Wall",
            "Exposed Brick",
            "Crown Molding",
            "Wainscoting",
            "Built-In Shelving",
            "Wall Paneling",
            null
          ],
          "comment": "List of prominent design elements.",
          "type": [
            "string",
            "null"
          ]
        },
        "decor_elements_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to describe the decor element when 'Other' is selected.",
          "minLength": 1
        },
        "pool_type": {
          "enum": [
            "SaltWater",
            "AboveGround",
            "Concrete",
            "Heated",
            "BuiltIn",
            "Plunge",
            "Lap",
            "Infinity",
            "Fiberglass",
            "Vinyl",
            "Natural",
            null
          ],
          "comment": "Specifies the structural or functional type of the pool if applicable to this room.",
          "type": [
            "string",
            "null"
          ]
        },
        "pool_equipment": {
          "type": [
            "string",
            "null"
          ],
          "comment": "List of visible pool-related equipment such as pumps, heaters, or covers.",
          "minLength": 1
        },
        "spa_type": {
          "enum": [
            "Jacuzzi",
            "InGround",
            "Rooftop",
            "WoodFiredHotTub",
            "JapaneseSoakingTub",
            "Saltwater",
            "Heated",
            null
          ],
          "comment": "Specifies the type of spa or hot tub present, if applicable.",
          "type": [
            "string",
            "null"
          ]
        },
        "safety_features": {
          "enum": [
            "Fencing",
            "PoolCover",
            "Alarm",
            "SelfClosingGate",
            "SlipResistantSurface",
            "Lifebuoy",
            "WarningSignage",
            "SurveillanceCamera",
            "Lighting",
            null
          ],
          "comment": "Visible safety features such as fencing, alarms, slip-resistant surfaces, or pool covers.",
          "type": [
            "string",
            "null"
          ]
        },
        "view_type": {
          "enum": [
            "Courtyard",
            "Ocean",
            "City",
            "Garden",
            "Bay",
            "Marina",
            "Mountain",
            "Park",
            "Waterfront",
            "Street",
            null
          ],
          "comment": "The dominant view visible from this room.",
          "type": [
            "string",
            "null"
          ]
        },
        "view_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to describe the view if 'Other' is selected.",
          "minLength": 1
        },
        "lighting_features": {
          "enum": [
            "Recessed",
            "Track",
            "Pendant",
            "Chandelier",
            "FlushMount",
            "WallSconces",
            "NaturalLight",
            "Skylight",
            null
          ],
          "comment": "Observed lighting fixtures and types in room.",
          "type": [
            "string",
            "null"
          ]
        },
        "condition_issues": {
          "enum": [
            "PeelingPaint",
            "VisibleMold",
            "WaterStains",
            "DamagedDrywall",
            "Clutter",
            "Unfinished",
            "Unclean",
            "PersonalItemsVisible",
            null
          ],
          "comment": "AI-observed visual condition issues in the room.",
          "type": [
            "string",
            "null"
          ]
        },
        "is_exterior": {
          "type": "boolean",
          "comment": "Indicates whether the space is exterior or interior."
        },
        "pool_condition": {
          "enum": [
            "New",
            "Good",
            "Worn",
            "Needs Repair",
            "Damaged",
            "Unknown",
            null
          ],
          "comment": "Overall visible condition of the pool structure (tiles, lining, coping, etc.).",
          "type": [
            "string",
            "null"
          ]
        },
        "pool_surface_type": {
          "enum": [
            "Concrete",
            "Tile",
            "Vinyl Liner",
            "Fiberglass",
            "Painted",
            "Natural Stone",
            "Unknown",
            null
          ],
          "comment": "The visible material or finish used for the pool’s interior surface.",
          "type": [
            "string",
            "null"
          ]
        },
        "pool_water_quality": {
          "enum": [
            "Clear",
            "Slightly Cloudy",
            "Cloudy",
            "Green",
            "Debris Present",
            "Drained",
            "Covered",
            "Unknown",
            null
          ],
          "comment": "The observed quality or clarity of the pool water in the image.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "example": {
        "source_http_request": "GET /Property/Details?parcelId={{request_identifier}} HTTP/1.1\r\nHost: pbcpao.gov\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nConnection: keep-alive\r\n\r\n",
        "request_identifier": "52434205310037080",
        "space_type": "Kitchen",
        "flooring_material_type": "CeramicTile",
        "size_square_feet": 180.5,
        "floor_level": "1st Floor",
        "has_windows": true,
        "window_design_type": "Casement",
        "window_material_type": "Vinyl",
        "window_treatment_type": "RollerShades",
        "is_finished": true,
        "furnished": "Furnished",
        "paint_condition": "Good",
        "flooring_wear": "Moderate",
        "clutter_level": "Moderate",
        "visible_damage": "None",
        "countertop_material": "Granite",
        "cabinet_style": "Shaker",
        "fixture_finish_quality": "Mid-range",
        "design_style": "Transitional",
        "natural_light_quality": "Abundant",
        "decor_elements": "Crown Molding",
        "pool_type": "SaltWater",
        "pool_equipment": "Pump, Heater",
        "spa_type": "Heated",
        "safety_features": "Fencing",
        "view_type": "Garden",
        "lighting_features": "Recessed",
        "condition_issues": "Unclean",
        "is_exterior": false,
        "pool_condition": "Good",
        "pool_surface_type": "Tile",
        "pool_water_quality": "Clear"
      }
    },
    {
      "type": "appliance",
      "container_name": "appliances",
      "is_deprecated": false,
      "deprecated_properties": [
        "appliance_type_other_description",
        "finish_other_description",
        "location_hint",
        "is_built_in"
      ],
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": "string",
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data."
        },
        "appliance_type": {
          "enum": [
            "Refrigerator",
            "Freezer",
            "Microwave",
            "Oven",
            "Stove",
            "Dishwasher",
            "Washing Machine",
            "Dryer",
            "Range Hood",
            "Wine Cooler",
            "Trash Compactor",
            "Water Heater",
            "Cooktop",
            "Double Oven",
            "Built-In Coffee Maker",
            "Wall Oven",
            "Mini Fridge",
            "Ice Maker",
            "Garbage Disposal",
            "Smart Display",
            "Toaster Oven",
            null
          ],
          "comment": "The appliance type observed in the space.",
          "type": [
            "string",
            "null"
          ]
        },
        "appliance_type_other_description": {
          "type": "string",
          "comment": "If appliance_type is 'Other', use this to specify the custom type."
        },
        "finish": {
          "enum": [
            "Stainless Steel",
            "Black",
            "White",
            "Glass",
            "Matte Black",
            "Matte White",
            "Custom Panel",
            "Chrome",
            "Copper",
            "Brushed Nickel",
            null
          ],
          "comment": "The visible finish of the appliance.",
          "type": [
            "string",
            "null"
          ]
        },
        "finish_other_description": {
          "type": "string",
          "comment": "If finish is 'Other', specify the custom material or color."
        },
        "is_built_in": {
          "type": "boolean",
          "comment": "True if the appliance is built into the structure or cabinetry."
        },
        "location_hint": {
          "type": "string",
          "comment": "Optional free-text note indicating where the appliance is located."
        }
      }
    },
    {
      "type": "property_improvement",
      "container_name": "property_improvements",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": "string",
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data."
        },
        "improvement_type": {
          "enum": [
            "KitchenRemodel",
            "BathroomRenovation",
            "FlooringUpgrade",
            "PaintingInterior",
            "PaintingExterior",
            "RoofReplacement",
            "WindowReplacement",
            "HVACUpgrade",
            "PlumbingUpgrade",
            "ElectricalUpgrade",
            "SidingReplacement",
            "DeckAddition",
            "PatioAddition",
            "PoolInstallation",
            "LandscapingImprovement",
            "DrivewaySealcoating",
            "FencingInstallation",
            "InsulationUpgrade",
            "SolarPanelInstallation",
            "ApplianceUpgrade",
            "CountertopReplacement",
            "CabinetRefacing",
            "TileInstallation",
            "CarpetReplacement",
            "BasementFinishing",
            "AtticConversion",
            "GarageConversion",
            "RoomAddition",
            "AccessibilityUpgrade",
            "SecuritySystemInstallation",
            "SmartHomeUpgrade",
            "WaterHeaterReplacement",
            "FireplaceInstallation",
            "StorageSolutionInstallation",
            null
          ],
          "comment": "Specific type of improvement or renovation performed.",
          "type": [
            "string",
            "null"
          ]
        },
        "improvement_status": {
          "enum": [
            "Completed",
            "InProgress",
            "Planned",
            "Permitted",
            "OnHold",
            "Cancelled",
            null
          ],
          "comment": "Current status of the improvement project.",
          "type": [
            "string",
            "null"
          ]
        },
        "completion_date": {
          "type": "string",
          "format": "date",
          "comment": "Date when the improvement work was completed."
        },
        "improvement_cost": {
          "type": "number",
          "comment": "Total cost of the improvement in dollars."
        },
        "contractor_type": {
          "enum": [
            "GeneralContractor",
            "Specialist",
            "DIY",
            "PropertyManager",
            "Builder",
            "HandymanService",
            "Unknown",
            null
          ],
          "comment": "Type of contractor or method used for the work.",
          "type": [
            "string",
            "null"
          ]
        },
        "permit_required": {
          "type": "boolean",
          "comment": "Whether the improvement required building permits."
        }
      },
      "example": {
        "source_http_request": "GET /Property/Details?parcelId={{request_identifier}} HTTP/1.1\r\nHost: pbcpao.gov\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nConnection: keep-alive\r\n\r\n",
        "request_identifier": "52434205310037080",
        "improvement_type": "ElectricalUpgrade",
        "improvement_status": "Completed",
        "completion_date": "2025-04-17",
        "improvement_cost": null,
        "contractor_type": "Unknown",
        "permit_required": true
      }
    },
    {
      "type": "nearby_location",
      "description": "The NearbyLocation class provides comprehensive documentation of points of interest, amenities, and attractions within proximity to a property, essential for evaluating neighborhood desirability and lifestyle convenience. It captures location details including names, precise distances in miles with decimal precision, and categorical classifications spanning shopping, dining, entertainment, nature, fitness, beaches, historical sites, parks, museums, recreation, pet services, wellness facilities, and tourist attractions. The class includes extensive feature specifications ranging from retail options (grocery stores, malls, boutiques) and dining establishments (cafes, fine dining, food trucks) to recreational facilities (hiking trails, gyms, golf courses) and specialized amenities (pet services, spa treatments, cultural exhibits). It also evaluates practical accessibility through walkability assessments, helping property buyers understand transportation needs and pedestrian-friendly neighborhood characteristics. This data is crucial for lifestyle matching, property marketing, neighborhood analysis, and helping potential residents assess proximity to essential services, entertainment options, and recreational opportunities that align with their preferences and daily needs.",
      "container_name": "nearby_locations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The name of the nearby location or attraction (e.g., Ocean Walk Plaza).",
          "minLength": 1
        },
        "distance_miles": {
          "type": "decimal",
          "format": "miles-distance",
          "comment": "Distance in miles, allowing up to 3 decimal places (e.g., '0.123', '12', '5.7')"
        },
        "location_type": {
          "enum": [
            "Shopping",
            "Dining",
            "Entertainment",
            "Nature",
            "Fitness",
            "Beach",
            "Historical Site",
            "Park",
            "Museum",
            "Recreation",
            "Pet Services",
            "Wellness",
            "Tourist Attraction",
            null
          ],
          "comment": "Category or type of nearby location.",
          "type": [
            "string",
            "null"
          ]
        },
        "features": {
          "enum": [
            "grocery_store",
            "mall",
            "boutique",
            "supermarket",
            "convenience_store",
            "cafe",
            "fine_dining",
            "food_truck",
            "fast_food",
            "rooftop_dining",
            "cinema",
            "live_music",
            "arcade",
            "nightclub",
            "comedy_club",
            "hiking_trail",
            "birdwatching",
            "scenic_outlook",
            "nature_reserve",
            "gym",
            "yoga_studio",
            "pilates_studio",
            "crossfit_box",
            "cycling_center",
            "public_beach",
            "private_beach",
            "dog_beach",
            "surf_spot",
            "beach_boardwalk",
            "landmark",
            "heritage_building",
            "historical_museum",
            "memorial_site",
            "playground",
            "dog_park",
            "sports_fields",
            "picnic_area",
            "botanical_garden",
            "art_museum",
            "science_center",
            "children_museum",
            "cultural_exhibit",
            "tennis_courts",
            "golf_course",
            "community_pool",
            "skate_park",
            "recreation_center",
            "veterinarian",
            "pet_grooming",
            "pet_daycare",
            "pet_store",
            "spa",
            "massage_therapy",
            "acupuncture",
            "holistic_clinic",
            "guided_tour",
            "observation_deck",
            "theme_park",
            "aquarium",
            "zoo",
            "free_parking",
            "wheelchair_accessible",
            "public_restrooms",
            "open_late",
            "family_friendly",
            null
          ],
          "comment": "Standardized list of nearby location features or highlights depending on location_type (e.g., yoga_studio, dog_beach, guided_tour).",
          "type": [
            "string",
            "null"
          ]
        },
        "is_walkable": {
          "type": "boolean",
          "comment": "Whether the location is considered walkable from the property."
        }
      }
    },
    {
      "type": "property_unit",
      "container_name": "property_units",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "has_expense": {
          "type": "string",
          "comment": "An expense represents a cost incurred by an entity in the process of generating revenue."
        },
        "property_unit_occupancy_type": {
          "enum": [
            "OwnerOccupied",
            "Tenant",
            "Vacant",
            "Unknown",
            null
          ],
          "comment": "Specifies the current occupancy status of the specified unit within a property or an individual unit or a group of units within project.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_expense": {
          "targets": [
            "expense"
          ],
          "comment": "A cost incurred by the property as part of maintenance, rental, or another process."
        }
      }
    },
    {
      "type": "renovation",
      "container_name": "renovations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "renovation_scope_description": {
          "type": "string"
        },
        "renovation_year": {
          "type": "integer"
        }
      }
    },
    {
      "type": "property_valuation",
      "container_name": "property_valuations",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "confidence_score": {
          "type": "integer",
          "comment": "A score representing the level of confidence in the valuation estimate, typically on a scale from 0 to 100."
        },
        "current_avm_value": {
          "type": "decimal",
          "comment": "The current estimated value of the property as determined by an Automated Valuation Model (AVM)."
        },
        "high_value": {
          "type": "decimal",
          "comment": "The highest estimated value of the property within a reasonable confidence interval."
        },
        "low_value": {
          "type": "decimal",
          "comment": "The lowest estimated value of the property within a reasonable confidence interval."
        },
        "standard_deviation": {
          "type": "decimal",
          "comment": "A measure of the dispersion or spread of the estimated property values."
        },
        "valuation_date": {
          "type": "string",
          "format": "date",
          "comment": "The date on which the property valuation was estimated or determined."
        },
        "area_min_property_price_psf": {
          "type": "decimal",
          "comment": "Lowest price per square foot among comparable properties within defined radius and time period."
        },
        "area_max_property_price_psf": {
          "type": "decimal",
          "comment": "Highest price per square foot among comparable properties within defined radius and time period."
        },
        "valuation_method_type": {
          "enum": [
            "FirstAmericanEquity",
            "FirstAmericanProcision",
            "StaircaseValuationModel",
            "IMAPP",
            null
          ],
          "comment": "The methodology or approach used to estimate the property's value, as represented by a specific enumeration type.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {}
    },
    {
      "type": "regulatory_product",
      "container_name": "regulatory_products",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "regulatory_product_disclaimer_text": {
          "type": "string",
          "comment": "Disclaimer text associated with the product."
        },
        "regulatory_product_provider_description": {
          "type": "string",
          "comment": "Either the branded name or description of the product provider of the regulatory product."
        },
        "regulatory_product_result_status_type": {
          "type": "string",
          "comment": "Indicates the result of the current product request."
        },
        "regulatory_product_result_status_type_other_description": {
          "type": "string",
          "comment": "Contains the regulatory status when the Regulatory Product Status Type is Other."
        },
        "regulatory_product_result_text": {
          "type": "string",
          "comment": "Contains text information associated with the product."
        },
        "regulatory_product_source_type": {
          "type": "string",
          "comment": "Identifies the regulatory product provided by the federal government. These products are used to screen borrower names to see if they match any names listed in the regulatory product."
        },
        "regulatory_product_source_type_other_description": {
          "type": "string",
          "comment": "Contains the text description of the product source type when the Regulatory Product Source Type is Other."
        }
      },
      "relationships": {
        "has_credit_repository": {
          "targets": [
            "credit_repository"
          ],
          "comment": "Credit repository refers to an entity that collects and stores credit-related information about individuals."
        }
      }
    },
    {
      "type": "authorize_to_view",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "authority_level": {
          "enum": [
            "Manage",
            "Edit",
            "ViewOnly",
            null
          ],
          "comment": "Authority level refers to the level of access or permission that a person has to view report information or content.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        },
        "has_report": {
          "targets": [
            "report"
          ],
          "comment": "Has_report refers to a unique report identifier for which the authorization to view has been granted."
        }
      }
    },
    {
      "type": "campaign_relation",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "campaign_identifier": {
          "type": "string",
          "comment": "A unique identifier assigned to a campaign."
        }
      },
      "relationships": {
        "appeared_on": {
          "targets": [
            "company"
          ],
          "comment": "Appeared_on refers to the platform on which the ad campaign appeared, such as Facebook or Google."
        },
        "has_user_session": {
          "targets": [
            "invocation"
          ],
          "comment": "Has_user_session refers to the specific user session in which the campaign appeared."
        }
      }
    },
    {
      "type": "data_source",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {},
      "relationships": {
        "has_asset": {
          "targets": [
            "asset"
          ],
          "comment": "Relates to valuable resources or possessions."
        },
        "has_bot": {
          "targets": [
            "bot"
          ],
          "comment": "A bot is an AI application that collects data from the borrower, performs calculations or provides generalized functions to support loan origination."
        },
        "has_company": {
          "targets": [
            "company"
          ],
          "comment": "A company is a legal entity formed by a group of people or individuals for the purpose of carrying out a business or commercial activity."
        },
        "has_document": {
          "targets": [
            "document"
          ],
          "comment": "A document is a written or printed record that contains information, data, or instructions in a fixed form that can be stored, transmitted, or communicated."
        },
        "has_employment": {
          "targets": [
            "employment",
            "employment"
          ],
          "comment": "Employment refers to the state of being employed, meaning a person has a job or occupation and is receiving compensation for their work."
        },
        "has_expense": {
          "targets": [
            "expense"
          ],
          "comment": "A cost incurred by the property as part of maintenance, rental, or another process."
        },
        "has_income": {
          "targets": [
            "income"
          ],
          "comment": "Refers to earnings or revenue sources."
        },
        "has_listing": {
          "targets": [
            "listing"
          ],
          "comment": "Associates with a specific catalogued item or offer, typically for sale or trade."
        },
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        },
        "has_communication": {
          "targets": [
            "communication"
          ],
          "comment": "A communication is the delivery of knowledge or a message."
        }
      }
    },
    {
      "type": "filter",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {},
      "relationships": {
        "has_configuration": {
          "targets": [
            "configuration",
            "product_configuration"
          ],
          "comment": "Configuration is a type of filter that narrows down a dataset to display only specific data related to the given configuration."
        },
        "has_data_guid": {
          "targets": [
            "class"
          ],
          "comment": "Data GUID (Globally Unique Identifier) is a type of filter that narrows down a dataset to display only specific data related to the GUID."
        },
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        }
      }
    },
    {
      "type": "finance_relation",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [
        "has_mortgage",
        "has_role",
        "has_automobile"
      ],
      "properties": {
        "borrower_intent": {
          "enum": [
            "DeterminePropertyPriceRangeGivenSalary",
            "DetermineSpecificPropertyAffordability",
            "FindCheapestInterestRate",
            "DetermineMaximumLoanAmount",
            null
          ],
          "comment": "Borrower intent refers to the motivation a borrower has when asking for information related to loan origination.",
          "type": [
            "string",
            "null"
          ]
        },
        "borrower_question": {
          "enum": [
            "How much do I need to make to afford a given purchase price?",
            "What can I afford?",
            "What is my interest rate?",
            "What is the payment for a given purchase price?",
            null
          ],
          "comment": "Borrower intent type refers to the type of intent a borrower has when asking for information related to loan origination.",
          "type": [
            "string",
            "null"
          ]
        },
        "feedback_value": {
          "enum": [
            "I Want To Think On It",
            "Payment Is Too High",
            "Rate Is Too High",
            "Taxes Surprised Me",
            null
          ],
          "comment": "Feedback value refers to feedback received from the customer.",
          "type": [
            "string",
            "null"
          ]
        },
        "has_main_applicant": {
          "type": "boolean",
          "comment": "The main applicant on a loan application is the person who is financially responsible for repaying the loan. This person is also known as the borrower or the applicant."
        },
        "has_stage_value": {
          "enum": [
            "InContact",
            "RateShopping",
            "Learning",
            "Browsing",
            "ReadyToBuy",
            "AlreadyPreapproved",
            null
          ],
          "comment": "The stage value refers to an applicant's stage in the home buying process. For example, a borrower might be 'just looking' or 'ready to buy.'",
          "type": [
            "string",
            "null"
          ]
        },
        "loan_identifier": {
          "type": "string",
          "comment": "A unique identifier assigned to a loan by a specific company or institution. Different companies may use different identifiers for the same loan."
        },
        "role": {
          "enum": [
            "Appraiser",
            "AppraiserSupervisor",
            "AssignFrom",
            "AssignTo",
            "Attorney",
            "AttorneyInFact",
            "AuthorizedRepresentative",
            "AuthorizedThirdParty",
            "BankruptcyFiler",
            "BankruptcyTrustee",
            "BeneficialInterestParty",
            "BillToParty",
            "Borrower",
            "RealEstateBroker",
            "Builder",
            "Client",
            "ClosingAgent",
            "Conservator",
            "ConsumerReportingAgency",
            "CooperativeCompany",
            "CorrespondentLender",
            "Cosigner",
            "CreditCounselingAgent",
            "CreditEnhancementRiskHolder",
            "CustodianNotePayTo",
            "DebtCollector",
            "Defendant",
            "DeliverRescissionTo",
            "DesignatedContact",
            "DocumentCustodian",
            "EnoteController",
            "EnoteControllerTransferee",
            "EnoteCustodian",
            "EnoteCustodianTransferee",
            "EnoteDelegateeForTransfers",
            "EnoteRegisteringParty",
            "EnoteServicer",
            "EnoteServicerTransferee",
            "EnoteTransferInitiator",
            "Executor",
            "FhaSponsor",
            "FloodCertificateProvider",
            "FulfillmentParty",
            "GiftDonor",
            "Grantee",
            "Grantor",
            "Guarantor",
            "HazardInsuranceAgent",
            "HazardInsuranceCompany",
            "HomeownersAssociation",
            "HousingCounselingAgency",
            "HousingCounselingAgent",
            "Hud1SettlementAgent",
            "Interviewer",
            "InterviewerEmployer",
            "Investor",
            "IrstaxFormThirdParty",
            "LawFirm",
            "Lender",
            "LenderBranch",
            "LienHolder",
            "LoanCloser",
            "LoanDeliveryFilePreparer",
            "LoanFunder",
            "LoanOfficer",
            "LoanOriginationCompany",
            "LoanOriginator",
            "LoanProcessor",
            "LoanSeller",
            "LoanUnderwriter",
            "LossPayee",
            "ManagementCompany",
            "MiCompany",
            "MortgageBroker",
            "NonTitleNonSpouseOwnershipInterest",
            "NonTitleSpouse",
            "Notary",
            "NotePayTo",
            "NotePayToRecipient",
            "Owner",
            "Payee",
            "Plaintiff",
            "PoolInsurer",
            "PoolIssuer",
            "PoolIssuerTransferee",
            "PreapprovalReader",
            "PreparedBy",
            "ProjectDeveloper",
            "ProjectManagementAgent",
            "PropertyAccessContact",
            "PropertyJurisdictionalAuthority",
            "PropertyOwner",
            "PropertyPreservationAgent",
            "PropertyPurchaser",
            "PropertySeller",
            "RealEstateAgent",
            "ReceivingParty",
            "RegistryOperator",
            "RegulatoryAgency",
            "RequestingParty",
            "RespondToParty",
            "RespondingParty",
            "ReturnTo",
            "ReviewAppraiser",
            "SecurityIssuer",
            "ServiceBureau",
            "ServiceProvider",
            "Servicer",
            "ServicerPaymentCollection",
            "Settlor",
            "Spouse",
            "SubmittingParty",
            "SuccessorInInterest",
            "TaxAssessor",
            "TaxCollector",
            "TaxServiceProvider",
            "TaxServicer",
            "TaxableParty",
            "Taxpayer",
            "ThirdPartyInvestor",
            "ThirdPartyOriginator",
            "TitleCompany",
            "TitleHolder",
            "TitleUnderwriter",
            "Trust",
            "TrustBeneficiary",
            "Trustee",
            "Unspecified",
            "WarehouseLender",
            "Witness",
            "CoBorrower",
            null
          ],
          "comment": "A role refers to a defined set of responsibilities, permissions, and privileges that are assigned to an individual or a group of individuals within an organization or system.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_company": {
          "targets": [
            "company"
          ],
          "comment": "A company is a legal entity formed by a group of people or individuals for the purpose of carrying out a business or commercial activity."
        },
        "has_insurance": {
          "targets": [
            "insurance"
          ],
          "comment": "A person who owns property, an automobile or another financial asset may also have insurance on that asset, which is considered financial debt. Insurance is a policy that provides financial protection for physical assets like homes, or financial assets like mortgages."
        },
        "has_lease": {
          "targets": [
            "lease"
          ],
          "comment": "A person can have a lease, which is considered financial debt. A lease is a legally binding agreement between two parties, typically a landlord (lessor) and a tenant (lessee), in which the lessor agrees to rent out a property or asset to the lessee for a specified period of time and under certain conditions."
        },
        "has_loan": {
          "targets": [
            "loan"
          ],
          "comment": "A loan timeline is a chronological record capturing the progression and changes of loan attributes over time."
        },
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        },
        "has_property": {
          "targets": [
            "property"
          ],
          "comment": "Property is a piece of land and any structures or improvements that are permanently attached to it. This includes residential, commercial, and industrial buildings, as well as natural resources such as water, minerals, and crops that are located on the land. A person can have property and be considered a property owner. If the person owns the property outright, it is a financial asset. If the person has taken out a loan to purchase the property, it is a financial debt because it represents money that they have borrowed from the lender and must repay over time."
        },
        "has_rent": {
          "targets": [
            "rent"
          ],
          "comment": "A person can owe rent, which is considered financial debt. Rent refers to payments made by a tenant to a landlord in exchange for the use and occupancy of a property or space. Rent can be paid for a variety of properties, including apartments, houses, offices, retail spaces, and more."
        },
        "has_tax": {
          "targets": [
            "tax"
          ],
          "comment": "Property can have tax. Property tax is a type of tax that is levied on the value of real estate or other types of property, such as land, buildings, and homes. The tax is usually assessed and collected by local governments, such as cities or counties, and is used to fund local services such as schools, police and fire departments, road maintenance, and other community services."
        }
      }
    },
    {
      "type": "member",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {},
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        },
        "has_project": {
          "targets": [
            "project"
          ],
          "comment": "A project is a group of related objects that is associated with a particular project or initiative. It is a way to organize and manage requests and issues that are related to a specific goal or objective."
        },
        "has_ticket": {
          "targets": [
            "ticket"
          ],
          "comment": "A ticket is a record of a customer's or engineer's question, request, or issue that needs to be addressed by a support team."
        }
      }
    },
    {
      "type": "mortgage_application",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {},
      "relationships": {
        "has_loan": {
          "targets": [
            "loan"
          ],
          "comment": "A loan is a financial agreement between a lender and a borrower, in which the lender provides the borrower with a certain amount of money or assets, and the borrower agrees to repay the loan over time with interest and/or fees."
        },
        "has_mortgage_plan": {
          "targets": [
            "mortgage_plan"
          ],
          "comment": "A mortgage application has a plan. A mortgage plan in a mortgage application typically refers to the proposed repayment plan for the loan. It outlines how the borrower plans to repay the loan over time, including the amount of each payment, the frequency of payments, and the length of the repayment period."
        },
        "has_pricing_schema": {
          "targets": [
            "pricing_schema"
          ],
          "comment": "A mortgage application has a pricing schema. A pricing schema, also known as a pricing model, is a method used by lenders to determine the interest rate and fees that will be charged to a borrower for a mortgage loan. Pricing schemas take into account a variety of factors that can impact the risk of lending to a particular borrower, including their credit score, income, employment history, debt-to-income ratio, and the size of the down payment."
        }
      }
    },
    {
      "type": "ontology",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {},
      "relationships": {
        "has_product_category": {
          "targets": [
            "product_category"
          ]
        },
        "has_product_family": {
          "targets": [
            "product_family"
          ]
        }
      }
    },
    {
      "type": "product_api",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [
        "has_example",
        "has_request_sample",
        "has_response_sample"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "product_api_identifier": {
          "type": "string"
        },
        "product_api_invocation_type": {
          "enum": [
            "Analytics",
            "SinglePartner",
            "Operation",
            "AggregatedPartner",
            "Notification",
            "Proxy",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "product_api_type": {
          "enum": [
            "Configuration",
            "Function",
            "Platform",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_api": {
          "targets": [
            "api"
          ]
        },
        "has_api_schema": {
          "targets": [
            "api_schema"
          ]
        },
        "has_example": {
          "targets": [
            "example"
          ]
        },
        "has_price": {
          "targets": [
            "product_price"
          ]
        },
        "has_product": {
          "targets": [
            "product"
          ]
        },
        "has_product_api_example": {
          "targets": [
            "example"
          ]
        },
        "has_product_configuration": {
          "targets": [
            "product_configuration"
          ]
        },
        "has_request_sample": {
          "targets": [
            "collection"
          ]
        },
        "has_response_sample": {
          "targets": [
            "collection"
          ]
        }
      }
    },
    {
      "type": "product_configuration",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "description": {
          "type": "string"
        },
        "product_configuration_identifier": {
          "type": "string"
        }
      },
      "relationships": {
        "configured_for_api": {
          "targets": [
            "product_api"
          ]
        },
        "configured_for_company": {
          "targets": [
            "company"
          ]
        },
        "configured_for_product": {
          "targets": [
            "product"
          ]
        },
        "has_configuration": {
          "targets": [
            "configuration",
            "product_configuration"
          ]
        },
        "has_product": {
          "targets": [
            "product"
          ]
        },
        "has_product_api": {
          "targets": [
            "product_api"
          ]
        },
        "owned_by_company": {
          "targets": [
            "company"
          ]
        }
      }
    },
    {
      "type": "project_member",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {},
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        },
        "has_task_project": {
          "targets": [
            "task_project"
          ],
          "comment": "Task management system of the product"
        }
      }
    },
    {
      "type": "qualification",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "has_income": {
          "type": "string",
          "comment": "Refers to earnings or revenue sources."
        }
      },
      "relationships": {
        "has_document": {
          "targets": [
            "document"
          ],
          "comment": "A document is a written or printed record that contains information, data, or instructions in a fixed form that can be stored, transmitted, or communicated."
        },
        "has_income": {
          "targets": [
            "income"
          ],
          "comment": "Refers to earnings or revenue sources."
        },
        "has_qualifier": {
          "targets": [
            "bot"
          ],
          "comment": "A qualifier is an AI application (bot) that assesses data and performs calculations as needed, to ensure data quality, relevance and trustworthiness."
        }
      }
    },
    {
      "type": "source",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "has_property_name": {
          "type": "string",
          "comment": "A source may refer to a property name. A property name is a unique identifier given to a specific property, such as a building or parcel of land. This name is used to distinguish the property from others and may be used in legal documents, property listings, and other official records."
        }
      },
      "relationships": {
        "has_associated_class": {
          "targets": [
            "class"
          ],
          "comment": "An associated class is a class that is related to another class in some way. A class is a user-defined data type that encapsulates data and functions which operate on that data. It defines the structure and behavior of objects that are instances of the class."
        },
        "has_originator_company": {
          "targets": [
            "company"
          ],
          "comment": "A source may be associated with a loan originator company. A loan originator company is a financial institution or company that is responsible for the initial application and processing of a loan. Loan originator companies may include banks, credit unions, mortgage brokers, and online lenders. "
        },
        "has_originator_person": {
          "targets": [
            "person"
          ],
          "comment": "A source may be associated with a loan originator person. A loan originator person is an individual who works for a loan originator company and is responsible for processing loan applications and helping borrowers secure financing. Loan originator persons may be referred to as loan officers or mortgage loan originators. They work directly with borrowers to collect information, evaluate creditworthiness, and provide guidance on loan options and terms."
        }
      }
    },
    {
      "type": "task_member",
      "container_name": "relationships",
      "is_deprecated": true,
      "deprecated_properties": [],
      "properties": {},
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        },
        "has_task_project": {
          "targets": [
            "task_project"
          ],
          "comment": "Task management system of the product"
        }
      }
    },
    {
      "type": "view",
      "container_name": "relationships",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {},
      "relationships": {
        "has_configuration": {
          "targets": [
            "configuration",
            "product_configuration"
          ],
          "comment": "Configuration is a type of filter that narrows down a dataset to display only specific data related to the given configuration."
        },
        "has_data_guid": {
          "targets": [
            "class"
          ],
          "comment": "Data GUID (Globally Unique Identifier) is a type of filter that narrows down a dataset to display only specific data related to the GUID."
        },
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        }
      }
    },
    {
      "type": "rent",
      "container_name": "rents",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "end_date": {
          "type": "string",
          "format": "date",
          "comment": "The end date is the date when the borrower is expected to have fully repaid the mortgage loan and the mortgage is considered to be fully paid off. This date is typically specified in the mortgage agreement and is calculated based on the term of the mortgage, which is the length of time the borrower has to repay the loan."
        },
        "monthly_rate": {
          "type": "decimal",
          "comment": "Monthly rate refers to the amount of rent that is charged on a monthly basis for the use and occupancy of a property or space."
        },
        "number_of_annual_rent_days": {
          "type": "integer",
          "comment": "Number of fair rental days per year that a property has been rented."
        },
        "start_date": {
          "type": "dateTime",
          "comment": "The origination date is the date on which a loan or financial instrument, such as a mortgage loan, is first created or issued. For mortgage loans, the origination date is typically the date on which the borrower signs the loan documents and the lender disburses the funds to complete the purchase or refinance of the property. The origination date is important because it is used to calculate the loan's term, which is the length of time over which the borrower will make payments on the loan."
        }
      },
      "relationships": {
        "has_expense": {
          "targets": [
            "expense"
          ],
          "comment": "A cost incurred by the property as part of maintenance, rental, or another process."
        },
        "has_income": {
          "targets": [
            "income"
          ],
          "comment": "Refers to earnings or revenue sources."
        }
      }
    },
    {
      "type": "replacement",
      "container_name": "replacements",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "replacement_reason": {
          "type": "string",
          "comment": "Cause for substituting one object with another."
        }
      },
      "relationships": {
        "replaced_by": {
          "targets": [
            "class"
          ],
          "comment": "The new object that has substituted the original."
        },
        "replaces": {
          "targets": [
            "class"
          ],
          "comment": "The original object being substituted."
        }
      }
    },
    {
      "type": "report",
      "container_name": "reports",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "embedded_url": {
          "type": "string",
          "comment": "A report embedded URL, also known as an embedded link, is a hyperlink to a specific report that can be inserted into a webpage or document to provide easy access to external content or resources. "
        },
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        },
        "public_url": {
          "type": "string",
          "comment": "A report public URL is a web address that can be accessed by anyone with an internet connection. It is a unique identifier that specifies the location of a particular report on the internet."
        },
        "report_identifier": {
          "type": "string",
          "comment": "A report identifier is a unique identifier that is assigned to a specific report. The purpose of a report identifier is to provide a way to easily identify and track individual reports within a larger system."
        }
      },
      "relationships": {}
    },
    {
      "type": "residence",
      "container_name": "residences",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "has_expense": {
          "type": "string",
          "comment": "An expense represents a cost incurred by an entity in the process of generating revenue."
        },
        "residence_community_property_state_indicator": {
          "type": "boolean",
          "comment": "When true, indicates the residence is located in a community property state."
        },
        "residency_basis_type": {
          "enum": [
            "Unknown",
            "LivingRentFree",
            "Rent",
            "Own",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "residency_duration_months_count": {
          "type": "integer",
          "comment": "residency duration months count refers to the length of time, in months, that a borrower has lived at a specific property, typically their primary residence. \n\nThis information is important in determining the borrower's stability and establishing their credit history at a specific address. The residency duration months count is also used in evaluating the borrower's eligibility for certain mortgage products and loan underwriting criteria. The length of residency at a property can impact the terms and conditions of the mortgage loan and may affect the interest rate and other loan features."
        },
        "residency_duration_years_count": {
          "type": "integer",
          "comment": "residency duration years count refers to the length of time, in years, that a borrower has lived at a specific property, typically their primary residence. \n\nThis information is important in determining the borrower's stability and establishing their credit history at a specific address. The residency duration years count is used in evaluating the borrower's eligibility for certain mortgage products and loan underwriting criteria. The length of residency at a property can impact the terms and conditions of the mortgage loan and may affect the interest rate and other loan features."
        },
        "residency_end_date": {
          "type": "string",
          "format": "date",
          "comment": "residency end date refers to the date on which a borrower's residency at a specific property, typically their primary residence, comes to an end. \n\nThis information is important in determining the borrower's stability and establishing their credit history at a specific address. The residency end date is used in evaluating the borrower's eligibility for certain mortgage products and loan underwriting criteria. It can also impact the terms and conditions of the mortgage loan and may affect the interest rate and other loan features."
        },
        "residency_reported_date": {
          "type": "string",
          "format": "date",
          "comment": "residency reported date refers to the date on which a borrower's residency at a specific property, typically their primary residence, is reported or documented.\n\nThis information is important in determining the borrower's stability and establishing their credit history at a specific address. The residency reported date is used in evaluating the borrower's eligibility for certain mortgage products and loan underwriting criteria. It can also impact the terms and conditions of the mortgage loan and may affect the interest rate and other loan features."
        },
        "residency_start_date": {
          "type": "string",
          "format": "date",
          "comment": "residency start date in mortgage banking refers to the date when a borrower moves into a new home and begins living there as their primary residence. \n\nThis date is used to determine the start of the occupancy period for the property, which is rdf:type factor that lenders consider when underwriting rdf:type mortgage loan. It helps lenders to assess the borrower's ability to repay the loan and to determine the interest rate and terms of the loan."
        },
        "residency_type": {
          "enum": [
            "Prior",
            "Current",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_address": {
          "targets": [
            "address"
          ],
          "comment": "Indicates a specific location or postal information."
        },
        "has_expense": {
          "targets": [
            "expense"
          ],
          "comment": "A cost incurred by the property as part of maintenance, rental, or another process."
        },
        "has_landlord": {
          "targets": [
            "person"
          ]
        },
        "has_property": {
          "targets": [
            "property"
          ],
          "comment": "Property is a piece of land and any structures or improvements that are permanently attached to it. In the context of property tax, a property can have a tax levied against it. The tax is usually assessed and collected by local governments, such as cities or counties, and is used to fund local services such as schools, police and fire departments, road maintenance, and other community services. "
        },
        "has_resident": {
          "targets": [
            "person"
          ],
          "comment": "Individual currently residing at or associated with this residence. This is an @id of person instance from save_personal_information response."
        }
      }
    },
    {
      "type": "room",
      "container_name": "rooms",
      "is_deprecated": true,
      "deprecated_properties": [],
      "properties": {
        "room_feature_type": {
          "enum": [
            "ClosetCabinetry",
            "SplitBedrooms",
            "RecessedLighting",
            "FrenchDoorsAtriumDoors",
            "WalkInPantry",
            "JettedTub",
            "BreakfastArea",
            "WoodBurningFireplace",
            "DiningArea",
            "WoodStove",
            "BasketballCourt",
            "SeparateShower",
            "BayWindow",
            "HighCeilings",
            "EatInKitchen",
            "WaterTreatmentSystem",
            "BuiltInFeatures",
            "WalkInClosets",
            "EntranceFoyer",
            "ExposedBeams",
            "DualSinks",
            "GasFireplace",
            "TubShower",
            "BreakfastBar",
            "Fireplace",
            "DualStaircase",
            "Wainscotting",
            "SeparateFormalDiningRoom",
            null
          ],
          "comment": "Refers to the type of feature found in a room.",
          "type": [
            "string",
            "null"
          ]
        },
        "room_feature_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the room feature type."
        },
        "room_type": {
          "enum": [
            "BonusRoom",
            "EnsuiteFullBath",
            "Den",
            "Foyer",
            "GameRoom",
            "MediaRoom",
            "HalfBath",
            "Bathroom",
            "DiningRoom",
            "Laundry",
            "Library",
            "AllRooms",
            "Kitchen",
            "FullBathroom",
            "FamilyRoom",
            "Office",
            "GreatRoom",
            "Bedroom",
            "RecreationRoom",
            "Workshop",
            "MasterBedroom",
            "Unknown",
            "UtilityRoom",
            "ExerciseRoom",
            "LivingRoom",
            null
          ],
          "comment": "Indicates the purpose the room serves. For example, a bedroom room type is used for sleeping.",
          "type": [
            "string",
            "null"
          ]
        },
        "room_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the room type."
        },
        "square_footage": {
          "type": "integer",
          "comment": "Square footage refers to the total area of a room measured in square feet"
        }
      },
      "relationships": {}
    },
    {
      "type": "value_history",
      "container_name": "value_histories",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "tax_year": {
          "type": "string",
          "comment": "The tax year for which the property valuation data applies."
        },
        "just_value": {
          "type": "decimal",
          "comment": "The just or fair market value of the property as determined by the property appraiser."
        },
        "land_value": {
          "type": "decimal",
          "comment": "The assessed value of the land portion of the property, excluding improvements."
        },
        "market_assessed": {
          "type": "decimal",
          "comment": "The total market value of the property as assessed for taxation purposes."
        },
        "capped_assessed": {
          "type": "decimal",
          "comment": "The assessed value after applying any assessment increase limitations or caps."
        },
        "exemptions": {
          "type": "decimal",
          "comment": "The total value of all exemptions applied to the property assessment."
        },
        "classified_use": {
          "type": "decimal",
          "comment": "The value of the property based on its classified use, if applicable (e.g., agricultural)."
        },
        "taxable": {
          "type": "decimal",
          "comment": "The final taxable value of the property after all exemptions and adjustments."
        }
      },
      "relationships": {
        "has_property": {
          "targets": [
            "property"
          ],
          "comment": "The property that was sold."
        }
      }
    },
    {
      "type": "sales_history",
      "container_name": "sales_histories",
      "is_deprecated": false,
      "deprecated_properties": [
        "sold_to",
        "has_property",
        "ownership_transfer_transaction_type_other_description",
        "sale_type_other_description",
        "arms_length_indicator",
        "current_sales_price_amount",
        "for_sale_by_owner_indicator",
        "ownership_transfer_comment_description",
        "ownership_transfer_transaction_amount",
        "ownership_transfer_transaction_type"
      ],
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "arms_length_indicator": {
          "type": "boolean",
          "comment": "Indicates that this is an arm's length transaction. An arm's length transaction is between a willing buyer and a willing seller with no undue influence on either party and there is no relationship between the parties except that of the specific transactio"
        },
        "current_sales_price_amount": {
          "type": "decimal",
          "comment": "The amount that a property is currently being offered for sale."
        },
        "for_sale_by_owner_indicator": {
          "type": "boolean",
          "comment": "When true, indicates that the property is for sale by owner."
        },
        "ownership_transfer_comment_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Free-from comment regarding the transfer of ownership for a given property.",
          "minLength": 1
        },
        "ownership_transfer_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date of the transfer of ownership of real property as recognized in the jurisdiction in which it is located.",
          "minLength": 1
        },
        "ownership_transfer_transaction_amount": {
          "type": "decimal",
          "comment": "The amount of transaction (typically the sale price) related to the transfer of ownership of real property as recognized in the jurisdiction in which it is located."
        },
        "ownership_transfer_transaction_type": {
          "enum": [
            "DeedTransferOnly",
            "CashSale",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "ownership_transfer_transaction_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form text field used to collect additional information when Other is selected for Ownership Transfer Transaction Type.",
          "minLength": 1
        },
        "purchase_price_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "The total dollar amount paid by the borrower for the property. The purchase price is presented on the offer to purchase."
        },
        "sale_type": {
          "enum": [
            "ProbateSale",
            "ShortSale",
            "CourtOrderedNonForeclosureSale",
            "ReoPostForeclosureSale",
            "TrusteeNonJudicialForeclosureSale",
            "RelocationSale",
            "TrusteeJudicialForeclosureSale",
            "TypicallyMotivated"
          ],
          "optional": true
        },
        "sale_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          
          "comment": "A free-form text field that specifies the enumeration when the value of Other is used for Sale Type.",
          "minLength": 1
        }
      },
      "relationships": {
        "sold_to": {
          "targets": [
            "person",
            "company"
          ],
          "comment": "The person or company to whom the property was sold."
        },
        "has_property": {
          "targets": [
            "property"
          ],
          "comment": "The property that was sold."
        }
      },
      "example": {
        "source_http_request": "GET /Property/Details?parcelId={{request_identifier}} HTTP/1.1\r\nHost: pbcpao.gov\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nConnection: keep-alive\r\n\r\n",
        "request_identifier": "52434205310037080",
        "ownership_transfer_date": "2022-04-07",
        "purchase_price_amount": "560,000.00"
      }
    },
    {
      "type": "deed",
      "container_name": "deeds",
      "is_deprecated": false,
      "deprecated_properties": [],
      "description": "Represents a legal deed document that transfers ownership of real property from one party to another. Contains information about the deed type, recording details, and associated parties.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "deed_type": {
            "type": "string",
            "comment": "The type of deed document used to transfer property ownership.",
            "enum": [
              "Warranty Deed",
              "Special Warranty Deed",
              "Quitclaim Deed",
              "Grant Deed",
              "Bargain and Sale Deed",
              "Lady Bird Deed",
              "Transfer on Death Deed",
              "Sheriff's Deed",
              "Tax Deed",
              "Trustee's Deed",
              "Personal Representative Deed",
              "Correction Deed",
              "Deed in Lieu of Foreclosure",
              "Life Estate Deed",
              "Joint Tenancy Deed",
              "Tenancy in Common Deed",
              "Community Property Deed",
              "Gift Deed",
              "Interspousal Transfer Deed",
              "Wild Deed"
              
            ],
            "optional": true
          }


        }
    },
    {
      "type": "saved_search",
      "container_name": "saved_searches",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "date_saved": {
          "type": "string",
          "format": "date",
          "comment": "The date when the search URL was saved."
        },
        "search_terms": {
          "type": "string",
          "comment": "The search terms associated with the saved search URL."
        },
        "search_url": {
          "type": "string",
          "comment": "The actual URL of the saved search."
        }
      },
      "relationships": {}
    },
    {
      "type": "voucher",
      "container_name": "vouchers",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "voucher_name": {
          "type": "string",
          "comment": "The name of the voucher"
        },
        "voucher_number": {
          "type": "string",
          "comment": "The unique number assigned to the voucher"
        },
        "voucher_type": {
          "enum": [
            "Discount",
            "Gift",
            "Promotional",
            "Referral",
            "Reward",
            null
          ],
          "comment": "The type of the voucher",
          "type": [
            "string",
            "null"
          ]
        },
        "voucher_value_description": {
          "type": "string",
          "comment": "The description of the voucher value"
        }
      },
      "relationships": {
        "has_lead": {
          "targets": [
            "lead"
          ],
          "comment": "Associates the voucher with a specific lead"
        },
        "has_address": {
          "targets": [
            "address"
          ],
          "comment": "The address ID of the property the customer is having."
        },
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "The person ID who performed add the voucher"
        }
      }
    },
    {
      "type": "section",
      "container_name": "sections",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "cooling_system_type": {
          "enum": [
            "CeilingFans",
            "Electric",
            "Ductless",
            "Hybrid",
            "CentralAir",
            "WindowAirConditioner",
            "WholeHouseFan",
            "CeilingFan",
            "GeothermalCooling",
            "Zoned",
            null
          ],
          "comment": "Refers to the type of cooling system used in the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "cooling_system_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the cooling system type."
        },
        "heating_system_type": {
          "enum": [
            "ElectricFurnace",
            "GasFurnace",
            "Ductless",
            "Radiant",
            "Solar",
            "HeatPump",
            "Central",
            "Baseboard",
            null
          ],
          "comment": "Refers to the type of heating system used in the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "heating_system_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the heating system type."
        },
        "pool_type": {
          "enum": [
            "Free",
            "Automatic",
            "Chlorination",
            "Cleaning",
            "Enclosure",
            "System",
            "Gunite",
            "Solar",
            "Equipment",
            "Form",
            "Fenced",
            "Heat",
            "Fiberglass",
            "Screen",
            "Water",
            "Association",
            "SaltWater",
            "AboveGround",
            "Pool",
            "Concrete",
            "PoolEquipment",
            "CommunityPool",
            "CommunitySpa",
            "CleaningSystem",
            "Heated",
            "BuiltIn",
            null
          ],
          "comment": "Refers to the type of pool associated with a structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "pool_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the pool type."
        },
        "section_amenity_type": {
          "enum": [
            "Compactor",
            "Electric",
            "Heater",
            "Hot",
            "Range",
            "Rented",
            "Softener",
            "Solar",
            "Trash",
            "Water",
            "SelfCleaningOven",
            "ClosetCabinetry",
            "WaterSoftenerOwned",
            "ElectricRange",
            "OutdoorGrill",
            "RecessedLighting",
            "GardenTubRomanTub",
            "CooktopWithRangeHood",
            "Refrigerator",
            "JettedTub",
            "WoodBurningFireplace",
            "CentralVacuum",
            "Dryer",
            "GarageDoorOpener",
            "GasRange",
            "Washer",
            "PullDownAtticStairs",
            "GasWaterHeater",
            "SeparateShower",
            "Dishwasher",
            "Woodstove",
            "ElectricWaterHeater",
            "Washer/Dryer",
            "HighCeilings",
            "WaterTreatmentSystem",
            "BuiltInFeatures",
            "GarbageDisposal",
            "BuiltInOven",
            "WaterPurifier",
            "Microwave",
            "IceMaker",
            "DualSinks",
            "BuiltInMicrowave",
            "GasFireplace",
            "TubShower",
            "Fireplace",
            "Fence",
            "VaultedCeilings",
            "Cooktop",
            null
          ],
          "comment": "Refers to the type of amenity associated with a section.",
          "type": [
            "string",
            "null"
          ]
        },
        "section_amenity_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the section amenity type."
        },
        "section_type": {
          "enum": [
            "BonusRoom",
            "Attached",
            "AttachedParking",
            "Den",
            "EnsuiteFullBath",
            "GolfCartGarage",
            "Foyer",
            "SplitBedrooms",
            "Porch",
            "GameRoom",
            "MediaRoom",
            "HalfBath",
            "Bathroom",
            "LivingDiningRoom",
            "Driveway",
            "TwoOrMoreSpacesGarage",
            "DiningRoom",
            "WalkInPantry",
            "KitchenDiningCombo",
            "BreakfastArea",
            "Laundry",
            "Library",
            "Balcony",
            "AllRooms",
            "Kitchen",
            "DiningArea",
            "FullBathroom",
            "TwoCarGarage",
            "Garage",
            "SeparateShower",
            "ThreeCarGarage",
            "CircularDriveway",
            "Pantry",
            "CoveredParking",
            "FamilyRoom",
            "OpenPatioPorch",
            "EatInKitchen",
            "Office",
            "GreatRoom",
            "WalkInClosets",
            "EntranceFoyer",
            "CoveredPorch",
            "Open",
            "GuestParking",
            "Patio",
            "Bedroom",
            "RecreationRoom",
            "OpenParking",
            "RVAccessParking",
            "MasterBedroom",
            "Unknown",
            "UtilityRoom",
            "Workshop",
            "TwoOrMoreSpacesParking",
            "BreakfastBar",
            "CoveredPatio",
            "ExerciseRoom",
            "Attic",
            "LivingRoom",
            "DualStaircase",
            "SeparateFormalDiningRoom",
            null
          ],
          "comment": "Refers to the type of section associated with a property.",
          "type": [
            "string",
            "null"
          ]
        },
        "section_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the section type."
        },
        "spa_type": {
          "enum": [
            "JapaneseSoakingTub",
            "InGround",
            "Rooftop",
            "NaturalHotSprings",
            "Saltwater",
            "Jacuzzi",
            "WoodFiredHotTub",
            "Heated",
            null
          ],
          "comment": "Refers to the type of spa.",
          "type": [
            "string",
            "null"
          ]
        },
        "spa_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the spa type."
        },
        "view_type": {
          "enum": [
            "Courtyard",
            "Ocean",
            "City",
            "Garden",
            "Bay",
            "Marina",
            null
          ],
          "comment": "Refers to characteristics associated with a view from the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "view_type_other_description": {
          "type": "string",
          "comment": "A free-form field to capture additional detail when Other is selected for the view type."
        }
      },
      "relationships": {}
    },
    {
      "type": "service",
      "container_name": "services",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "service_identifier": {
          "type": "string",
          "comment": "A service identifier is a unique identifier or code that is assigned to a software service to identify it within the Staircase platform."
        }
      },
      "relationships": {}
    },
    {
      "type": "session_telemetry",
      "container_name": "session_telemetries",
      "is_deprecated": true,
      "deprecated_properties": [],
      "properties": {
        "load_time": {
          "type": "integer",
          "comment": "Load time refers to the amount of milliseconds it takes for product to fully load and become ready for use by a user. The load time is measured from the moment a user starts a product to the point where it is fully loaded and ready for the user to interact with."
        },
        "number_of_clicks": {
          "type": "integer",
          "comment": "Number of clicks refers to the number of times a user clicks a mouse button or a touchpad while using a product. The number of clicks measures user engagement with a particular product and evaluates the efficiency of a particular interface or workflow. For example, if a user must click through multiple levels of menus or buttons to access a particular feature, it may be an indication that the interface could be streamlined or simplified to improve user experience."
        },
        "visitor_time_spent": {
          "type": "integer",
          "comment": "Visitor time spent refers to the amount of milliseconds that a visitor spent using the product. The visitor time spent is measured from the moment a user starts a product to the point where the user stops interacting with a product."
        }
      },
      "relationships": {}
    },
    {
      "type": "session",
      "container_name": "sessions",
      "is_deprecated": true,
      "deprecated_properties": [],
      "properties": {
        "session_end_time": {
          "type": "dateTime",
          "comment": "Session end time is the date and time on which a session was completed."
        },
        "session_start_time": {
          "type": "dateTime",
          "comment": "Session start time is the date and time on which the session began."
        },
        "user_guid": {
          "type": "string",
          "comment": "A user GUID (Globally Unique Identifier) is a unique identifier for the user who created the session."
        }
      },
      "relationships": {}
    },
    {
      "type": "settlement",
      "container_name": "settlements",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "has_income": {
          "type": "string",
          "comment": "Refers to earnings or revenue sources."
        }
      },
      "relationships": {
        "has_address": {
          "targets": [
            "address"
          ],
          "comment": "Indicates a specific location or postal information."
        },
        "has_asset": {
          "targets": [
            "asset"
          ],
          "comment": "Relates to valuable resources or possessions."
        },
        "has_communication": {
          "targets": [
            "communication"
          ],
          "comment": "Refers to a means or method of communication."
        },
        "has_company": {
          "targets": [
            "company"
          ],
          "comment": "A company is a legal entity formed by a group of people or individuals for the purpose of carrying out a business or commercial activity."
        },
        "has_credit": {
          "targets": [
            "credit"
          ],
          "comment": "Credit refers to information about an individual's or organization's creditworthiness: their ability to borrow money with the promise of repaying the debt later, the amount of money they've borrowed but haven't repaid, and their history of repaying debt according to credit agreements."
        },
        "has_finance_relation": {
          "targets": [
            "finance_relation"
          ],
          "comment": "Links to financial relationships or transactions."
        },
        "has_income": {
          "targets": [
            "income"
          ],
          "comment": "Refers to earnings or revenue sources."
        },
        "has_liability": {
          "targets": [
            "liability"
          ],
          "comment": "Represents the financial obligations or debts that an individual or entity has, typically arising from borrowed funds, owed services, or other commitments. This relationship highlights the indebtedness and the financial responsibilities that need to be met"
        },
        "has_loan": {
          "targets": [
            "loan"
          ],
          "comment": "A loan timeline is a chronological record capturing the progression and changes of loan attributes over time."
        },
        "has_loan_timeline": {
          "targets": [
            "loan_timeline"
          ],
          "comment": "Associates a loan with its chronological record that captures the progression and changes of loan attributes over time."
        },
        "has_ownership": {
          "targets": [
            "ownership"
          ],
          "comment": "The ownership record associated with a person."
        },
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        },
        "has_property": {
          "targets": [
            "property"
          ],
          "comment": "Property is a piece of land and any structures or improvements that are permanently attached to it. In the context of property tax, a property can have a tax levied against it. The tax is usually assessed and collected by local governments, such as cities or counties, and is used to fund local services such as schools, police and fire departments, road maintenance, and other community services. "
        },
        "has_residence": {
          "targets": [
            "residence"
          ],
          "comment": "Associates with a place of dwelling or habitation."
        }
      }
    },
    {
      "type": "signature",
      "container_name": "signatures",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "initials_indicator": {
          "type": "boolean"
        },
        "signature_date": {
          "type": "date"
        },
        "signature_type": {
          "enum": [
            "FullSignature",
            "Initials",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "signed_indicator": {
          "type": "boolean"
        }
      },
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        }
      }
    },
    {
      "type": "site_configuration",
      "container_name": "site_configurations",
      "is_deprecated": true,
      "deprecated_properties": [],
      "properties": {
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        },
        "has_console": {
          "type": "string",
          "comment": "A console is a user interface element that displays a collection of data in a list format (list view). A list view typically consists of a vertical list of items, each item showing a single row of data with one or more columns of information."
        },
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        },
        "product_configuration_identifier": {
          "type": "string",
          "comment": "A product configuration identifier is a unique code or string of characters assigned to a specific product configuration that is used to uniquely identify and access that product configuration."
        }
      },
      "relationships": {}
    },
    {
      "type": "site_event",
      "container_name": "site_events",
      "is_deprecated": true,
      "deprecated_properties": [],
      "properties": {
        "browser": {
          "type": "string",
          "comment": "A browser is a software application that allows users to access and view websites on the internet. It acts as an interface between the user and the web, enabling the retrieval and display of web pages and other online content."
        },
        "operating_system": {
          "type": "string",
          "comment": "Operating system (OS) refers to the software that manages and controls the basic functions and operations of the device."
        },
        "page_path": {
          "type": "string",
          "comment": "Page path refers to the specific location or address of a web page within a website's hierarchy or directory structure. It is a part of the URL that helps identify and locate a specific webpage."
        },
        "platform": {
          "type": "string",
          "comment": "Platform is the combination of computer hardware and software that provides the foundation on which the site event occurred."
        },
        "site_event_date": {
          "type": "dateTime",
          "comment": "Site event date refers to the date that a particular site event was captured."
        },
        "site_event_identifier": {
          "type": "string",
          "comment": "A site event identifier is a unique identifier for a site event."
        },
        "site_event_type": {
          "type": "string",
          "comment": "Site event type refers to the category of the site_event. Types are typically those returned by Google Analytics to classify site event types."
        }
      },
      "relationships": {
        "has_address": {
          "targets": [
            "address"
          ],
          "comment": "Indicates a specific location or postal information."
        },
        "has_device": {
          "targets": [
            "device"
          ],
          "comment": "Device refers to any physical component or peripheral that is part of a computer system and performs specific functions or tasks."
        }
      }
    },
    {
      "type": "site",
      "container_name": "sites",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        },
        "has_console": {
          "type": "string",
          "comment": "A console is a user interface element that displays a collection of data in a list format (list view). A list view typically consists of a vertical list of items, each item showing a single row of data with one or more columns of information."
        },
        "has_transaction": {
          "type": "string",
          "comment": "The 'has_transaction' property links the example to a specific transaction that may be associated with it. This could represent a record of versions of the example using transaction's collections"
        },
        "name": {
          "type": "string",
          "comment": "The API schema field name refers to the identifier or label assigned to a specific attribute or property within the schema definition of an Application Programming Interface (API)."
        },
        "product_configuration_identifier": {
          "type": "string",
          "comment": "A product configuration identifier is a unique code or string of characters assigned to a specific product configuration that is used to uniquely identify and access that product configuration."
        }
      },
      "relationships": {
        "has_transaction": {
          "targets": [
            "transaction"
          ],
          "comment": "The 'has_transaction' property links the example to a specific transaction that may be associated with it. This could represent a record of versions of the example using transaction's collections"
        }
      }
    },
    {
      "type": "source_property",
      "container_name": "source_properties",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "source_date": {
          "type": "string",
          "format": "date",
          "comment": "A specific date for when this source has created"
        },
        "source_identifier": {
          "type": "string",
          "comment": "Identifier for the source property"
        }
      },
      "relationships": {
        "has_source": {
          "targets": [
            "class"
          ],
          "comment": "Associates with a business or corporate entity."
        },
        "has_source_product": {
          "targets": [
            "product"
          ],
          "comment": "Associates with a product."
        },
        "has_source_product_api": {
          "targets": [
            "product_api"
          ],
          "comment": "Associates with a product api."
        },
        "has_source_product_configuration": {
          "targets": [
            "product_configuration"
          ],
          "comment": "Associates with a product configuration."
        },
        "has_target": {
          "targets": [
            "class"
          ],
          "comment": "Target for the source property"
        }
      }
    },
    {
      "type": "spoken_language",
      "container_name": "spoken_languages",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "spoken_language_type": {
          "enum": [
            "Arabic",
            "Vietnamese",
            "Creole",
            "Portuguese",
            "French",
            "ASL",
            "Polish",
            "Russian",
            "Cantonese",
            "Korean",
            "Hmong",
            "Chinese Mandarin",
            "Swahili",
            "Hindi",
            "Indonesian",
            "English",
            "Turkish",
            "Ukrainian",
            "Italian",
            "Czech",
            "Spanish",
            "German",
            "Cambodian",
            "Farsi",
            null
          ],
          "comment": "Name of a language spoken by a person.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_person": {
          "targets": [
            "person"
          ],
          "comment": "A person is an individual member of the human race."
        }
      }
    },
    {
      "type": "flood_storm_information",
      "container_name": "flood_storm_information",
      "description": "FEMA flood and storm information data containing flood zone classifications, insurance requirements, and evacuation zone designations for property locations.",
      "is_deprecated": false,
      "deprecated_properties": [
        "flood_insurance_legacy",
        "storm_info_legacy"
      ],
      "properties": {
        "community_id": {
          "type": [
            "string",
            "null"
          ],
          "comment": "The FEMA community identifier code for the jurisdiction where the property is located.",
          "minLength": 1
        },
        "panel_number": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "The FEMA flood insurance rate map (FIRM) panel number that contains the property location."
        },
        "map_version": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "The version identifier of the FEMA flood map panel."
        },
        "effective_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "The date when the current flood map version became effective. Format: MM/DD/YYYY or YYYY-MM-DD.",
          "minLength": 1
        },
        "evacuation_zone": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "The evacuation zone designation (e.g., A, B, C) assigned to the property location for emergency planning purposes."
        },
        "flood_zone": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "The FEMA flood zone designation indicating the level of flood risk (e.g., AE, X, VE)."
        },
        "flood_insurance_required": {
          "type": "boolean",
          "comment": "Indicates whether flood insurance is required based on the flood zone designation and federal regulations."
        },
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "fema_search_url": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "format": "uri",
          "comment": "The FEMA Map Service Center URL used to search and verify flood information for the specific property address."
        }
      }
    },
    {
      "type": "structure",
      "container_name": "structures",
      "is_deprecated": false,
      "deprecated_properties": [
        "door_type",
        "door_type_other_description",
        "flooring_type",
        "flooring_type_other_description",
        "construction_material_type",
        "construction_material_type_other_description",
        "roof_type",
        "roof_type_other_description",
        "window_type",
        "window_type_other_description",
        "window_design_type",
        "window_design_type_other_description",
        "window_material_type",
        "window_material_type_other_description",
        "window_treatment_type",
        "window_treatment_type_other_description",
        "flooring_material_type",
        "flooring_material_type_other_description",
        "architectural_style_type_other_description",
        "door_design_type_other_description",
        "door_material_type_other_description",
        "building_material_type_other_description",
        "roof_design_type_other_description",
        "roof_material_type_other_description",
        "building_area_total",
        "building_material_type",
        "gross_living_area_square_feet_number",
        "structure_add_on",
        "add_on_type_other_description",
        "door_design_type",
        "door_material_type",
        "exterior_door_core_type"
      ],
      "description": "Represents the physical building structure with detailed architectural and construction information including materials, conditions, styles, and structural elements. Captures the physical characteristics and condition of buildings on properties.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "architectural_style_type": {
          "enum": [
            "MidCenturyModern",
            "Contemporary",
            "Victorian",
            "Ranch",
            "Craftsman",
            "Tudor",
            "Minimalist",
            "Colonial",
            "Farmhouse",
            null
          ],
          "comment": "Refers to the style, structure, and aesthetics of a building.",
          "type": [
            "string",
            "null"
          ]
        },
        "architectural_style_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the architectural style type.",
          "minLength": 1
        },
        "attachment_type": {
          "enum": [
            "Attached",
            "SemiDetached",
            "Detached",
            null
          ],
          "comment": "Indicates the structural relationship of the dwelling to other units. 'Attached' means the unit shares walls on both sides with adjacent dwellings (e.g., rowhouse or townhouse); 'SemiDetached' means it shares a wall with one other unit (e.g., duplex); 'Detached' means the unit stands alone with no shared walls.",
          "type": [
            "string",
            "null"
          ]
        },
        "building_material_type": {
          "enum": [
            "Manufactured",
            "EngineeredWood",
            "Terazzo",
            "Brick",
            "Wood",
            "CinderBlock",
            "Concrete",
            "Shingle",
            "Composition",
            "Linoleum",
            "Stone",
            "CeramicTile",
            "Block",
            "WoodSiding",
            "ImpactGlass",
            "Carpet",
            "Marble",
            "Vinyl",
            "Tile",
            "PouredConcrete",
            "Metal",
            "Glass",
            "Laminate",
            "Stucco",
            null
          ],
          "comment": "Refers to the type of building material associated with a structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "building_material_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the building material type.",
          "minLength": 1
        },
        "exterior_wall_material_primary": {
          "enum": [
            "Brick",
            "Natural Stone",
            "Manufactured Stone",
            "Stucco",
            "Vinyl Siding",
            "Wood Siding",
            "Fiber Cement Siding",
            "Metal Siding",
            "Concrete Block",
            "EIFS",
            "Log",
            "Adobe",
            "Precast Concrete",
            "Curtain Wall"
          ],
          "comment": "Primary material used for exterior wall cladding and structure.",
          "type": 
            "string"

        },
        "exterior_wall_material_secondary": {
          "enum": [
            "Brick Accent",
            "Stone Accent",
            "Wood Trim",
            "Metal Trim",
            "Stucco Accent",
            "Vinyl Accent",
            "Decorative Block",
            null
          ],
          "comment": "Secondary material used for exterior wall accents or trim.",
          "type": [
            "string",
            "null"
          ]
        },
        "exterior_wall_condition_primary": {
          "enum": [
            "New",
            "Excellent",
            "Good",
            "Fair",
            "Poor",
            "Damaged"
          ],
          "comment": "Observed condition of the exterior wall materials.",
          "type": 
            "string"
       
        },
        "exterior_wall_insulation_type_primary": {
          "enum": [
            "Fiberglass Batt",
            "Blown Cellulose",
            "Spray Foam",
            "Rigid Foam Board",
            "Reflective Barrier",
            "Rock Wool",
            "Natural Fiber",
            "Unknown"
          ],
          "comment": "Type of insulation used in exterior wall cavities.",
          "type": 
            "string"

        },
        "exterior_wall_condition_secondary": {
          "enum": [
            "New",
            "Excellent",
            "Good",
            "Fair",
            "Poor",
            "Damaged"
          ],
          "comment": "Observed condition of the exterior wall materials.",
          "type": 
            "string"
       
        },
        "exterior_wall_insulation_type_secondary": {
          "enum": [
            "Fiberglass Batt",
            "Blown Cellulose",
            "Spray Foam",
            "Rigid Foam Board",
            "Reflective Barrier",
            "Rock Wool",
            "Natural Fiber",
            "Unknown"
          ],
          "comment": "Type of insulation used in exterior wall cavities.",
          "type": 
            "string"
       
        },
        "flooring_material_primary": {
          "enum": [
            "Solid Hardwood",
            "Engineered Hardwood",
            "Laminate",
            "Luxury Vinyl Plank",
            "Sheet Vinyl",
            "Ceramic Tile",
            "Porcelain Tile",
            "Natural Stone Tile",
            "Carpet",
            "Area Rugs",
            "Polished Concrete",
            "Bamboo",
            "Cork",
            "Linoleum",
            "Terrazzo",
            "Epoxy Coating",
            null
          ],
          "comment": "Primary flooring material covering floor surface.",
          "type": [
            "string",
            "null"
          ]
        },
        "flooring_material_secondary": {
          "enum": [
            "Solid Hardwood",
            "Engineered Hardwood",
            "Laminate",
            "Luxury Vinyl Plank",
            "Ceramic Tile",
            "Carpet",
            "Area Rugs",
            "Transition Strips",
            null
          ],
          "comment": "Secondary flooring material if multiple types are used in different areas.",
          "type": [
            "string",
            "null"
          ]
        },
        "subfloor_material": {
          "enum": [
            "Plywood",
            "OSB",
            "Concrete Slab",
            "Engineered Wood",
            "Particle Board",
            "Unknown",
            null
          ],
          "comment": "Material used for subfloor structure beneath finish flooring.",
          "type": [
            "string",
            "null"
          ]
        },
        "flooring_condition": {
          "enum": [
            "New",
            "Excellent",
            "Good",
            "Fair",
            "Poor",
            "Damaged",
            null
          ],
          "comment": "Overall condition of flooring materials and installation.",
          "type": [
            "string",
            "null"
          ]
        },
        "interior_wall_structure_material": {
          "enum": [
            "Wood Frame",
            "Steel Frame",
            "Concrete Block",
            "Brick",
            "Load Bearing",
            "Non-Load Bearing",
            null
          ],
          "comment": "Structural material used for interior wall framing.",
          "type": [
            "string",
            "null"
          ]
        },
        "interior_wall_structure_material_primary": {
          "enum": [
            "Wood Frame",
            "Steel Frame",
            "Concrete Block",
            "Brick",
            "Load Bearing",
            "Non-Load Bearing"
          ],
          "comment": "Structural material used for interior wall framing.",
          "type": 
            "string"
          
        },
        "interior_wall_structure_material_secondary": {
          "enum": [
            "Wood Frame",
            "Steel Frame",
            "Concrete Block",
            "Brick",
            "Load Bearing",
            "Non-Load Bearing"
          ],
          "comment": "Structural material used for interior wall framing.",
          "type": 
            "string"
        },
        "interior_wall_surface_material_primary": {
          "enum": [
            "Drywall",
            "Plaster",
            "Wood Paneling",
            "Exposed Brick",
            "Exposed Block",
            "Wainscoting",
            "Shiplap",
            "Board and Batten",
            "Tile",
            "Stone Veneer",
            "Metal Panels",
            "Glass Panels",
            "Concrete",
            null
          ],
          "comment": "Primary surface material covering interior walls throughout most of the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "interior_wall_surface_material_secondary": {
          "enum": [
            "Wainscoting",
            "Chair Rail",
            "Crown Molding",
            "Baseboards",
            "Wood Trim",
            "Stone Accent",
            "Tile Accent",
            "Metal Accent",
            "Glass Insert",
            "Decorative Panels",
            "Feature Wall Material",
            null
          ],
          "comment": "Secondary material used for interior wall accents, trim, or feature walls.",
          "type": [
            "string",
            "null"
          ]
        },
        "interior_wall_finish_primary": {
          "enum": [
            "Paint",
            "Primer and Paint",
            "Textured Paint",
            "Natural Finish",
            "Stain",
            "Clear Coat",
            "Exposed Natural",
            null
          ],
          "comment": "Primary finish treatment applied over interior wall surfaces.",
          "type": [
            "string",
            "null"
          ]
        },
        "interior_wall_finish_secondary": {
          "enum": [
            "Wallpaper",
            "Wall Decals",
            "Decorative Plaster",
            "Faux Finish",
            "Fabric Wall Covering",
            "Murals",
            "Decorative Paint Technique",
            null
          ],
          "comment": "Secondary finish treatment for accent areas or decorative elements.",
          "type": [
            "string",
            "null"
          ]
        },
        "interior_wall_condition": {
          "enum": [
            "New",
            "Excellent",
            "Good",
            "Fair",
            "Poor",
            "Damaged",
            null
          ],
          "comment": "Overall condition of interior wall surfaces and finishes.",
          "type": [
            "string",
            "null"
          ]
        },
        "construction_material_type": {
          "enum": [
            "Block",
            "Brick",
            "Wood",
            "PouredConcrete",
            "Glass",
            "EngineeredWood",
            "Stone",
            null
          ],
          "comment": "Refers to the type of construction material associated with a structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "construction_material_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the construction material type.",
          "minLength": 1
        },
        "door_design_type": {
          "enum": [
            "Panel",
            "Sliding",
            "Glass",
            "FrenchDoorsAtriumDoors",
            "Barn",
            "Dutch",
            "Pocket",
            "French",
            "Atrium",
            "Carriage",
            null
          ],
          "comment": "Refers to the door design type.",
          "type": [
            "string",
            "null"
          ]
        },
        "door_design_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the door design type.",
          "minLength": 1
        },
        "door_material_type": {
          "enum": [
            "Manufactured",
            "EngineeredWood",
            "Terazzo",
            "Brick",
            "Wood",
            "CinderBlock",
            "Concrete",
            "Shingle",
            "Composition",
            "Linoleum",
            "Stone",
            "CeramicTile",
            "Block",
            "WoodSiding",
            "ImpactGlass",
            "Carpet",
            "Marble",
            "Vinyl",
            "Tile",
            "PouredConcrete",
            "Metal",
            "Glass",
            "Laminate",
            null
          ],
          "comment": "Refers to the door material type.",
          "type": [
            "string",
            "null"
          ]
        },
        "door_material_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the door material type.",
          "minLength": 1
        },
        "door_type": {
          "enum": [
            "Panel",
            "Sliding",
            "Glass",
            "Barn",
            "Dutch",
            "Pocket",
            "French",
            "Atrium",
            "Carriage",
            null
          ],
          "comment": "Refers to the type of door.",
          "type": [
            "string",
            "null"
          ]
        },
        "door_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the door type.",
          "minLength": 1
        },
        "flooring_material_type": {
          "enum": [
            "Manufactured",
            "EngineeredWood",
            "Terazzo",
            "Brick",
            "Wood",
            "CinderBlock",
            "Concrete",
            "Shingle",
            "Composition",
            "Linoleum",
            "Stone",
            "CeramicTile",
            "Block",
            "WoodSiding",
            "ImpactGlass",
            "Carpet",
            "Marble",
            "Vinyl",
            "Tile",
            "PouredConcrete",
            "Metal",
            "Glass",
            "Laminate",
            null
          ],
          "comment": "Refers to the type of material used for a floor.",
          "type": [
            "string",
            "null"
          ]
        },
        "flooring_material_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the flooring material.",
          "minLength": 1
        },
        "flooring_type": {
          "enum": [
            "Tile",
            "CeramicTile",
            "Terrazzo",
            "Wood",
            "Concrete",
            "EngineeredWood",
            "Linoleum",
            "Carpet",
            "Laminate",
            "Marble",
            "Vinyl",
            null
          ],
          "comment": "Refers to the type of flooring used in a structure's interior.",
          "type": [
            "string",
            "null"
          ]
        },
        "flooring_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the flooring type.",
          "minLength": 1
        },
        "roof_covering_material": {
          "enum": [
            "3-Tab Asphalt Shingle",
            "Architectural Asphalt Shingle",
            "Metal Standing Seam",
            "Metal Corrugated",
            "Clay Tile",
            "Concrete Tile",
            "Natural Slate",
            "Synthetic Slate",
            "Wood Shake",
            "Wood Shingle",
            "TPO Membrane",
            "EPDM Membrane",
            "Modified Bitumen",
            "Built-Up Roof",
            "Green Roof System",
            "Solar Integrated Tiles",
            null
          ],
          "comment": "Material used for the primary roof covering.",
          "type": [
            "string",
            "null"
          ]
        },
        "roof_underlayment_type": {
          "enum": [
            "Felt Paper",
            "Synthetic Underlayment",
            "Rubberized Asphalt",
            "Unknown",
            null
          ],
          "comment": "Type of underlayment beneath roof covering.",
          "type": [
            "string",
            "null"
          ]
        },
        "roof_structure_material": {
          "enum": [
            "Wood Truss",
            "Wood Rafter",
            "Steel Truss",
            "Concrete Beam",
            "Engineered Lumber",
            null
          ],
          "comment": "Material used for roof structural support.",
          "type": [
            "string",
            "null"
          ]
        },
        "roof_design_type": {
          "enum": [
            "Gable",
            "Hip",
            "Flat",
            "Mansard",
            "Gambrel",
            "Shed",
            "Saltbox",
            "Butterfly",
            "Bonnet",
            "Clerestory",
            "Dome",
            "Barrel",
            "Combination",
            null
          ],
          "comment": "Architectural design of the roof structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "roof_condition": {
          "enum": [
            "New",
            "Excellent",
            "Good",
            "Fair",
            "Poor",
            "Damaged",
            "Leaking",
            null
          ],
          "comment": "Visible condition of the roof covering and structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "roof_age_years": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "Estimated age of the roof covering in years.",
          "minimum": 1
        },
        "gutters_material": {
          "enum": [
            "Aluminum",
            "Vinyl",
            "Steel",
            "Copper",
            "Galvanized Steel",
            null
          ],
          "comment": "Material used for gutter system.",
          "type": [
            "string",
            "null"
          ]
        },
        "gutters_condition": {
          "enum": [
            "New",
            "Good",
            "Fair",
            "Poor",
            "Missing",
            "Damaged",
            null
          ],
          "comment": "Condition of gutters and downspout system.",
          "type": [
            "string",
            "null"
          ]
        },
        "roof_design_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the roof design type.",
          "minLength": 1
        },
        "roof_material_type": {
          "enum": [
            "Manufactured",
            "EngineeredWood",
            "Terazzo",
            "Brick",
            "Wood",
            "CinderBlock",
            "Concrete",
            "Shingle",
            "Composition",
            "Linoleum",
            "Stone",
            "CeramicTile",
            "Block",
            "WoodSiding",
            "ImpactGlass",
            "Carpet",
            "Marble",
            "Vinyl",
            "Tile",
            "PouredConcrete",
            "Metal",
            "Glass",
            "Laminate",
            null
          ],
          "comment": "Refers to the material a roof is made of.",
          "type": [
            "string",
            "null"
          ]
        },
        "roof_material_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the roof material type.",
          "minLength": 1
        },
        "roof_type": {
          "enum": [
            "Tile",
            "Mansard",
            "Bonnet",
            "Flat",
            "Concrete",
            "Metal",
            "Saltbox",
            "Barrel",
            "Composition",
            "Gambrel",
            "Shingle",
            "Gable",
            "Clerestory",
            "Hip",
            null
          ],
          "comment": "Refers to the type of roof associated with a structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "roof_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the roof type.",
          "minLength": 1
        },
        "window_design_type": {
          "enum": [
            "Skylights",
            "Transom",
            "Egress",
            "Garden",
            "Awning",
            "DoubleHung",
            "Jalousie",
            "SingleHung",
            "Sliding",
            "Bay",
            "Bow",
            "Greenhouse",
            "Picture",
            "Casement",
            null
          ],
          "comment": "Refers to the window design.",
          "type": [
            "string",
            "null"
          ]
        },
        "foundation_type": {
          "enum": [
            "Slab on Grade",
            "Crawl Space",
            "Full Basement",
            "Partial Basement",
            "Pier and Beam",
            "Basement with Walkout",
            "Stem Wall",
            null
          ],
          "comment": "Type of foundation system supporting the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "foundation_material": {
          "enum": [
            "Poured Concrete",
            "Concrete Block",
            "Stone",
            "Brick",
            "Treated Wood Posts",
            "Steel Piers",
            "Precast Concrete",
            "Insulated Concrete Forms",
            null
          ],
          "comment": "Primary material used in foundation construction.",
          "type": [
            "string",
            "null"
          ]
        },
        "foundation_waterproofing": {
          "enum": [
            "Membrane",
            "Coating",
            "Drainage System",
            "Unknown",
            null
          ],
          "comment": "Type of waterproofing system used on foundation.",
          "type": [
            "string",
            "null"
          ]
        },
        "foundation_condition": {
          "enum": [
            "Excellent",
            "Good",
            "Fair",
            "Minor Cracks",
            "Major Cracks",
            "Settling",
            "Water Damage",
            "Unknown",
            null
          ],
          "comment": "Visible condition of the foundation system.",
          "type": [
            "string",
            "null"
          ]
        },
        "ceiling_structure_material": {
          "enum": [
            "Wood Joists",
            "Steel Joists",
            "Concrete",
            "Exposed Beams",
            "Truss System",
            null
          ],
          "comment": "Structural material supporting the ceiling.",
          "type": [
            "string",
            "null"
          ]
        },
        "ceiling_surface_material": {
          "enum": [
            "Drywall",
            "Plaster",
            "Wood Planks",
            "Acoustic Tile",
            "Metal Panels",
            "Suspended Grid",
            "Coffered",
            "Tray",
            "Exposed Structure",
            null
          ],
          "comment": "Material used for ceiling surface finish.",
          "type": [
            "string",
            "null"
          ]
        },
        "ceiling_insulation_type": {
          "enum": [
            "Fiberglass Batt",
            "Blown Insulation",
            "Spray Foam",
            "Rigid Board",
            "Unknown",
            null
          ],
          "comment": "Type of insulation above ceiling.",
          "type": [
            "string",
            "null"
          ]
        },
        "ceiling_height_average": {
          "type": [
            "number",
            "null"
          ],
          "comment": "Average ceiling height in feet."
        },
        "ceiling_condition": {
          "enum": [
            "New",
            "Excellent",
            "Good",
            "Fair",
            "Poor",
            "Damaged",
            null
          ],
          "comment": "Overall condition of ceiling materials and structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "exterior_door_material": {
          "enum": [
            "Solid Wood",
            "Wood Composite",
            "Steel",
            "Fiberglass",
            "Aluminum",
            "Glass",
            "Vinyl",
            "Wrought Iron",
            "Security Door",
            null
          ],
          "comment": "Material used for exterior door construction.",
          "type": [
            "string",
            "null"
          ]
        },
        "exterior_door_core_type": {
          "enum": [
            "Solid Core",
            "Insulated Core",
            "Honeycomb Core",
            "Glass Panel",
            null
          ],
          "comment": "Core construction type of exterior doors.",
          "type": [
            "string",
            "null"
          ]
        },
        "interior_door_material": {
          "enum": [
            "Solid Wood",
            "Hollow Core",
            "Solid Core",
            "Glass Panel",
            "Metal",
            "Composite",
            "Molded",
            "Bifold",
            "Pocket Door",
            "Barn Door",
            null
          ],
          "comment": "Material and construction of interior doors.",
          "type": [
            "string",
            "null"
          ]
        },
        "window_frame_material": {
          "enum": [
            "Vinyl",
            "Wood",
            "Aluminum",
            "Fiberglass",
            "Steel",
            "Composite",
            "Aluminum Clad Wood",
            "Vinyl Clad Wood",
            null
          ],
          "comment": "Material used for window frame construction.",
          "type": [
            "string",
            "null"
          ]
        },
        "window_glazing_type": {
          "enum": [
            "Single Pane",
            "Double Pane",
            "Triple Pane",
            "Low-E Coated",
            "Tempered",
            "Laminated",
            "Impact Resistant",
            "Argon Filled",
            "Tinted",
            "Smart Glass",
            null
          ],
          "comment": "Type and features of window glazing system.",
          "type": [
            "string",
            "null"
          ]
        },
        "window_operation_type": {
          "enum": [
            "Double Hung",
            "Single Hung",
            "Casement",
            "Sliding",
            "Awning",
            "Picture",
            "Bay",
            "Bow",
            "Garden",
            "Skylights",
            "Jalousie",
            "Fixed",
            null
          ],
          "comment": "Operational mechanism and style of windows.",
          "type": [
            "string",
            "null"
          ]
        },
        "window_screen_material": {
          "enum": [
            "Aluminum",
            "Fiberglass",
            "Pet Screen",
            "Solar Screen",
            null
          ],
          "comment": "Material used for window screens.",
          "type": [
            "string",
            "null"
          ]
        },
        "window_treatment_type": {
          "enum": [
            "Horizontal Blinds",
            "Vertical Blinds",
            "Roller Shades",
            "Cellular Shades",
            "Roman Shades",
            "Plantation Shutters",
            "Curtains",
            "Drapes",
            "Valances",
            "Window Film",
            null
          ],
          "comment": "Type of window treatments installed.",
          "type": [
            "string",
            "null"
          ]
        },
        "primary_framing_material": {
          "enum": [
            "Wood Frame",
            "Steel Frame",
            "Concrete Block",
            "Poured Concrete",
            "Masonry",
            "Engineered Lumber",
            "Post and Beam",
            "Log Construction",
            null
          ],
          "comment": "Primary material used for structural framing system.",
          "type": [
            "string",
            "null"
          ]
        },
        "secondary_framing_material": {
          "enum": [
            "Steel Beams",
            "Engineered Lumber",
            "Concrete Lintels",
            "Wood Beams",
            null
          ],
          "comment": "Secondary structural materials for support beams and lintels.",
          "type": [
            "string",
            "null"
          ]
        },
        "structural_damage_indicators": {
          "enum": [
            "Foundation Cracks",
            "Wall Cracks",
            "Ceiling Cracks",
            "Sagging Floors",
            "Sagging Roof",
            "Door/Window Misalignment",
            "Water Damage",
            "Termite Damage",
            "Settlement Issues",
            "None Observed",
            null
          ],
          "comment": "Observable indicators of structural damage or issues.",
          "type": [
            "string",
            "null"
          ]
        },
        "window_design_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the window design type.",
          "minLength": 1
        },
        "window_material_type": {
          "enum": [
            "Manufactured",
            "EngineeredWood",
            "Terazzo",
            "Brick",
            "Wood",
            "CinderBlock",
            "Concrete",
            "Shingle",
            "Composition",
            "Linoleum",
            "Stone",
            "CeramicTile",
            "Block",
            "WoodSiding",
            "ImpactGlass",
            "Carpet",
            "Marble",
            "Vinyl",
            "Tile",
            "PouredConcrete",
            "Metal",
            "Glass",
            "Laminate",
            null
          ],
          "comment": "Refers to the type of material a window is made from.",
          "type": [
            "string",
            "null"
          ]
        },
        "window_material_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the window type.",
          "minLength": 1
        },
        "window_treatment_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the window treatment type.",
          "minLength": 1
        },
        "window_type": {
          "enum": [
            "Blinds",
            "Skylights",
            "Transom",
            "Egress",
            "Garden",
            "Awning",
            "WoodFrames",
            "DoubleHung",
            "Jalousie",
            "ImpactGlass",
            "SingleHung",
            "Bay",
            "Sliding",
            "Bow",
            "Greenhouse",
            "Picture",
            "Casement",
            null
          ],
          "comment": "Refers to the type of window associated with a structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "window_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the window type.",
          "minLength": 1
        },
        "building_area_total": {
          "type": [
            "integer",
            "null"
          ],
          "comment": "The total enclosed floor area of a building, measured from the exterior faces of exterior walls or from the centerline of walls separating two buildings. ",
          "minimum": 1
        },
        "gross_living_area_square_feet_number": {
          "type": "decimal",
          "comment": "The total area of all habitable rooms above grade measured contiguously."
        },
        "finished_base_area": {
          "comment": "Finished ground-level base area (first-floor footprint) in square feet.",
          "type": "integer",
          "optional": true
       },
      "unfinished_base_area": {
        "comment": "Unfinished ground-level base area in square feet.",
        "type": "integer",
        "optional": true
       },
        "finished_basement_area": {
          "comment": "Finished basement area in square feet.",
          "type": "integer",
           "optional": true
        },
        "unfinished_basement_area": {
          "comment": "Unfinished basement area in square feet.",
          "type": "integer",
          "optional": true
        },
        "finished_upper_story_area": {
          "comment": "Finished upper story area (above the ground floor) in square feet.",
          "type": "integer",
          "optional": true
        },
      "unfinished_upper_story_area": {
        "comment": "Unfinished upper story or attic/loft space in square feet.",
        "type": "integer",
        "optional": true
      },
        "structure_add_on": {
          "enum": [
            "Dock",
            "Seawall",
            "Deck",
            "Firepit",
            "Pergola",
            "Gazebo",
            "OutdoorKitchen",
            "DetachedStructure",
            "BuiltInBBQ",
            null
          ],
          "comment": "Represents permanent or semi-permanent exterior structures that are not enclosed rooms but enhance outdoor functionality or aesthetics.",
          "type": [
            "string",
            "null"
          ]
        },
        "add_on_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to describe the structure add-on if 'Other' is selected.",
          "minLength": 1
        }
      }
    },
    {
      "type": "subscription_filter",
      "container_name": "subscription_filters",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "filter_value": {
          "type": "string",
          "comment": "The value against which subscription data will be compared, based on the specified operator."
        },
        "filter_value_type": {
          "enum": [
            "Long",
            "Integer",
            "Float",
            "Date",
            "Boolean",
            "DateTime",
            "Double",
            "Time",
            "String",
            "Decimal",
            null
          ],
          "comment": "Indicates the data type of the filter value, ensuring the right kind of comparison is applied.",
          "type": [
            "string",
            "null"
          ]
        },
        "operator": {
          "enum": [
            "LessThanOrEqual",
            "LessThan",
            "GreaterThanOrEqual",
            "GreaterThan",
            "Equal",
            "NotEqual",
            null
          ],
          "comment": "Specifies the type of comparison to be performed on the filter value against the actual subscription data.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "relationships": {
        "has_graph_entity": {
          "targets": [
            "graph_entity"
          ],
          "comment": "The 'has_graph_entity' property establishes a relationship between an invocation and a specific entity within a graph structure. This link can be used to represent the influence or impact of the invocation on various nodes or entities within a system's graph architecture"
        }
      }
    },
    {
      "type": "subscription",
      "container_name": "subscriptions",
      "is_deprecated": false,
      "deprecated_properties": [
        "has_transaction",
        "icebreaker_message",
        "icebreaker_message_obfuscated"
      ],
      "properties": {
        "automatic_tax_enabled": {
          "type": "boolean",
          "comment": "Determines if automatic tax calculation is enabled."
        },
        "billing_cycle_anchor": {
          "type": "dateTime",
          "comment": "Timestamp at which the subscription starts its billing cycle."
        },
        "currency": {
          "enum": [
            "GBP",
            "USD",
            "EUR",
            null
          ],
          "comment": "Currency used for the subscription.",
          "type": [
            "string",
            "null"
          ]
        },
        "current_period_end": {
          "type": "dateTime",
          "comment": "End date of the current period for which the subscription has been invoiced."
        },
        "current_period_start": {
          "type": "dateTime",
          "comment": "Start date of the current period for which the subscription has been invoiced."
        },
        "delivery_day": {
          "enum": [
            "Thursday",
            "Friday",
            "Tuesday",
            "Saturday",
            "Wednesday",
            "Monday",
            "Sunday",
            null
          ],
          "comment": "The day of the week on which the subscription deliverables (e.g., leads) are sent to the subscriber.",
          "type": [
            "string",
            "null"
          ]
        },
        "delivery_time": {
          "type": "string",
          "comment": "The time of day at which the subscription deliverables are sent to the subscriber."
        },
        "has_transaction": {
          "type": "string",
          "comment": "Indicates the transaction(s) related to a particular entity."
        },
        "number_of_unit": {
          "type": "integer",
          "comment": "The number of units (e.g., transactions) the subscriber receives or is billed for in each billing cycle."
        },
        "start_date": {
          "type": "dateTime",
          "comment": "The origination date is the date on which a loan or financial instrument, such as a mortgage loan, is first created or issued. For mortgage loans, the origination date is typically the date on which the borrower signs the loan documents and the lender disburses the funds to complete the purchase or refinance of the property. The origination date is important because it is used to calculate the loan's term, which is the length of time over which the borrower will make payments on the loan."
        },
        "subscription_status": {
          "enum": [
            "Incomplete",
            "Trialing",
            "PastDue",
            "Unpaid",
            "Canceled",
            "Active",
            "IncompleteExpired",
            null
          ],
          "comment": "Current status of the subscription.",
          "type": [
            "string",
            "null"
          ]
        },
        "subscription_unit_type": {
          "enum": [
            "ApiCall",
            "Image",
            "Datapoint",
            "Transaction",
            "PersonHour",
            "Subscription",
            "Document",
            "Page",
            "PM",
            "Person",
            "PMHour",
            "Product",
            "Hour",
            "Seat",
            "Environment",
            null
          ],
          "comment": "Type or category of units in the subscription.",
          "type": [
            "string",
            "null"
          ]
        },
        "total_cost": {
          "type": "decimal",
          "comment": "Total cost for the subscription based on the number of units minus any discounts or offers."
        }
      },
      "relationships": {
        "for_api": {
          "targets": [
            "product_api"
          ],
          "comment": "Indicates the API product for which the subscription is made."
        },
        "has_lead": {
          "targets": [
            "lead"
          ],
          "comment": "Associates the interaction with a specific lead or prospective entity."
        },
        "has_subscription_filter": {
          "targets": [
            "subscription_filter"
          ],
          "comment": "Associates an subscription a specific subscription filter criteria, indicating the conditions or parameters the entity adheres to or is influenced by in the context of subscriptions."
        },
        "has_subscription_price": {
          "targets": [
            "product_price"
          ],
          "comment": "Refers to the price associated with the subscription."
        },
        "has_transaction": {
          "targets": [
            "transaction"
          ],
          "comment": "Indicates the transaction(s) related to a particular entity."
        },
        "subscribed_company": {
          "targets": [
            "company"
          ],
          "comment": "Refers to the company to which the subscription deliverables are catered or related."
        },
        "subscribed_person": {
          "targets": [
            "person"
          ],
          "comment": "Refers to the individual who holds the subscription."
        },
        "subscribed_person_transaction": {
          "targets": [
            "transaction"
          ],
          "comment": "Refers to the Transaction of customer data."
        }
      }
    },
    {
      "type": "tag",
      "container_name": "tags",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "remote_tag_identifier": {
          "type": "string",
          "comment": "A remote tag identifier is a unique code or string of characters assigned to a specific tag that is used to uniquely identify and access that tag."
        },
        "title": {
          "type": "string",
          "comment": "A title is a unique label given to a ticket that is used to distinguish it from other tickets in the Staircase ticket management system. A title typically reflects the purpose of the ticket, and is often designed to be easy to remember and to quickly communicate support needs."
        },
        "value": {
          "type": "string",
          "comment": "Custom field value refers to data that is stored as a a value within a key-value pair."
        }
      },
      "relationships": {}
    },
    {
      "type": "task",
      "container_name": "task",
      "is_deprecated": true,
      "deprecated_properties": [],
      "properties": {
        "completed_date": {
          "type": "dateTime",
          "comment": "Completed date is the date on which a ticket was completed."
        },
        "created_date": {
          "type": "dateTime",
          "comment": "Created date refers to the date that the health metric was created."
        },
        "description": {
          "type": "string",
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax."
        },
        "due_date": {
          "type": "dateTime",
          "comment": "Due date is the date on which a ticket is due to be resolved."
        },
        "points": {
          "enum": [
            "Defect",
            "FeatureRequest",
            "Question",
            null
          ],
          "comment": "Points are a unit of measurement used to estimate the time required to complete a ticket. They are used to measure the complexity and size of the work involved in delivering a feature or functionality.",
          "type": [
            "string",
            "null"
          ]
        },
        "remote_task_identifier": {
          "type": "string",
          "comment": "A remote task identifier is a unique code or string of characters assigned by a remote task management system (Asana) to a specific task that is used to uniquely identify and access that task."
        },
        "task_status": {
          "enum": [
            "Next",
            "Done",
            "New",
            "InProgress",
            "Backlog",
            "Completed",
            null
          ],
          "comment": "A task status is a way to track the progress and current state of a task or issue in a task management system.",
          "type": [
            "string",
            "null"
          ]
        },
        "task_type": {
          "enum": [
            "Ticket",
            "Milestone",
            "Task",
            "Acceptance",
            null
          ],
          "comment": "A task type is a categorization of tasks based on their nature or purpose. Task types are used to help support teams prioritize and manage their work more efficiently.",
          "type": [
            "string",
            "null"
          ]
        },
        "title": {
          "type": "string",
          "comment": "A title is a unique label given to a ticket that is used to distinguish it from other tickets in the Staircase ticket management system. A title typically reflects the purpose of the ticket, and is often designed to be easy to remember and to quickly communicate support needs."
        }
      },
      "relationships": {
        "has_dependency": {
          "targets": [
            "member",
            "task",
            "ticket"
          ],
          "comment": "A ticket may have a dependency on other tickets, meaning that it cannot be addressed until tickets it is dependent on are completed."
        },
        "has_task_project": {
          "targets": [
            "task_project"
          ],
          "comment": "Task management system of the product"
        },
        "has_task_tag": {
          "targets": [
            "task_tag"
          ],
          "comment": "A task tag is a label or keyword that is associated with a task in a task management system. It is used to categorize or classify the task based on its nature, priority, or other characteristics."
        }
      }
    },
    {
      "type": "task_project",
      "container_name": "task_projects",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "has_project_member": {
          "type": "string",
          "comment": "A project member is a person who is assigned to support a project."
        },
        "remote_task_project_identifier": {
          "type": "string",
          "comment": "A remote task project identifier is a unique code or string of characters assigned by the remote task management system (Asana) to a specific task project that is used to uniquely identify and access that task project."
        },
        "title": {
          "type": "string",
          "comment": "A title is a unique label given to a ticket that is used to distinguish it from other tickets in the Staircase ticket management system. A title typically reflects the purpose of the ticket, and is often designed to be easy to remember and to quickly communicate support needs."
        }
      },
      "relationships": {}
    },
    {
      "type": "task_tag",
      "container_name": "task_tags",
      "is_deprecated": true,
      "deprecated_properties": [],
      "properties": {
        "remote_task_tag_identifier": {
          "type": "string",
          "comment": "A remote task tag identifier is a unique code or string of characters assigned by a remote task management system (Asana) to a specific task tag that is used to uniquely identify and access that task tag."
        },
        "title": {
          "type": "string",
          "comment": "A title is a unique label given to a ticket that is used to distinguish it from other tickets in the Staircase ticket management system. A title typically reflects the purpose of the ticket, and is often designed to be easy to remember and to quickly communicate support needs."
        },
        "value": {
          "type": "string",
          "comment": "Custom field value refers to data that is stored as a a value within a key-value pair."
        }
      },
      "relationships": {}
    },
    {
      "type": "tax",
      "container_name": "taxes",
      "is_deprecated": false,
      "deprecated_properties": [
        "has_payment",
        "service_provider_identifier",
        "service_provider_name",
        "escrowed_indicator",
        "authority_account_identifier",
        "description",
        "authority_name",
        "property_exemption_amount"
      ],
      "description": "Represents property tax information including assessed values, exemptions, tax amounts, and payment details. Tracks tax obligations and payments for real estate properties with authority and service provider information.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "tax_year": {
          "type": [
            "integer",
            "null"
          ],
          "pattern": "^[0-9]{4}$",
          "comment": "The tax year for which this property tax assessment applies.",
          "minimum": 1
        },
        "property_assessed_value_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "The assessed or SOH value of the property used as the basis for property tax calculations for a given tax year."
        },
        "property_market_value_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "The just or market  value of the property used as the basis for property tax calculations for a given tax year."
        },
        "property_exemption_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "The reduction amount applied to the assessed value, often based on exemptions like homestead, to determine the taxable value."
        },
        "property_building_amount": {
          "type": [
            "number",
            "null"
          ],
          "format": "currency",
          "comment": "The building or improvement value of the property used as the basis for property tax calculations for a given tax year."
        },
        "property_land_amount": {
          "type": [
            "number",
            "null"
          ],
          "format": "currency",
          "comment": "The land value of the property used as the basis for property tax calculations for a given tax year."
        },
        "property_taxable_value_amount": {
          "type": "decimal",
          "format": "currency",
          "comment": "The final property value on which tax is calculated, derived by subtracting the exemption amount from the assessed value."
        },
        "monthly_tax_amount": {
          "type": [
            "number",
            "null"
          ],
          "format": "currency",
          "comment": "The calculated property tax amount due for the specific month (if applicable)."
        },
        "authority_account_identifier": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "A unique identifier assigned to the tax authority itself, used to distinguish this authority from other tax collecting entities in the system."
        },
        "authority_name": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "The name of the government agency or organization that has the legal right to collect taxes (e.g., 'City of Springfield', 'Cook County', 'ABC School District')."
        },
        "description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Taxes are fees levied by federal, state, and local governments on income, goods and services, and property, among other things. There are several types of taxes in the United States, such as property tax, income tax, sales tax, payroll tax, excise tax and estate tax.",
          "minLength": 1
        },
        "escrowed_indicator": {
          "type": "boolean",
          "comment": "The escrowed indicator specifies whether a mortgage servicer takes a portion of the borrower's monthly mortgage payment and holds it in an escrow account until tax payments are due."
        },
        "period_end_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "period end date in mortgage banking expenses refers to the date that marks the end of a specific time period for which expenses are being reported. \nThis date is used to determine the duration of the time period for which expenses are being calculated and reported. The period end date can be used to calculate the total expenses for rdf:type specific time period, such as rdf:type month or rdf:type quarter, and can help mortgage companies to track and analyze their expenses over time. The period end date is an important factor in determining the accuracy and completeness of expense reporting in mortgage banking.",
          "minLength": 1
        },
        "period_start_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date",
          "comment": "period start date in mortgage banking expenses refers to the date that marks the beginning of a specific time period for which expenses are being reported. \nThis date is used in conjunction with the period end date to determine the duration of the time period for which expenses are being calculated and reported. The period start date can be used to calculate the total expenses for rdf:type specific time period, such as rdf:type month or rdf:type quarter, and can help mortgage companies to track and analyze their expenses over time. The period start date is an important factor in determining the accuracy and completeness of expense reporting in mortgage banking.",
          "minLength": 1
        },
        "service_provider_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A service provider identifier is a unique identifier issued to a company or individual who offers professional tax-related services to individuals, businesses, and other organizations.",
          "minLength": 1
        },
        "service_provider_name": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Service provider name is the name of a company or individual who offers professional tax-related services to individuals, businesses, and other organizations.",
          "minLength": 1
        }
      },
      "relationships": {
        "has_payment": {
          "targets": [
            "payment"
          ],
          "comment": "A payment refers to the transfer of money, goods, or services from one party (the payer) to another party (the payee) in exchange for a product, service, or debt settlement. Payments can take various forms, including cash, checks, bank transfers, credit cards, electronic funds transfers, mobile payments, and digital currencies."
        }
      },
      "example": {
        "source_http_request": "GET /Property/Details?parcelId={{request_identifier}} HTTP/1.1\r\nHost: pbcpao.gov\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nConnection: keep-alive\r\n\r\n",
        "request_identifier": "52434205310037080",
        "tax_year": 2024,
        "property_assessed_value_amount": "465,000.00",
        "property_exemption_amount": "0.00",
        "property_taxable_value_amount": "465,000.00",
        "monthly_tax_amount": "721.17",
        "authority_name": "Palm Beach County Property Appraiser",
        "period_start_date": "2024-01-01",
        "period_end_date": "2024-12-31"
      }
    },
    {
      "type": "tax_exemption",
      "container_name": "tax_exemptions",
      "is_deprecated": false,
      "deprecated_properties": [],
      "description": "Represents property tax exemptions including homestead, senior, portability, and other exemption types. Tracks exemption eligibility, amounts, and status for real estate properties.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "property_exemption_type": {
          "enum": [
            "Portability",
            "Homestead",
            "Add. Homestead",
            "Wid/Vet/Dis",
            "Senior",
            "Affordable Housing",
            null
          ],
          "comment": "The type of exemption applied to the property. Must be one of the predefined exemption types.",
          "type": [
            "string",
            "null"
          ]
        },
        "property_exemption_value": {
          "type": "decimal",
          "format": "currency",
          "comment": "The value associated with the exemption."
        }
      }
    },
    {
      "type": "tax_authority",
      "container_name": "tax_authorities",
      "is_deprecated": false,
      "deprecated_properties": [],
      "description": "Represents tax collecting authorities including county, municipal, school district, and other special district entities that have the legal right to levy and collect property taxes.",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "authority_name": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "The name of the government agency or organization that has the legal right to collect taxes (e.g., 'Miami-Dade County', 'City of Miami', 'Miami-Dade School Board')."
        },
        "authority_account_identifier": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "comment": "A unique identifier assigned to the tax authority itself, used to distinguish this authority from other tax collecting entities in the system."
        },
        "authority_category": {
          "enum": [
            "County",
            "Municipal",
            "School Board",
            "School District",
            "Independent School District",
            "Independent",
            "Special District",
            "Water District",
            "Fire District",
            "Library District",
            "Hospital District",
            "Community College District",
            "Transit Authority",
            "Port Authority",
            "Utility District",
            "Improvement District",
            "State",
            "Federal",
            null
          ],
          "comment": "The category or type of tax authority that determines its jurisdiction and tax collection scope.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    {
      "type": "terms_of_loan",
      "container_name": "terms_of_loans",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "amortization_type": {
          "enum": [
            "GraduatedPaymentArm",
            "Step",
            "Fixed",
            "Gem",
            "Gpm",
            "RateImprovementMortgage",
            "AdjustableRate",
            null
          ],
          "comment": "Loan amortization type refers to the method used to calculate and pay off a loan over time. The two most common types of loan amortization are fully amortizing and partially amortizing.  In a fully amortizing loan, the borrower makes regular payments (usually monthly) that include both principal and interest. Each payment reduces the principal balance of the loan, and over time the loan is gradually paid off in full. In a partially amortizing loan, the borrower makes regular payments that include both principal and interest, but the payments are not large enough to fully pay off the loan by the end of its term. As a result, at the end of the loan term, the borrower must either make a balloon payment to pay off the remaining balance, refinance the loan, or enter into another agreement with the lender.",
          "type": [
            "string",
            "null"
          ]
        },
        "amortization_type_other_description": {
          "type": "string",
          "comment": "A free-form text field used to collect additional information or a description of the amortization_type when other is selected."
        },
        "arm_first_cap_amount": {
          "type": "decimal",
          "comment": "A provision in the mortgage agreement that limits the amount by which the interest rate can increase during the initial adjustment period."
        },
        "arm_index_value_percent": {
          "type": "decimal",
          "comment": "A benchmark interest rate that serves as the basis for determining the interest rate on an adjustable-rate mortgage."
        },
        "arm_index_value_type": {
          "enum": [
            "SOFR",
            "Libor",
            "Treasury",
            "MTA",
            "FarmCredit",
            "Prime",
            "COFI",
            null
          ],
          "comment": "Refers to the specific type of benchmark or index used to determine the interest rate adjustments for an adjustable-rate mortgage (ARM).",
          "type": [
            "string",
            "null"
          ]
        },
        "arm_lifetime_cap_amount": {
          "type": "decimal",
          "comment": "A provision that limits the maximum interest rate that can be charged over the entire life of the ARM loan."
        },
        "arm_margin_percent": {
          "type": "decimal",
          "comment": "For adjustable-rate mortgages, refers to a fixed percentage that is added to a benchmark interest rate to determine the borrower's interest rate during each adjustment period."
        },
        "arm_periodic_cap_amount": {
          "type": "decimal",
          "comment": "A provision that limits how much the interest rate on the mortgage can change during a specific time interval, typically referred to as the adjustment period."
        },
        "combined_loan_to_value_cltv_ratio_percent": {
          "type": "decimal",
          "comment": "Combined Loan-to-Value (CLTV) ratio is a measure of the amount of debt a borrower has relative to the value of their property. \n\nIt is calculated by dividing the total amount of all mortgages on rdf:type property by the appraised value of the property.\n\nFor example, if rdf:type borrower has rdf:type mortgage for $150,000 and rdf:type home equity line of credit (HELOC) for $50,000, the CLTV ratio would be calculated as follows:\n\nCLTV ratio = ($150,000 + $50,000) / appraised value of the property\n\nThe CLTV ratio is expressed as rdf:type percentage and provides rdf:type snapshot of the borrower's overall leverage. A higher CLTV ratio indicates a higher level of debt relative to the value of the property, while a lower CLTV ratio indicates a lower level of debt relative to the value of the property.\n\nLenders use the CLTV ratio as one factor in determining rdf:type borrower's creditworthiness and their ability to repay the debt. Borrowers with a high CLTV ratio may be seen as higher risk and may be required to provide additional documentation or a larger down payment to secure financing."
        },
        "compensation_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "Fees or compensation that a loan originator or mortgage broker receives for facilitating the mortgage loan."
        },
        "compensation_percent": {
          "type": "decimal",
          "comment": "The percentage of the loan amount that a lender or mortgage broker receives for facilitating a mortgage loan."
        },
        "conforming_loan_indicator": {
          "type": "boolean",
          "comment": "conforming loan indicator is a flag or code used in mortgage banking to indicate whether a loan meets the guidelines set by the GSEs. \n- If the indicator is set to \"yes,\" it means that the loan meets the guidelines and is considered a conforming loan. \n- If the indicator is set to \"no,\" it means that the loan does not meet the guidelines and is considered a non-conforming loan.\n\nConforming loans are typically easier to obtain and come with lower interest rates than non-conforming loans, as they are seen as lower risk to the lender. Non-conforming loans, also known as jumbo loans, typically have higher interest rates and may have more stringent lending requirements as they are seen as higher risk.\n\nThe conforming loan limit, which is the maximum loan amount that rdf:type loan can be to be considered rdf:type conforming loan, is set by the GSEs and is based on the median home prices in rdf:type particular geographic area. The conforming loan limit is adjusted annually to reflect changes in housing prices.\n\nIn mortgage banking, rdf:type \"conforming loan\" is a loan that meets the guidelines set by government-sponsored enterprises (GSEs) such as Freddie Mac and Fannie Mae. These guidelines include maximum loan amounts, credit score requirements, and debt-to-income ratios, among others."
        },
        "current_interest_rate_percent": {
          "type": "decimal",
          "comment": "The current interest rate, expressed as a percent, for this loan."
        },
        "discount_points_amount": {
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "type": "decimal",
          "comment": "Discount points are prepaid interest that borrowers can pay at the time of closing when obtaining a mortgage loan. Each discount point typically costs 1% of the total loan amount and can be used to lower the interest rate on the loan."
        },
        "home_equity_combined_loan_to_value_hcltv_ratio_percent": {
          "type": "decimal",
          "comment": "Home Equity Combined Loan-to-Value (HCLTV) ratio percent is a measure of the amount of equity a homeowner has in their property compared to the total amount of debt secured by the property.\n\nThe HCLTV ratio is calculated as the sum of all outstanding mortgage debts (including the first mortgage and any home equity loans or lines of credit) divided by the appraised value of the property. The result is expressed as rdf:type percentage.\n\nFor example, if rdf:type homeowner has an outstanding first mortgage balance of $200,000 and rdf:type home equity loan balance of $50,000, and their property is appraised at $300,000, their HCLTV ratio would be (200,000 + 50,000) / 300,000 = 0.5, or 50%.\n\nLenders use the HCLTV ratio to assess the risk of rdf:type home equity loan or line of credit and to determine the maximum loan amount that can be approved. The lower the HCLTV ratio, the more equity the homeowner has in their property and the lower the risk to the lender. Lenders generally prefer rdf:type HCLTV ratio of 80% or lower.\n\nIn addition to the HCLTV ratio, lenders also consider other factors such as the borrower's credit score, income, and debt-to-income ratio, among others, when deciding whether to approve a home equity loan or line of credit."
        },
        "initial_fixed_period_effective_months_count": {
          "type": "integer",
          "comment": "The number of months in the initial fixed period of a loan with an adjustable rate or payment."
        },
        "loan_amortization_period_count": {
          "type": "integer",
          "comment": "The number periods (as defined by the loan_amortization_period_type) over which the scheduled loan payments of principal and/or interest are calculated to retire the obligation."
        },
        "loan_amortization_period_type": {
          "enum": [
            "Day",
            "Month",
            "Semimonthly",
            "Year",
            "Biweekly",
            "Week",
            "Quarter",
            null
          ],
          "comment": "",
          "type": [
            "string",
            "null"
          ]
        },
        "loan_annual_percentage_rate": {
          "restrictions": {
            "fractionDigits": 3,
            "totalDigits": 6
          },
          "type": "decimal",
          "comment": "A standardized way to express the true cost of borrowing on a loan, including both the interest rate and any applicable fees or costs. The APR is expressed as a percentage provides a more comprehensive view of the total cost of a loan than the nominal or stated interest rate alone."
        },
        "loan_cost": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "Total amount the loan will cost, as reported in a price estimate."
        },
        "loan_par_price_amount": {
          "type": "decimal",
          "comment": "Refers to the par price that the lender is offering the borrower, a baseline standard where the borrower does not receive any discount points or premium credits."
        },
        "loan_product_name": {
          "type": "string",
          "comment": "A free-form text field used to collect the brand name of the loan product that the lender is offering. The loan product name is a brand name that is specific to the lender's portfolio."
        },
        "loan_rate_lock_expiration_date": {
          "type": "string",
          "format": "date",
          "comment": "The date on which the interest rate lock agreement between a borrower and a lender expires."
        },
        "loan_rate_lock_period_days_count": {
          "type": "integer",
          "comment": "The number of days that a rate lock remains in effect."
        },
        "loan_to_value_ltv_ratio_percent": {
          "type": "decimal",
          "comment": "loan-to-value (LTV) ratio is a measure of a loan's size relative to the value of the property securing the loan. \nIt is expressed as rdf:type percentage, calculated as the loan amount divided by the property value. \n\nThe LTV ratio helps lenders assess risk by indicating the percentage of the property's value that is being borrowed. A higher LTV ratio can make a loan riskier for the lender, as there is less equity in the property to act as collateral in the event of default. Lenders often use the LTV ratio as one of several factors when determining loan approval and the interest rate to be charged on a loan."
        },
        "mi_monthly_payment_amount": {
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "type": "decimal",
          "comment": "Cost of mortgage insurance that a borrower pays as part of a monthly mortgage payment."
        },
        "monthly_payment": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "A mortgage monthly payment is the amount of money that a borrower pays each month to repay the mortgage loan, which includes both the principal and interest on the loan. In addition to the principal and interest, the mortgage monthly payment may also include other expenses such as property taxes, homeowners insurance, and mortgage insurance, depending on the loan type and requirements. These additional expenses are often collected and held in an escrow account by the lender, who then pays them on behalf of the borrower."
        },
        "mortgage_type": {
          "enum": [
            "Conventional",
            "Va",
            "UsdaRuralDevelopment",
            "LocalAgency",
            "Fha",
            "PublicAndIndianHousing",
            "StateAgency",
            null
          ],
          "comment": "Mortgage type refers to the specific type of mortgage loan that a borrower obtains to finance the purchase or refinance of a property. There are several different types of mortgage loans, each with its own set of features, eligibility requirements, and interest rates.",
          "type": [
            "string",
            "null"
          ]
        },
        "note_rate_percent": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 3,
            "totalDigits": 6
          },
          "comment": "The actual interest rate as disclosed on the note."
        },
        "original_interest_rate_discount_percent": {
          "type": "decimal",
          "comment": "For mortgages with an initial discounted rate (teaser rate), the difference in percentage points between the initial discounted rate and the fully indexed rate."
        },
        "origination_points_rate_percent": {
          "restrictions": {
            "fractionDigits": 3,
            "totalDigits": 6
          },
          "type": "decimal",
          "comment": "Origination points are fees paid to a lender to compensate for the process of originating a mortgage loan. These points are a form of pre-paid interest and are expressed a percentage of the loan amount. "
        },
        "piti": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "PITI stands for Principal, Interest, Taxes, and Insurance. PITI is a commonly used pricing schema in the mortgage industry to calculate the total monthly payment that a borrower will need to make on a mortgage loan."
        },
        "rebate_amount": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 2,
            "totalDigits": 10
          },
          "comment": "A rebate or credit that a borrower receives from a lender for a mortgage loan. It is essentially a financial incentive provided to the borrower, often in the form of a credit towards closing costs or other loan-related expenses."
        },
        "rebate_percent": {
          "type": "decimal",
          "restrictions": {
            "fractionDigits": 3,
            "totalDigits": 6
          },
          "comment": "The percentage of the loan amount that a borrower receives as a rebate or credit from the lender in connection with a mortgage loan."
        },
        "subsequent_rate_adjustment_frequency_months_count": {
          "type": "integer",
          "comment": "The frequency, in months, with which a subsequent rate associated with an adjustable rate mortgage will change."
        }
      },
      "relationships": {
        "has_closing_adjustment_item": {
          "targets": [
            "closing_adjustment_item"
          ],
          "comment": "Item provided in a closing disclosure that either adds a cost to, or subtracts a cost from, closing costs."
        },
        "has_loan": {
          "targets": [
            "loan"
          ],
          "comment": "A loan timeline is a chronological record capturing the progression and changes of loan attributes over time."
        }
      }
    },
    {
      "type": "ticket",
      "container_name": "ticket",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "actual_behavior": {
          "type": "string"
        },
        "completed_date": {
          "type": "dateTime",
          "comment": "Completed date is the date on which a ticket was completed."
        },
        "created_date": {
          "type": "dateTime",
          "comment": "Created date refers to the date that the health metric was created."
        },
        "documentation_uri": {
          "type": "string"
        },
        "due_date": {
          "type": "dateTime",
          "comment": "Due date is the date on which a ticket is due to be resolved."
        },
        "emergency_indicator": {
          "type": "string",
          "comment": "."
        },
        "expected_behavior": {
          "type": "string"
        },
        "has_transaction": {
          "type": "string",
          "comment": "Indicates the transaction(s) related to a particular entity."
        },
        "other_comments": {
          "type": "string",
          "comment": "."
        },
        "points": {
          "enum": [
            "Defect",
            "FeatureRequest",
            "Question",
            null
          ],
          "comment": "Points are a unit of measurement used to estimate the time required to complete a ticket. They are used to measure the complexity and size of the work involved in delivering a feature or functionality.",
          "type": [
            "string",
            "null"
          ]
        },
        "remote_ticket_identifier": {
          "type": "string",
          "comment": "A remote ticket identifier is a unique code or string of characters assigned by a remote ticket management system to a specific ticket that is used to uniquely identify and access that ticket."
        },
        "repeat_indicator": {
          "type": "string",
          "comment": "."
        },
        "request_type": {
          "enum": [
            "Defect",
            "FeatureRequest",
            "Question",
            null
          ],
          "comment": "A ticket request type is a categorization of tickets based on the customer's perspective of their nature or purpose.",
          "type": [
            "string",
            "null"
          ]
        },
        "status": {
          "enum": [
            "CREATED",
            "CREATING",
            "Archived",
            "Deprecated",
            "Inactive",
            "Active",
            null
          ],
          "comment": "Status of the communication channel indicating its current state, such as active, inactive, or deprecated.",
          "type": [
            "string",
            "null"
          ]
        },
        "system_changes": {
          "type": "string",
          "comment": "."
        },
        "ticket_category": {
          "type": "string",
          "comment": "Category of the ticket"
        },
        "ticket_identifier": {
          "type": "string",
          "comment": "A ticket identifier is a unique code or string of characters assigned internally to a specific ticket that is used to uniquely identify and access that ticket."
        },
        "ticket_status": {
          "enum": [
            "Next",
            "Done",
            "New",
            "InProgress",
            "Backlog",
            "Completed",
            null
          ],
          "comment": "A ticket status is a way to track the progress and current state of a ticket or issue in a ticket management system.",
          "type": [
            "string",
            "null"
          ]
        },
        "ticket_text": {
          "type": "string",
          "comment": "Ticket text provides information about the ticket and its requirements. The description serves as a reference to the support team who is responsible for resolving the ticket."
        },
        "ticket_type": {
          "enum": [
            "Ticket",
            "Milestone",
            "Task",
            "Acceptance",
            null
          ],
          "comment": "A ticket type is a categorization of tickets based on their nature or purpose. Ticket types are used to help support teams prioritize and manage their work more efficiently.",
          "type": [
            "string",
            "null"
          ]
        },
        "title": {
          "type": "string",
          "comment": "A title is a unique label given to a ticket that is used to distinguish it from other tickets in the Staircase ticket management system. A title typically reflects the purpose of the ticket, and is often designed to be easy to remember and to quickly communicate support needs."
        }
      },
      "relationships": {
        "has_collection": {
          "targets": [
            "collection"
          ],
          "comment": "A transaction can be linked to one or more Staircase collections. A Staircase collection is a group of data elements that represent a request to, or a response from, a specific Staircase product. A request collection typically contains all of the data elements that a product needs to perform an operation, and a response collection contains the results of the operation performed."
        },
        "has_dependency": {
          "targets": [
            "member",
            "task",
            "ticket"
          ],
          "comment": "A ticket may have a dependency on other tickets, meaning that it cannot be addressed until tickets it is dependent on are completed."
        },
        "has_member": {
          "targets": [
            "member"
          ],
          "comment": "A member is a person who is assigned to support an object (e.g. ticket, project) in the Staircase platform."
        },
        "has_product": {
          "targets": [
            "product"
          ],
          "comment": "The 'has_product' property connects an invocation to a specific product or service that is being affected or manipulated through the invocation. This relationship can help in understanding the interaction between the invocation and the corresponding product"
        },
        "has_project": {
          "targets": [
            "project"
          ],
          "comment": "A project is a group of related objects that is associated with a particular project or initiative. It is a way to organize and manage requests and issues that are related to a specific goal or objective."
        },
        "has_requester": {
          "targets": [
            "person"
          ]
        },
        "has_requestor": {
          "targets": [
            "company"
          ],
          "comment": "Has_requestor refers to the company that created the ticket."
        },
        "has_tag": {
          "targets": [
            "tag"
          ],
          "comment": "A tag is a label or keyword that is used to categorize or classify objects based on their nature, priority, or other characteristics."
        },
        "has_task_project": {
          "targets": [
            "task_project"
          ],
          "comment": "Task management system of the product"
        },
        "has_transaction": {
          "targets": [
            "transaction"
          ],
          "comment": "Indicates the transaction(s) related to a particular entity."
        }
      }
    },
    {
      "type": "ticket",
      "container_name": "tickets",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "actual_behavior": {
          "type": "string"
        },
        "completed_date": {
          "type": "dateTime"
        },
        "created_date": {
          "type": "dateTime"
        },
        "documentation_uri": {
          "type": "string"
        },
        "due_date": {
          "type": "dateTime"
        },
        "emergency_indicator": {
          "type": "string"
        },
        "expected_behavior": {
          "type": "string"
        },
        "has_transaction": {
          "type": "string"
        },
        "other_comments": {
          "type": "string"
        },
        "points": {
          "enum": [
            "Defect",
            "FeatureRequest",
            "Question",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "remote_ticket_identifier": {
          "type": "string"
        },
        "repeat_indicator": {
          "type": "string"
        },
        "request_type": {
          "enum": [
            "Defect",
            "FeatureRequest",
            "Question",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "status": {
          "enum": [
            "CREATED",
            "CREATING",
            "Archived",
            "Deprecated",
            "Inactive",
            "Active",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "system_changes": {
          "type": "string"
        },
        "ticket_category": {
          "type": "string"
        },
        "ticket_identifier": {
          "type": "string"
        },
        "ticket_status": {
          "enum": [
            "Next",
            "Done",
            "New",
            "InProgress",
            "Backlog",
            "Completed",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "ticket_text": {
          "type": "string"
        },
        "ticket_type": {
          "enum": [
            "Ticket",
            "Milestone",
            "Task",
            "Acceptance",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "title": {
          "type": "string"
        }
      },
      "relationships": {
        "has_collection": {
          "targets": [
            "collection"
          ]
        },
        "has_dependency": {
          "targets": [
            "member",
            "task",
            "ticket"
          ]
        },
        "has_member": {
          "targets": [
            "member"
          ]
        },
        "has_product": {
          "targets": [
            "product"
          ]
        },
        "has_project": {
          "targets": [
            "project"
          ]
        },
        "has_requester": {
          "targets": [
            "person"
          ]
        },
        "has_requestor": {
          "targets": [
            "company"
          ]
        },
        "has_tag": {
          "targets": [
            "tag"
          ]
        },
        "has_task_project": {
          "targets": [
            "task_project"
          ]
        },
        "has_transaction": {
          "targets": [
            "transaction"
          ]
        }
      }
    },
    {
      "type": "trace",
      "container_name": "traces",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "created_at": {
          "type": "dateTime",
          "comment": "Created_at refers to the date and time when a transaction was created."
        }
      },
      "relationships": {}
    },
    {
      "type": "transaction",
      "container_name": "transactions",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "created_at": {
          "type": "dateTime",
          "comment": "Created_at refers to the date and time when a transaction was created."
        },
        "fuzzy_searchable_indicator": {
          "type": "boolean",
          "comment": "A fuzzy_searchable_indicator identifies if a transaction can be associated with a fuzzy search. A fuzzy search is a type of search algorithm that allows for approximate matching of search terms or phrases. Unlike exact search, where the search terms must match the query exactly to return results, fuzzy search takes into account possible spelling mistakes, variations in word order, and other minor variations in the query."
        },
        "label": {
          "type": "string",
          "comment": "Label refers to a description or identifier assigned to a specific field in software called Desktop Underwriter. Labels in Desktop Underwriter provide clear indications of what information is expected to be entered in each field. They help guide users through the loan application process by providing context and specifying the type of data required. "
        },
        "serialise_to_graph_indicator": {
          "type": "boolean",
          "comment": "A serialize_to_graph_indicator identifies if a transaction can be converted from a standard data structure into a graph data structure. Data to graph serialization is a process where data structures are converted into graph-based nodes and edges, which represent the data and the relationships between the data, respectively. This allows the data to be represented in a graph database, which can be used to store, query, and analyze large amounts of connected data."
        },
        "transaction_identifier": {
          "type": "string",
          "comment": "A transaction identifier is a unique identifier assigned to a transaction in order to distinguish it from other transactions and track its progress throughout a product lifecycle. A Staircase transaction contains collections of data related to an instance of a transaction type, where transaction type represents a line of business in the mortgage industry."
        }
      },
      "relationships": {
        "has_collection": {
          "targets": [
            "collection"
          ],
          "comment": "A transaction can be linked to one or more Staircase collections. A Staircase collection is a group of data elements that represent a request to, or a response from, a specific Staircase product. A request collection typically contains all of the data elements that a product needs to perform an operation, and a response collection contains the results of the operation performed."
        },
        "has_device": {
          "targets": [
            "device"
          ],
          "comment": "Device refers to any physical component or peripheral that is part of a computer system and performs specific functions or tasks."
        },
        "has_health_metric": {
          "targets": [
            "health_metric"
          ],
          "comment": "Health metric refers to a measurement or indicator that assesses the operational status, performance, or overall well-being of a system, application, or component."
        },
        "has_site": {
          "targets": [
            "site"
          ],
          "comment": "Site refers to the parameters and behaviors of a website created using the Console product. The website typically offers functionality related to various Staircase products."
        },
        "has_trace": {
          "targets": [
            "trace"
          ],
          "comment": "Transaction has a trace. A trace is a sequence of events that are related to a specific transaction."
        }
      }
    },
    {
      "type": "utility",
      "container_name": "utilities",
      "is_deprecated": false,
      "deprecated_properties": [
        "cooling_system_type_other_description",
        "heating_system_type_other_description",
        "public_utility_type_other_description",
        "sewer_type_other_description",
        "water_source_type_other_description"
      ],
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "required": true,
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "required": true,
              "comment": "The URL endpoint for the request.",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[a-zA-Z0-9._-]+)*$"
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    null
                  ],
                  "comment": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "comment": "Query string parameters for the request, where each key can have multiple values."
              }
            },
            "body": {
              "type": "string",
              "comment": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "oneOf": [
                {
                  "type": "object",
                  "comment": "JSON object data"
                },
                {
                  "type": "array",
                  "comment": "JSON array data"
                }
              ]
            }
          },
          "comment": "HTTP request configuration for retrieving this data.",
          "minProperties": 1
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data.",
          "minLength": 1
        },
        "cooling_system_type": {
          "enum": [
            "CeilingFans",
            "Electric",
            "Ductless",
            "Hybrid",
            "CentralAir",
            "WindowAirConditioner",
            "WholeHouseFan",
            "CeilingFan",
            "GeothermalCooling",
            "Zoned",
            null
          ],
          "comment": "Refers to the type of cooling system used in the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "cooling_system_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the cooling system type.",
          "minLength": 1
        },
        "heating_system_type": {
          "enum": [
            "ElectricFurnace",
            "Electric",
            "GasFurnace",
            "Ductless",
            "Radiant",
            "Solar",
            "HeatPump",
            "Central",
            "Baseboard",
            "Gas",
            null
          ],
          "comment": "Refers to the type of heating system used in the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "heating_system_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the heating system type.",
          "minLength": 1
        },
        "public_utility_type": {
          "enum": [
            "WaterAvailable",
            "ElectricityAvailable",
            "SewerAvailable",
            "NaturalGasAvailable",
            "CableAvailable",
            "UndergroundUtilities",
            null
          ],
          "comment": "Refers to the type of public utility available to a structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "public_utility_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the public utility type.",
          "minLength": 1
        },
        "sewer_type": {
          "enum": [
            "Sanitary",
            "Public",
            "Combined",
            "Septic",
            null
          ],
          "comment": "Refers to the type of sewer used in the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "sewer_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the sewer type.",
          "minLength": 1
        },
        "water_source_type": {
          "enum": [
            "Well",
            "Aquifer",
            "Public",
            null
          ],
          "comment": "Refers to the type of water source used in the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "water_source_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture additional detail when Other is selected for the water source type.",
          "minLength": 1
        },
        "plumbing_system_type": {
          "enum": [
            "Copper",
            "PEX",
            "PVC",
            "GalvanizedSteel",
            "CastIron",
            null
          ],
          "comment": "Refers to the type of plumbing system used in the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "plumbing_system_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to capture detail when Other is selected for the plumbing system type.",
          "minLength": 1
        },
        "electrical_panel_capacity": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Describes the amperage or capacity of the electrical panel, e.g. '100 Amp', '200 Amp'.",
          "minLength": 1
        },
        "electrical_wiring_type": {
          "enum": [
            "Copper",
            "Aluminum",
            "KnobAndTube",
            null
          ],
          "comment": "Specifies the type of electrical wiring used in the structure.",
          "type": [
            "string",
            "null"
          ]
        },
        "hvac_condensing_unit_present": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Indicates if an HVAC condensing unit is present, as visible externally.",
          "minLength": 1
        },
        "electrical_wiring_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field for describing the electrical wiring type if Other is selected.",
          "minLength": 1
        },
        "solar_panel_present": {
          "type": "boolean",
          "comment": "Indicates whether solar panels are installed on the structure."
        },
        "solar_panel_type": {
          "enum": [
            "Photovoltaic",
            "SolarThermal",
            "Hybrid",
            null
          ],
          "comment": "Specifies the type of solar panel system.",
          "type": [
            "string",
            "null"
          ]
        },
        "solar_panel_type_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "A free-form field to describe the solar panel system when Other is selected.",
          "minLength": 1
        },
        "smart_home_features": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "SmartThermostat",
              "SmartLighting",
              "SmartLocks",
              "SmartSecuritySystem",
              "SmartIrrigation",
              "VoiceControlIntegration",
              "EnergyMonitoring",
              null
            ],
            "minLength": 1
          },
          "comment": "List of smart home features installed in the property.",
          "minItems": 1
        },
        "smart_home_features_other_description": {
          "type": [
            "string",
            "null"
          ],
          "comment": "Free-form description if any smart home features are not covered by the predefined list.",
          "minLength": 1
        },
        "hvac_unit_condition": {
          "enum": [
            "New",
            "Good",
            "Rusty",
            "Leaking",
            "Damaged",
            null
          ],
          "comment": "Visible exterior condition of the HVAC condensing unit, if present.",
          "type": [
            "string",
            "null"
          ]
        },
        "solar_inverter_visible": {
          "type": "boolean",
          "comment": "Whether a solar inverter box is visible on exterior or utility closet."
        },
        "hvac_unit_issues": {
          "enum": [
            "RustyUnit",
            "LeakingPipes",
            "MissingGrilles",
            "ObstructedVent",
            "WornFanHousing",
            null
          ],
          "comment": "Visual indicators of HVAC or external unit deterioration.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    {
      "type": "work_week",
      "container_name": "work_weeks",
      "is_deprecated": false,
      "deprecated_properties": [],
      "properties": {
        "iteration_end_date": {
          "type": "string",
          "format": "date",
          "comment": "Iteration end date is the last day in a time period defined as an iteration."
        },
        "iteration_start_date": {
          "type": "string",
          "format": "date",
          "comment": "Iteration start date is the first day in a time period defined as an iteration."
        },
        "work_week_number": {
          "type": "integer",
          "comment": "Work week number is a numeric identifier used to identify a week and interation."
        }
      },
      "relationships": {}
    }
  ],
  "tags": [
    {
      "name": "blockchain",
      "classes": [
        "property",
        "property_seed",
        "unnormalized_address",
        "address",
        "company",
        "structure",
        "tax",
        "loan",
        "school",
        "property_improvements",
        "sales_history",
        "person",
        "layout",
        "school",
        "utility",
        "environmental_risk",
        "homeowners_association",
        "residency_policy",
        "file",
        "relationship",
        "nearby_location",
        "lot",
        "appliance",
        "flood_storm_information",
        "property_ranking_overall",
        "environment_characteristics",
        "safety_security",
        "transportation_access",
        "tax_exemption",
        "tax_authority",
        "fact_sheet",
        "deed"
      ]
    }
  ],
  "data_groups": [
    {
      "label": "Seed",
      "relationships": [
        {
          "type": "relationship",
          "from": "property_seed",
          "to": "unnormalized_address",
          "relationship_type": "property_seed"
        },
        {
          "type": "relationship",
          "from": "property_seed",
          "to": "fact_sheet",
          "relationship_type": "property_seed_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "unnormalized_address",
          "to": "fact_sheet",
          "relationship_type": "unnormalized_address_has_fact_sheet"
        }
      ],
      "required": [
        "property_seed"
      ],
      "example": {
        "label": "Seed",
        "relationships": {
          "property_seed": {
            "/": "bafkreifvrvlob5uulheto2xk7i2nlzwmcktz4azqabwxjin374hx4xlcqy"
          }
        }
      },
      "one_to_many_relationships": [
        "property_seed_has_fact_sheet",
        "unnormalized_address_has_fact_sheet"
      ]
    },
    {
      "label": "County",
      "relationships": [
        {
          "type": "relationship",
          "from": "person",
          "to": "property",
          "relationship_type": "person_has_property"
        },
        {
          "type": "relationship",
          "from": "company",
          "to": "property",
          "relationship_type": "company_has_property"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "address",
          "relationship_type": "property_has_address"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "tax",
          "relationship_type": "property_has_tax"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "lot",
          "relationship_type": "property_has_lot"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "sales_history",
          "relationship_type": "property_has_sales_history"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "file",
          "relationship_type": "property_has_file"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "layout",
          "relationship_type": "property_has_layout"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "flood_storm_information",
          "relationship_type": "property_has_flood_storm_information"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "structure",
          "relationship_type": "property_has_structure"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "utility",
          "relationship_type": "property_has_utility"
        },
        {
          "type": "relationship",
          "from": "sales_history",
          "to": "person",
          "relationship_type": "sales_history_has_person"
        },
        {
          "type": "relationship",
          "from": "person",
          "to": "address",
          "relationship_type": "person_has_mailing_address"
        },
        {
          "type": "relationship",
          "from": "sales_history",
          "to": "company",
          "relationship_type": "sales_history_has_company"
        },
        {
          "type": "relationship",
          "from": "person",
          "to": "fact_sheet",
          "relationship_type": "person_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "fact_sheet",
          "relationship_type": "property_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "company",
          "to": "fact_sheet",
          "relationship_type": "company_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "address",
          "to": "fact_sheet",
          "relationship_type": "address_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "tax",
          "to": "fact_sheet",
          "relationship_type": "tax_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "lot",
          "to": "fact_sheet",
          "relationship_type": "lot_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "sales_history",
          "to": "fact_sheet",
          "relationship_type": "sales_history_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "file",
          "to": "fact_sheet",
          "relationship_type": "file_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "layout",
          "to": "fact_sheet",
          "relationship_type": "layout_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "flood_storm_information",
          "to": "fact_sheet",
          "relationship_type": "flood_storm_information_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "structure",
          "to": "fact_sheet",
          "relationship_type": "structure_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "utility",
          "to": "fact_sheet",
          "relationship_type": "utility_has_fact_sheet"
        }
      ],
      "required": [
        "property_has_layout",
        "property_has_sales_history",
        "property_has_tax",
        "property_has_address",
        "property_has_lot"
      ],
      "one_to_many_relationships": [
        "person_has_property",
        "company_has_property",
        "property_has_layout",
        "property_has_tax",
        "property_has_sales_history",
        "property_has_file",
        "sales_history_has_deed",
        "sales_history_has_person",
        "sales_history_has_company",
        "person_has_fact_sheet",
        "person_has_mailing_address",
        "property_has_fact_sheet",
        "company_has_fact_sheet",
        "address_has_fact_sheet",
        "tax_has_fact_sheet",
        "lot_has_fact_sheet",
        "sales_history_has_fact_sheet",
        "file_has_fact_sheet",
        "layout_has_fact_sheet",
        "flood_storm_information_has_fact_sheet",
        "structure_has_fact_sheet",
        "utility_has_fact_sheet"
      ],
      "example": {
        "label": "County",
        "relationships": {
          "person_has_property": [
            {
              "/": "bafkreicdtvdzss47eel6okgvzv6c6co3tkv7d4fwx4wp7n4bs6gslb2gba"
            },
            {
              "/": "bafkreidzro523dk7zkfqzienwn4eio4iq35pmhzxifly6wbpyfek5rgpte"
            }
          ],
          "company_has_property": null,
          "property_has_address": {
            "/": "bafkreid7bf5pb7bll4olvumytym7tbzjwzkaxrnxiozdkb3nuo4dnbc4je"
          },
          "property_has_lot": {
            "/": "bafkreidylw5jrlio4asadqqenoy3wk6azxjvwp437e7565to7h4f5ddphy"
          },
          "property_has_tax": [
            {
              "/": "bafkreigmmghpncijpfr5monng5qxdwgpvvyzajhat7fucjheua3c5h3lmq"
            }
          ],
          "property_has_sales_history": [
            {
              "/": "bafkreidjo3g4n5snuaxqclgrwuh6btip2o34747p4shox4kgvsuqrrjptq"
            },
            {
              "/": "bafkreihuj7btmxz3zfzx47osvujeydqbtswbuzbuh5vc62pkhlrzgx7pe4"
            },
            {
              "/": "bafkreidix6gbqysohcsls3d3m32j6zqksx2zrukh4pq5v74hfoc7omwbfm"
            }
          ],
          "property_has_layout": [
            {
              "/": "bafkreidnoz6j275bb6x4drfdwzsqur4sdsalgenkdgghurvqewejoejxr4"
            },
            {
              "/": "bafkreieyyikuau6s7cmrb6rwh3yvews6ry7zqqphccla3j7igusrgryevu"
            }
          ],
          "property_has_flood_storm_information": null,
          "property_has_file": null,
          "property_has_structure": {
            "/": "bafkreiakd73fjbsd7qftzctpps5in5d3pncynou7cx5kwjlpe22gu6sds4"
          },
          "property_has_utility": null,
          "sales_history_has_person": [
            {
              "/": "bafkreicuvu4vnccqxsxvimquk4ikih2etnabgu3qvixvyotqjufyglnekq"
            },
            {
              "/": "bafkreih5t5aksctw6cfl5h2dj5do5l5yk2bzoez62zqk4epml2qsafgsja"
            }
          ],
          "sales_history_has_company": null
        }
      }
    },
  
    {
      "label": "Photo",
      "relationships": [
        {
          "type": "relationship",
          "from": "property_seed",
          "to": "file",
          "relationship_type": "property_seed_has_file"
        },
        {
          "type": "relationship",
          "from": "property_seed",
          "to": "fact_sheet",
          "relationship_type": "property_seed_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "file",
          "to": "fact_sheet",
          "relationship_type": "file_has_fact_sheet"
        }
      ],
      "required": [
        "property_seed_has_file"
      ],
      "one_to_many_relationships": [
        "property_seed_has_file",
        "property_seed_has_fact_sheet",
        "file_has_fact_sheet"
      ]
    },
    {
      "label": "Photo Metadata",
      "relationships": [
        {
          "type": "relationship",
          "from": "property",
          "to": "lot",
          "relationship_type": "property_has_lot"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "layout",
          "relationship_type": "property_has_layout"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "structure",
          "relationship_type": "property_has_structure"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "utility",
          "relationship_type": "property_has_utility"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "appliance",
          "relationship_type": "property_has_appliance"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "file",
          "relationship_type": "property_has_file"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "appliance",
          "relationship_type": "property_has_appliance"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "fact_sheet",
          "relationship_type": "property_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "lot",
          "to": "fact_sheet",
          "relationship_type": "lot_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "layout",
          "to": "fact_sheet",
          "relationship_type": "layout_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "structure",
          "to": "fact_sheet",
          "relationship_type": "structure_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "utility",
          "to": "fact_sheet",
          "relationship_type": "utility_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "appliance",
          "to": "fact_sheet",
          "relationship_type": "appliance_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "file",
          "to": "fact_sheet",
          "relationship_type": "file_has_fact_sheet"
        }
      ],
      "required": [
        "property_has_layout"
      ],
      "one_to_many_relationships": [
        "property_has_layout",
        "property_has_appliance",
        "property_has_file",
        "property_has_utility",
        "property_has_structure",
        "property_has_lot",
        "property_has_fact_sheet",
        "lot_has_fact_sheet",
        "layout_has_fact_sheet",
        "structure_has_fact_sheet",
        "utility_has_fact_sheet",
        "appliance_has_fact_sheet",
        "file_has_fact_sheet"
      ]
    },
    {
      "label": "HOA ",
      "relationships": [
        {
          "type": "relationship",
          "from": "property",
          "to": "homeowners_association",
          "relationship_type": "property_has_homeowners_association"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "hoa_policy",
          "relationship_type": "property_has_hoa_policy"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "fact_sheet",
          "relationship_type": "property_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "homeowners_association",
          "to": "fact_sheet",
          "relationship_type": "homeowners_association_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "hoa_policy",
          "to": "fact_sheet",
          "relationship_type": "hoa_policy_has_fact_sheet"
        }
      ],
      "required": [
        "property_has_homeowners_association",
        "property_has_hoa_policy"
      ],
      "one_to_many_relationships": [
        "property_has_fact_sheet",
        "homeowners_association_has_fact_sheet",
        "hoa_policy_has_fact_sheet"
      ]
    },
    {
      "label": "Mortgage",
      "relationships": [
        {
          "type": "relationship",
          "from": "property",
          "to": "loan",
          "relationship_type": "property_has_loan"
        },
        {
          "type": "relationship",
          "from": "person",
          "to": "loan",
          "relationship_type": "person_has_loan"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "fact_sheet",
          "relationship_type": "property_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "loan",
          "to": "fact_sheet",
          "relationship_type": "loan_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "person",
          "to": "fact_sheet",
          "relationship_type": "person_has_fact_sheet"
        }
      ],
      "required": [
        "property_has_loan",
        "person_has_loan"
      ],
      "one_to_many_relationships": [
        "person_has_loan",
        "property_has_fact_sheet",
        "loan_has_fact_sheet",
        "person_has_fact_sheet"
      ]
    },
    {
      "label": "Property Ranking",
      "relationships": [
        {
          "type": "relationship",
          "from": "property",
          "to": "property_ranking_overall",
          "relationship_type": "property_has_ranking"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "fact_sheet",
          "relationship_type": "property_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "property_ranking_overall",
          "to": "fact_sheet",
          "relationship_type": "property_ranking_overall_has_fact_sheet"
        }
      ],
      "required": [
        "property_has_ranking"
      ],
      "one_to_many_relationships": [
        "property_has_fact_sheet",
        "property_ranking_overall_has_fact_sheet"
      ]
    },
    {
      "label": "Property Improvement",
      "relationships": [
        {
          "type": "relationship",
          "from": "property",
          "to": "file",
          "relationship_type": "property_has_permit"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "property_improvement",
          "relationship_type": "property_has_property_improvement"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "fact_sheet",
          "relationship_type": "property_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "file",
          "to": "fact_sheet",
          "relationship_type": "file_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "property_improvement",
          "to": "fact_sheet",
          "relationship_type": "property_improvement_has_fact_sheet"
        }
      ],
      "required": [
        "property_has_permit",
        "property_has_property_improvement"
      ],
      "one_to_many_relationships": [
        "property_has_permit",
        "property_has_property_improvement",
        "property_has_fact_sheet",
        "file_has_fact_sheet",
        "property_improvement_has_fact_sheet"
      ]
    },
    {
      "label": "Environment Characteristics",
      "relationships": [
        {
          "type": "relationship",
          "from": "property",
          "to": "environment_characteristics",
          "relationship_type": "property_has_environment_characteristics"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "fact_sheet",
          "relationship_type": "property_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "environment_characteristics",
          "to": "fact_sheet",
          "relationship_type": "environment_characteristics_has_fact_sheet"
        }
      ],
      "required": [
        "property_has_environment_characteristics"
      ],
      "one_to_many_relationships": [
        "property_has_fact_sheet",
        "environment_characteristics_has_fact_sheet"
      ]
    },
    {
      "label": "Safety and Security",
      "relationships": [
        {
          "type": "relationship",
          "from": "property",
          "to": "safety_security",
          "relationship_type": "property_has_safety_security"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "fact_sheet",
          "relationship_type": "property_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "safety_security",
          "to": "fact_sheet",
          "relationship_type": "safety_security_has_fact_sheet"
        }
      ],
      "required": [
        "property_has_safety_security"
      ],
      "one_to_many_relationships": [
        "property_has_fact_sheet",
        "safety_security_has_fact_sheet"
      ]
    },
    {
      "label": "Transportation and Access",
      "relationships": [
        {
          "type": "relationship",
          "from": "property",
          "to": "transportation_access",
          "relationship_type": "property_has_transportation_access"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "fact_sheet",
          "relationship_type": "property_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "transportation_access",
          "to": "fact_sheet",
          "relationship_type": "transportation_access_has_fact_sheet"
        }
      ],
      "required": [
        "property_has_transportation_access"
      ],
      "one_to_many_relationships": [
        "property_has_fact_sheet",
        "transportation_access_has_fact_sheet"
      ]
    },
    {
      "label": "School",
      "relationships": [
        {
          "type": "relationship",
          "from": "property",
          "to": "school",
          "relationship_type": "property_has_school"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "fact_sheet",
          "relationship_type": "property_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "school",
          "to": "fact_sheet",
          "relationship_type": "school_has_fact_sheet"
        }
      ],
      "required": [
        "property_has_school"
      ],
      "one_to_many_relationships": [
        "property_has_school",
        "property_has_fact_sheet",
        "school_has_fact_sheet"
      ]
    },
    {
      "label": "Tax",
      "relationships": [
        {
          "type": "relationship",
          "from": "property",
          "to": "tax",
          "relationship_type": "property_has_tax"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "file",
          "relationship_type": "property_has_file"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "tax_authority",
          "relationship_type": "property_has_tax_authority"
        },
        {
          "type": "relationship",
          "from": "tax",
          "to": "file",
          "relationship_type": "tax_has_file"
        },
        {
          "type": "relationship",
          "from": "tax",
          "to": "tax_exemption",
          "relationship_type": "tax_has_exemptions"
        },
        {
          "type": "relationship",
          "from": "tax",
          "to": "tax_authority",
          "relationship_type": "tax_has_authority"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "fact_sheet",
          "relationship_type": "property_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "tax",
          "to": "fact_sheet",
          "relationship_type": "tax_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "file",
          "to": "fact_sheet",
          "relationship_type": "file_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "tax_authority",
          "to": "fact_sheet",
          "relationship_type": "tax_authority_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "tax_exemption",
          "to": "fact_sheet",
          "relationship_type": "tax_exemption_has_fact_sheet"
        }
      ],
      "required": [
        "property_has_tax",
        "property_has_file",
        "tax_has_file"
      ],
      "one_to_many_relationships": [
        "property_has_tax",
        "property_has_file",
        "tax_has_file",
        "property_has_fact_sheet",
        "tax_has_fact_sheet",
        "file_has_fact_sheet",
        "tax_authority_has_fact_sheet",
        "tax_exemption_has_fact_sheet"
      ]
    },
    {
      "label": "Sales History",
      "relationships": [
        {
          "type": "relationship",
          "from": "property",
          "to": "sales_history",
          "relationship_type": "property_has_sales_history"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "file",
          "relationship_type": "property_has_file"
        },
        {
          "type": "relationship",
          "from": "sales_history",
          "to": "file",
          "relationship_type": "property_has_sales_history"
        },
        {
          "type": "relationship",
          "from": "property",
          "to": "fact_sheet",
          "relationship_type": "property_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "sales_history",
          "to": "fact_sheet",
          "relationship_type": "sales_history_has_fact_sheet"
        },
        {
          "type": "relationship",
          "from": "file",
          "to": "fact_sheet",
          "relationship_type": "file_has_fact_sheet"
        }
      ],
      "required": [
        "property_has_tax",
        "property_has_file",
        "tax_has_file"
      ],
      "one_to_many_relationships": [
        "property_has_tax",
        "property_has_file",
        "tax_has_file",
        "property_has_fact_sheet",
        "sales_history_has_fact_sheet",
        "file_has_fact_sheet"
      ]
    }
  ],
  "common_patterns": [
    {
      "type": "currency",
      "properties": {
        "type": "string",
        "pattern": "^\\$?([0-9]{1,3}(,[0-9]{3})*|[0-9]+)(\\.[0-9]{2})?$",
        "format": "currency",
        "description": "Standard currency format supporting dollar signs, commas for thousands, and exactly 2 decimal places"
      }
    },
    {
      "type": "date",
      "format": "date",
      "properties": {
        "type": "string",
        "format": "date",
        "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
        "description": "Date in isoformat. F.e : 2025-07-06"
      }
    },
    {
      "type": "uri",
      "properties": {
        "type": "string",
        "pattern": "^https?://[\\w\\-]+(\\.[\\w\\-]+)+([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?^=%&/~\\+#])?$",
        "format": "uri",
        "description": "Standard HTTP/HTTPS URL format"
      }
    },
    {
      "type": "ipfs_uri",
      "properties": {
        "type": "string",
        "format": "ipfs_uri",
        "pattern": "^ipfs://[A-Za-z0-9]{46,59}$",
        "description": "IPFS URI format with content identifier (CID)"
      }
    },
    {
      "type": "rate_percent",
      "properties": {
        "type": "string",
        "format": "rate_percent",
        "pattern": "^\\d+\\.\\d{3}$",
        "description": "Interest rate format with exactly 3 decimal places (e.g., 5.250)"
      }
    }
  ]
}