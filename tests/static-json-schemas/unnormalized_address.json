{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "unnormalized_address",
  "description": "JSON Schema for unnormalized_address class in Elephant Lexicon",
  "properties": {
    "full_address": {
      "type": "string",
      "minLength": 1,
      "description": "The street address of the property including street number, street name, city, and state and postal code. Format: '123 Main, Springfield, IL' or '456 Oak Ave, Chicago, IL 1003'."
    },
    "latitude": {
      "type": [
        "number",
        "null"
      ],
      "description": "Latitude is a coordinate that specifies the north-south position of a point on the Earth's surface. It is an angular measurement, usually expressed in degrees, with values ranging from -90째 at the South Pole to +90째 at the North Pole."
    },
    "longitude": {
      "type": [
        "number",
        "null"
      ],
      "description": "Longitude is a coordinate that specifies the east-west position of a point on the Earth's surface. It is an angular measurement, usually expressed in degrees, with values ranging from -180째 to +180째."
    },
    "source_http_request": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "PATCH",
            null
          ]
        },
        "url": {
          "type": "string",
          "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[#a-zA-Z0-9._%-]+)*$",
          "description": "The URL endpoint for the request."
        },
        "headers": {
          "type": "object",
          "properties": {
            "content-type": {
              "type": "string",
              "enum": [
                "application/json",
                "multipart/form-data",
                "text/xml",
                "application/x-www-form-urlencoded",
                null
              ],
              "description": "Content-Type header for the request, indicating the media type of the resource."
            }
          },
          "additionalProperties": false
        },
        "multiValueQueryString": {
          "type": "object",
          "description": "Query string parameters for the request, where each key can have multiple values."
        },
        "body": {
          "type": "string",
          "description": "The body of the request, which may contain JSON or other data formats."
        },
        "json": {
          "type": [
            "object",
            "array"
          ],
          "description": "the JSON data that is returned from the request."
        }
      },
      "required": [
        "method",
        "url"
      ],
      "additionalProperties": false,
      "description": "HTTP request configuration for retrieving this data."
    },
    "entry_http_request": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "PATCH",
            null
          ]
        },
        "url": {
          "type": "string",
          "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[#a-zA-Z0-9._%-]+)*$",
          "description": "The URL endpoint for the request."
        },
        "headers": {
          "type": "object",
          "properties": {
            "content-type": {
              "type": "string",
              "enum": [
                "application/json",
                "multipart/form-data",
                "text/xml",
                "application/x-www-form-urlencoded",
                null
              ],
              "description": "Content-Type header for the request, indicating the media type of the resource."
            }
          },
          "additionalProperties": false
        },
        "multiValueQueryString": {
          "type": "object",
          "description": "Query string parameters for the request, where each key can have multiple values."
        },
        "body": {
          "type": "string",
          "description": "The body of the request, which may contain JSON or other data formats."
        },
        "json": {
          "type": [
            "object",
            "array"
          ],
          "description": "the JSON data that is returned from the request."
        }
      },
      "required": [
        "method",
        "url"
      ],
      "additionalProperties": false,
      "description": "HTTP request configuration for retrieving this data."
    },
    "request_identifier": {
      "type": [
        "string",
        "null"
      ],
      "minLength": 1,
      "description": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data."
    },
    "county_jurisdiction": {
      "type": "string",
      "enum": [
        "Dallas",
        "Miami Dade",
        "Broward",
        "Palm Beach",
        "Lee",
        "Hillsborough",
        "Orange",
        "Pinellas",
        "Polk",
        "Duval",
        "Brevard",
        "Pasco",
        "Volusia",
        "Sarasota",
        "Collier",
        "Marion",
        "Manatee",
        "Charlotte",
        "Lake",
        "Osceola",
        "St. Lucie",
        "Seminole",
        "Escambia",
        "St. Johns",
        "Citrus",
        "Bay",
        "Santa Rosa",
        "Hernando",
        "Okaloosa",
        "Highlands",
        "Leon",
        "Alachua",
        "Clay",
        "Sumter",
        "Putnam",
        "Martin",
        "Indian River",
        "Walton",
        "Monroe",
        "Flagler",
        "Nassau",
        "Levy",
        "Washington",
        "Jackson",
        "Suwannee",
        "Columbia",
        "Hendry",
        "Okeechobee",
        "Gadsden",
        "Wakulla",
        "DeSoto",
        "Gulf",
        "Taylor",
        "Franklin",
        "Dixie",
        "Madison",
        "Bradford",
        "Hardee",
        "Gilchrist",
        "Holmes",
        "Calhoun",
        "Hamilton",
        "Baker",
        "Jefferson",
        "Glades",
        "Lafayette",
        "Union",
        "Liberty",
        "Fort Bend",
        "Collin",
        "Allegheny",
        "Hunt",
        "Alameda",
        "Alpine",
        "Amador",
        "Butte",
        "Calaveras",
        "Colusa",
        "Contra Costa",
        "Del Norte",
        "El Dorado",
        "Fresno",
        "Glenn",
        "Humboldt",
        "Imperial",
        "Inyo",
        "Kern",
        "Kings",
        "Lake",
        "Lassen",
        "Los Angeles",
        "Madera",
        "Marin",
        "Mariposa",
        "Mendocino",
        "Merced",
        "Modoc",
        "Mono",
        "Monterey",
        "Napa",
        "Nevada",
        "Orange",
        "Placer",
        "Plumas",
        "Riverside",
        "Sacramento",
        "San Benito",
        "San Bernardino",
        "San Diego",
        "San Francisco",
        "San Joaquin",
        "San Luis Obispo",
        "San Mateo",
        "Santa Barbara",
        "Santa Clara",
        "Santa Cruz",
        "Shasta",
        "Sierra",
        "Siskiyou",
        "Solano",
        "Sonoma",
        "Stanislaus",
        "Sutter",
        "Tehama",
        "Trinity",
        "Tulare",
        "Tuolumne",
        "Ventura",
        "Yolo",
        "Yuba"
      ],
      "description": "The name of the county or local jurisdiction that has authority over the property for tax assessment and administrative purposes. Should not include the word 'County' in the value."
    }
  },
  "required": [
    "full_address",
    "source_http_request",
    "request_identifier",
    "county_jurisdiction"
  ],
  "additionalProperties": false,
  "allOf": [
    {
      "if": {
        "properties": {
          "source_http_request": {
            "type": "object"
          }
        }
      },
      "then": {
        "properties": {
          "source_http_request": {
            "allOf": [
              {
                "if": {
                  "properties": {
                    "method": {
                      "enum": [
                        "GET"
                      ]
                    }
                  }
                },
                "then": {
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "body"
                        ]
                      },
                      {
                        "required": [
                          "json"
                        ]
                      },
                      {
                        "required": [
                          "headers"
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "method": {
                      "enum": [
                        "POST",
                        "PUT",
                        "PATCH"
                      ]
                    },
                    "headers": {
                      "properties": {
                        "content-type": {
                          "const": "application/json"
                        }
                      }
                    }
                  }
                },
                "then": {
                  "required": [
                    "json"
                  ],
                  "not": {
                    "required": [
                      "body"
                    ]
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "method": {
                      "enum": [
                        "POST",
                        "PUT",
                        "PATCH"
                      ]
                    },
                    "headers": {
                      "properties": {
                        "content-type": {
                          "not": {
                            "const": "application/json"
                          }
                        }
                      }
                    }
                  }
                },
                "then": {
                  "required": [
                    "body"
                  ],
                  "not": {
                    "required": [
                      "json"
                    ]
                  }
                }
              },
              {
                "if": {
                  "required": [
                    "json"
                  ]
                },
                "then": {
                  "properties": {
                    "headers": {
                      "required": [
                        "content-type"
                      ],
                      "properties": {
                        "content-type": {
                          "const": "application/json"
                        }
                      }
                    }
                  }
                }
              },
              {
                "if": {
                  "required": [
                    "body"
                  ]
                },
                "then": {
                  "properties": {
                    "headers": {
                      "required": [
                        "content-type"
                      ],
                      "properties": {
                        "content-type": {
                          "not": {
                            "const": "application/json"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ]
}