{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "address",
  "description": "JSON Schema for address class in Elephant Lexicon",
  "oneOf": [
    {
      "type": "object",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[#a-zA-Z0-9._%-]+)*$",
              "description": "The URL endpoint for the request."
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    "application/x-www-form-urlencoded",
                    null
                  ],
                  "description": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object"
            },
            "body": {
              "type": "string",
              "description": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "type": [
                "object",
                "array"
              ]
            }
          },
          "required": [
            "method",
            "url"
          ],
          "additionalProperties": false,
          "description": "HTTP request configuration for retrieving this data."
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data."
        },
        "city_name": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^[A-Z\\s\\-']+$",
          "minLength": 1,
          "description": "City name refers to the name of the city in which the address is located. Must be in all capital letters."
        },
        "country_code": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "Country code is a code that represents the country in which the address is located."
        },
        "county_name": {
          "type": "string",
          "enum": [
            "Dallas",
            "Miami Dade",
            "Broward",
            "Palm Beach",
            "Lee",
            "Hillsborough",
            "Orange",
            "Pinellas",
            "Polk",
            "Duval",
            "Brevard",
            "Pasco",
            "Volusia",
            "Sarasota",
            "Collier",
            "Marion",
            "Manatee",
            "Charlotte",
            "Lake",
            "Osceola",
            "St. Lucie",
            "Seminole",
            "Escambia",
            "St. Johns",
            "Citrus",
            "Bay",
            "Santa Rosa",
            "Hernando",
            "Okaloosa",
            "Highlands",
            "Leon",
            "Alachua",
            "Clay",
            "Sumter",
            "Putnam",
            "Martin",
            "Indian River",
            "Walton",
            "Monroe",
            "Flagler",
            "Nassau",
            "Levy",
            "Washington",
            "Jackson",
            "Suwannee",
            "Columbia",
            "Hendry",
            "Okeechobee",
            "Gadsden",
            "Wakulla",
            "DeSoto",
            "Gulf",
            "Taylor",
            "Franklin",
            "Dixie",
            "Madison",
            "Bradford",
            "Hardee",
            "Gilchrist",
            "Holmes",
            "Calhoun",
            "Hamilton",
            "Baker",
            "Jefferson",
            "Glades",
            "Lafayette",
            "Union",
            "Liberty",
            "Fort Bend",
            "Collin",
            "Allegheny",
            "Hunt",
            "Alameda",
            "Alpine",
            "Amador",
            "Butte",
            "Calaveras",
            "Colusa",
            "Contra Costa",
            "Del Norte",
            "El Dorado",
            "Fresno",
            "Glenn",
            "Humboldt",
            "Imperial",
            "Inyo",
            "Kern",
            "Kings",
            "Lake",
            "Lassen",
            "Los Angeles",
            "Madera",
            "Marin",
            "Mariposa",
            "Mendocino",
            "Merced",
            "Modoc",
            "Mono",
            "Monterey",
            "Napa",
            "Nevada",
            "Orange",
            "Placer",
            "Plumas",
            "Riverside",
            "Sacramento",
            "San Benito",
            "San Bernardino",
            "San Diego",
            "San Francisco",
            "San Joaquin",
            "San Luis Obispo",
            "San Mateo",
            "Santa Barbara",
            "Santa Clara",
            "Santa Cruz",
            "Shasta",
            "Sierra",
            "Siskiyou",
            "Solano",
            "Sonoma",
            "Stanislaus",
            "Sutter",
            "Tehama",
            "Trinity",
            "Tulare",
            "Tuolumne",
            "Ventura",
            "Yolo",
            "Yuba"
          ],
          "description": "County name refers to the name of the county in which the address is located."
        },
        "latitude": {
          "type": [
            "number",
            "null"
          ],
          "description": "Latitude is a coordinate that specifies the north-south position of a point on the Earth's surface. It is an angular measurement, usually expressed in degrees, with values ranging from -90째 at the South Pole to +90째 at the North Pole."
        },
        "longitude": {
          "type": [
            "number",
            "null"
          ],
          "description": "Longitude is a coordinate that specifies the east-west position of a point on the Earth's surface. It is an angular measurement, usually expressed in degrees, with values ranging from -180째 to +180째."
        },
        "municipality_name": {
          "type": [
            "string",
            "null"
          ],
          "description": "he incorporated city, town, or village in which the property is located, responsible for providing local government services and regulations."
        },
        "plus_four_postal_code": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\d{4}$",
          "minLength": 1,
          "description": "A postal code plus four, also known as a ZIP code plus four (in the United States) is a numerical extension to a postal code."
        },
        "postal_code": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\d{5}$",
          "minLength": 1,
          "description": "A postal code, also known as a ZIP code (in the United States) or postcode (in many other countries), is a numerical code used by postal services to identify specific geographic areas for efficient mail sorting and delivery."
        },
        "state_code": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^[A-Z]{2}$",
          "minLength": 1,
          "description": "State code is a code that represents the state in which the address is located."
        },
        "unit_identifier": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "A unit identifier is a reference to the specific unit, suite, apartment, or other secondary identifier associated with an address. It is used to differentiate individual units within a larger building or complex."
        },
        "route_number": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "A route number is a unique identifier assigned to a specific transportation route, such as a road, highway, or public transit line. It is used to distinguish one route from another and is often displayed on signs or maps."
        },
        "township": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "A township is a 6-mile by 6-mile square of land, covering 36 square miles. Townships are numbered north or south from a designated baseline. In this case, Township 45 refers to the 45th tier of townships from the baseline."
        },
        "range": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": " A range describes the east-west position of a township relative to a principal meridian. Range 24E means the township is located 24 tiers east of the principal meridian"
        },
        "section": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "Each township is divided into 36 sections, with each section being 1 square mile (640 acres). Section 03 refers to the third section within its township"
        },
        "block": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "A block is a further subdivision within a plat (a recorded land division), often used in urban or planned developments. Block 0000G refers to a specific block within that recorded subdivision"
        },
        "lot": {
          "type": [
            "string",
            "null"
          ],
          "description": "A specific parcel or unit of land within a subdivision or plat, identified by a unique lot number or code assigned during the subdivision platting process."
        },
        "unnormalized_address": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "The original, unprocessed address as it appears in source data, preserving the raw format and any inconsistencies."
        }
      },
      "required": [
        "source_http_request",
        "request_identifier",
        "latitude",
        "longitude",
        "unnormalized_address"
      ],
      "additionalProperties": false,
      "description": "Address with unnormalized format"
    },
    {
      "type": "object",
      "properties": {
        "source_http_request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "enum": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                null
              ]
            },
            "url": {
              "type": "string",
              "pattern": "^https?://[a-zA-Z0-9.-]+(:[0-9]+)?(/[#a-zA-Z0-9._%-]+)*$",
              "description": "The URL endpoint for the request."
            },
            "headers": {
              "type": "object",
              "properties": {
                "content-type": {
                  "type": "string",
                  "enum": [
                    "application/json",
                    "multipart/form-data",
                    "text/xml",
                    "application/x-www-form-urlencoded",
                    null
                  ],
                  "description": "Content-Type header for the request, indicating the media type of the resource."
                }
              },
              "additionalProperties": false
            },
            "multiValueQueryString": {
              "type": "object"
            },
            "body": {
              "type": "string",
              "description": "The body of the request, which may contain JSON or other data formats."
            },
            "json": {
              "type": [
                "object",
                "array"
              ]
            }
          },
          "required": [
            "method",
            "url"
          ],
          "additionalProperties": false,
          "description": "HTTP request configuration for retrieving this data."
        },
        "request_identifier": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "Identifier value that should be substituted into the source HTTP request to retrieve this specific data."
        },
        "city_name": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^[A-Z\\s\\-']+$",
          "minLength": 1,
          "description": "City name refers to the name of the city in which the address is located. Must be in all capital letters."
        },
        "country_code": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "Country code is a code that represents the country in which the address is located."
        },
        "county_name": {
          "type": "string",
          "enum": [
            "Dallas",
            "Miami Dade",
            "Broward",
            "Palm Beach",
            "Lee",
            "Hillsborough",
            "Orange",
            "Pinellas",
            "Polk",
            "Duval",
            "Brevard",
            "Pasco",
            "Volusia",
            "Sarasota",
            "Collier",
            "Marion",
            "Manatee",
            "Charlotte",
            "Lake",
            "Osceola",
            "St. Lucie",
            "Seminole",
            "Escambia",
            "St. Johns",
            "Citrus",
            "Bay",
            "Santa Rosa",
            "Hernando",
            "Okaloosa",
            "Highlands",
            "Leon",
            "Alachua",
            "Clay",
            "Sumter",
            "Putnam",
            "Martin",
            "Indian River",
            "Walton",
            "Monroe",
            "Flagler",
            "Nassau",
            "Levy",
            "Washington",
            "Jackson",
            "Suwannee",
            "Columbia",
            "Hendry",
            "Okeechobee",
            "Gadsden",
            "Wakulla",
            "DeSoto",
            "Gulf",
            "Taylor",
            "Franklin",
            "Dixie",
            "Madison",
            "Bradford",
            "Hardee",
            "Gilchrist",
            "Holmes",
            "Calhoun",
            "Hamilton",
            "Baker",
            "Jefferson",
            "Glades",
            "Lafayette",
            "Union",
            "Liberty",
            "Fort Bend",
            "Collin",
            "Allegheny",
            "Hunt",
            "Alameda",
            "Alpine",
            "Amador",
            "Butte",
            "Calaveras",
            "Colusa",
            "Contra Costa",
            "Del Norte",
            "El Dorado",
            "Fresno",
            "Glenn",
            "Humboldt",
            "Imperial",
            "Inyo",
            "Kern",
            "Kings",
            "Lake",
            "Lassen",
            "Los Angeles",
            "Madera",
            "Marin",
            "Mariposa",
            "Mendocino",
            "Merced",
            "Modoc",
            "Mono",
            "Monterey",
            "Napa",
            "Nevada",
            "Orange",
            "Placer",
            "Plumas",
            "Riverside",
            "Sacramento",
            "San Benito",
            "San Bernardino",
            "San Diego",
            "San Francisco",
            "San Joaquin",
            "San Luis Obispo",
            "San Mateo",
            "Santa Barbara",
            "Santa Clara",
            "Santa Cruz",
            "Shasta",
            "Sierra",
            "Siskiyou",
            "Solano",
            "Sonoma",
            "Stanislaus",
            "Sutter",
            "Tehama",
            "Trinity",
            "Tulare",
            "Tuolumne",
            "Ventura",
            "Yolo",
            "Yuba"
          ],
          "description": "County name refers to the name of the county in which the address is located."
        },
        "latitude": {
          "type": [
            "number",
            "null"
          ],
          "description": "Latitude is a coordinate that specifies the north-south position of a point on the Earth's surface. It is an angular measurement, usually expressed in degrees, with values ranging from -90째 at the South Pole to +90째 at the North Pole."
        },
        "longitude": {
          "type": [
            "number",
            "null"
          ],
          "description": "Longitude is a coordinate that specifies the east-west position of a point on the Earth's surface. It is an angular measurement, usually expressed in degrees, with values ranging from -180째 to +180째."
        },
        "municipality_name": {
          "type": [
            "string",
            "null"
          ],
          "description": "he incorporated city, town, or village in which the property is located, responsible for providing local government services and regulations."
        },
        "plus_four_postal_code": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\d{4}$",
          "minLength": 1,
          "description": "A postal code plus four, also known as a ZIP code plus four (in the United States) is a numerical extension to a postal code."
        },
        "postal_code": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\d{5}$",
          "minLength": 1,
          "description": "A postal code, also known as a ZIP code (in the United States) or postcode (in many other countries), is a numerical code used by postal services to identify specific geographic areas for efficient mail sorting and delivery."
        },
        "state_code": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^[A-Z]{2}$",
          "minLength": 1,
          "description": "State code is a code that represents the state in which the address is located."
        },
        "unit_identifier": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "A unit identifier is a reference to the specific unit, suite, apartment, or other secondary identifier associated with an address. It is used to differentiate individual units within a larger building or complex."
        },
        "route_number": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "A route number is a unique identifier assigned to a specific transportation route, such as a road, highway, or public transit line. It is used to distinguish one route from another and is often displayed on signs or maps."
        },
        "township": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "A township is a 6-mile by 6-mile square of land, covering 36 square miles. Townships are numbered north or south from a designated baseline. In this case, Township 45 refers to the 45th tier of townships from the baseline."
        },
        "range": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": " A range describes the east-west position of a township relative to a principal meridian. Range 24E means the township is located 24 tiers east of the principal meridian"
        },
        "section": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "Each township is divided into 36 sections, with each section being 1 square mile (640 acres). Section 03 refers to the third section within its township"
        },
        "block": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "A block is a further subdivision within a plat (a recorded land division), often used in urban or planned developments. Block 0000G refers to a specific block within that recorded subdivision"
        },
        "lot": {
          "type": [
            "string",
            "null"
          ],
          "description": "A specific parcel or unit of land within a subdivision or plat, identified by a unique lot number or code assigned during the subdivision platting process."
        },
        "street_name": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(?!.*(\\b(E|N|NE|NW|S|SE|SW|W)\\b)).*$",
          "minLength": 1,
          "description": "A street name that doesn't contain directional abbreviations"
        },
        "street_number": {
          "type": [
            "string",
            "null"
          ],
          "minLength": 1,
          "description": "Street  number refers to the numerical part of a street address that indicates the specific location or position of a building or property along a street."
        },
        "street_pre_directional_text": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "N",
            "S",
            "E",
            "W",
            "NE",
            "NW",
            "SE",
            "SW",
            null
          ],
          "description": "Street pre directional text refers to the directional indicator or prefix added to a street name to provide additional information about the direction or orientation of the street segment. It helps to clarify the position of a particular street in relation to other streets or landmarks in a given area."
        },
        "street_post_directional_text": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "N",
            "S",
            "E",
            "W",
            "NE",
            "NW",
            "SE",
            "SW",
            null
          ],
          "description": "Street post directional text refers to the directional indicator or suffix added to a street name to provide additional information about the direction or orientation of the street segment. It helps to clarify the position of a particular street in relation to other streets or landmarks in a given area."
        },
        "street_suffix_type": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "Rds",
            "Blvd",
            "Lk",
            "Pike",
            "Ky",
            "Vw",
            "Curv",
            "Psge",
            "Ldg",
            "Mt",
            "Un",
            "Mdw",
            "Via",
            "Cor",
            "Kys",
            "Vl",
            "Pr",
            "Cv",
            "Isle",
            "Lgt",
            "Hbr",
            "Btm",
            "Hl",
            "Mews",
            "Hls",
            "Pnes",
            "Lgts",
            "Strm",
            "Hwy",
            "Trwy",
            "Skwy",
            "Is",
            "Est",
            "Vws",
            "Ave",
            "Exts",
            "Cvs",
            "Row",
            "Rte",
            "Fall",
            "Gtwy",
            "Wls",
            "Clb",
            "Frk",
            "Cpe",
            "Fwy",
            "Knls",
            "Rdg",
            "Jct",
            "Rst",
            "Spgs",
            "Cir",
            "Crst",
            "Expy",
            "Smt",
            "Trfy",
            "Cors",
            "Land",
            "Uns",
            "Jcts",
            "Ways",
            "Trl",
            "Way",
            "Trlr",
            "Aly",
            "Spg",
            "Pkwy",
            "Cmn",
            "Dr",
            "Grns",
            "Oval",
            "Cirs",
            "Pt",
            "Shls",
            "Vly",
            "Hts",
            "Clf",
            "Flt",
            "Mall",
            "Frds",
            "Cyn",
            "Lndg",
            "Mdws",
            "Rd",
            "Xrds",
            "Ter",
            "Prt",
            "Radl",
            "Grvs",
            "Rdgs",
            "Inlt",
            "Trak",
            "Byu",
            "Vlgs",
            "Ctr",
            "Ml",
            "Cts",
            "Arc",
            "Bnd",
            "Riv",
            "Flds",
            "Mtwy",
            "Msn",
            "Shrs",
            "Rue",
            "Crse",
            "Cres",
            "Anx",
            "Drs",
            "Sts",
            "Holw",
            "Vlg",
            "Prts",
            "Sta",
            "Fld",
            "Xrd",
            "Wall",
            "Tpke",
            "Ft",
            "Bg",
            "Knl",
            "Plz",
            "St",
            "Cswy",
            "Bgs",
            "Rnch",
            "Frks",
            "Ln",
            "Mtn",
            "Ctrs",
            "Orch",
            "Iss",
            "Brks",
            "Br",
            "Fls",
            "Trce",
            "Park",
            "Gdns",
            "Rpds",
            "Shl",
            "Lf",
            "Rpd",
            "Lcks",
            "Gln",
            "Pl",
            "Path",
            "Vis",
            "Lks",
            "Run",
            "Frg",
            "Brg",
            "Sqs",
            "Xing",
            "Pln",
            "Glns",
            "Blfs",
            "Plns",
            "Dl",
            "Clfs",
            "Ext",
            "Pass",
            "Gdn",
            "Brk",
            "Grn",
            "Mnr",
            "Cp",
            "Pne",
            "Spur",
            "Opas",
            "Upas",
            "Tunl",
            "Sq",
            "Lck",
            "Ests",
            "Shr",
            "Dm",
            "Mls",
            "Wl",
            "Mnrs",
            "Stra",
            "Frgs",
            "Frst",
            "Flts",
            "Ct",
            "Mtns",
            "Frd",
            "Nck",
            "Ramp",
            "Vlys",
            "Pts",
            "Bch",
            "Loop",
            "Byp",
            "Cmns",
            "Fry",
            "Walk",
            "Hbrs",
            "Dv",
            "Hvn",
            "Blf",
            "Grv",
            "Crk",
            null
          ]
        }
      },
      "required": [
        "source_http_request",
        "request_identifier",
        "city_name",
        "country_code",
        "latitude",
        "longitude",
        "plus_four_postal_code",
        "postal_code",
        "state_code",
        "street_name",
        "street_post_directional_text",
        "street_pre_directional_text",
        "street_number",
        "street_suffix_type",
        "unit_identifier",
        "route_number",
        "township",
        "range",
        "section",
        "block"
      ],
      "additionalProperties": false,
      "description": "Address with structured fields"
    }
  ],
  "allOf": [
    {
      "if": {
        "properties": {
          "source_http_request": {
            "type": "object"
          }
        }
      },
      "then": {
        "properties": {
          "source_http_request": {
            "allOf": [
              {
                "if": {
                  "properties": {
                    "method": {
                      "enum": [
                        "GET"
                      ]
                    }
                  }
                },
                "then": {
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "body"
                        ]
                      },
                      {
                        "required": [
                          "json"
                        ]
                      },
                      {
                        "required": [
                          "headers"
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "method": {
                      "enum": [
                        "POST",
                        "PUT",
                        "PATCH"
                      ]
                    },
                    "headers": {
                      "properties": {
                        "content-type": {
                          "const": "application/json"
                        }
                      }
                    }
                  }
                },
                "then": {
                  "required": [
                    "json"
                  ],
                  "not": {
                    "required": [
                      "body"
                    ]
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "method": {
                      "enum": [
                        "POST",
                        "PUT",
                        "PATCH"
                      ]
                    },
                    "headers": {
                      "properties": {
                        "content-type": {
                          "not": {
                            "const": "application/json"
                          }
                        }
                      }
                    }
                  }
                },
                "then": {
                  "required": [
                    "body"
                  ],
                  "not": {
                    "required": [
                      "json"
                    ]
                  }
                }
              },
              {
                "if": {
                  "required": [
                    "json"
                  ]
                },
                "then": {
                  "properties": {
                    "headers": {
                      "required": [
                        "content-type"
                      ],
                      "properties": {
                        "content-type": {
                          "const": "application/json"
                        }
                      }
                    }
                  }
                }
              },
              {
                "if": {
                  "required": [
                    "body"
                  ]
                },
                "then": {
                  "properties": {
                    "headers": {
                      "required": [
                        "content-type"
                      ],
                      "properties": {
                        "content-type": {
                          "not": {
                            "const": "application/json"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ]
}